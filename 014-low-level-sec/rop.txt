------> offset: 0x400372
0x400372    in al, dx
0x400373    cwde
0x400374    add [rax], al
0x400376    add bh, bh
0x400378    retf 0x7cba

------> offset: 0x400373
0x400373    cwde
0x400374    add [rax], al
0x400376    add bh, bh
0x400378    retf 0x7cba

------> offset: 0x400374
0x400374    add [rax], al
0x400376    add bh, bh
0x400378    retf 0x7cba

------> offset: 0x400376
0x400376    add bh, bh
0x400378    retf 0x7cba

------> offset: 0x400378
0x400378    retf 0x7cba

------> offset: 0x40037a
0x40037a    jl 0x4003b5
0x40037c    add [r15], cl
0x40037f    xchg esp, eax
0x400380    ret

------> offset: 0x40037c
0x40037c    add [r15], cl
0x40037f    xchg esp, eax
0x400380    ret

------> offset: 0x40037d
0x40037d    add [rdi], cl
0x40037f    xchg esp, eax
0x400380    ret

------> offset: 0x40037f
0x40037f    xchg esp, eax
0x400380    ret

------> offset: 0x400380
0x400380    ret

------> offset: 0x4003c7
0x4003c7    add rsp, 0x98
0x4003ce    pop rbx
0x4003cf    pop rbp
0x4003d0    ret

------> offset: 0x4003c8
0x4003c8    add esp, 0x98
0x4003ce    pop rbx
0x4003cf    pop rbp
0x4003d0    ret

------> offset: 0x4003ca
0x4003ca    cwde
0x4003cb    add [rax], al
0x4003cd    add [rbx+0x5d], bl
0x4003d0    ret

------> offset: 0x4003cb
0x4003cb    add [rax], al
0x4003cd    add [rbx+0x5d], bl
0x4003d0    ret

------> offset: 0x4003cc
0x4003cc    add [rax], al
0x4003ce    pop rbx
0x4003cf    pop rbp
0x4003d0    ret

------> offset: 0x4003cd
0x4003cd    add [rbx+0x5d], bl
0x4003d0    ret

------> offset: 0x4003ce
0x4003ce    pop rbx
0x4003cf    pop rbp
0x4003d0    ret

------> offset: 0x4003cf
0x4003cf    pop rbp
0x4003d0    ret

------> offset: 0x4003d2
0x4003d2    iret

------> offset: 0x400458
0x400458    out 0xe8, eax
0x40045a    retf

------> offset: 0x40045a
0x40045a    retf

------> offset: 0x40048d
0x40048d    add [rsi], al
0x40048f    add [rax], al
0x400491    pop rbx
0x400492    pop rbp
0x400493    pop r12
0x400495    ret

------> offset: 0x40048f
0x40048f    add [rax], al
0x400491    pop rbx
0x400492    pop rbp
0x400493    pop r12
0x400495    ret

------> offset: 0x400490
0x400490    add [rbx+0x5d], bl
0x400493    pop r12
0x400495    ret

------> offset: 0x400491
0x400491    pop rbx
0x400492    pop rbp
0x400493    pop r12
0x400495    ret

------> offset: 0x400492
0x400492    pop rbp
0x400493    pop r12
0x400495    ret

------> offset: 0x400493
0x400493    pop r12
0x400495    ret

------> offset: 0x400494
0x400494    pop rsp
0x400495    ret

------> offset: 0x4004f5
0x4004f5    ret 0x8341

------> offset: 0x400518
0x400518    mov byte [rdi-0x1], 0x2f
0x40051c    jmp 0x40050e
0x40051e    mov byte [rdi], 0x0
0x400521    ret

------> offset: 0x400519
0x400519    jmp far dword [r15]
0x40051c    jmp 0x40050e
0x40051e    mov byte [rdi], 0x0
0x400521    ret

------> offset: 0x40051a
0x40051a    jmp far dword [rdi]
0x40051c    jmp 0x40050e
0x40051e    mov byte [rdi], 0x0
0x400521    ret

------> offset: 0x40051c
0x40051c    jmp 0x40050e
0x40051e    mov byte [rdi], 0x0
0x400521    ret

------> offset: 0x40051d
0x40051d    mov byte [rdi], 0x0
0x400521    ret

------> offset: 0x400557
0x400557    mov byte [rbx-0x29d60038], 0x1
0x40055e    retf 0xce39

------> offset: 0x40055e
0x40055e    retf 0xce39

------> offset: 0x400562
0x400562    ret 0xcbeb

------> offset: 0x400564
0x400564    jmp 0x400531
0x400566    or eax, -0x1
0x400569    jmp 0x400531
0x40056b    ret

------> offset: 0x400566
0x400566    or eax, -0x1
0x400569    jmp 0x400531
0x40056b    ret

------> offset: 0x400567
0x400567    enter 0xebff, 0xc6
0x40056b    ret

------> offset: 0x400569
0x400569    jmp 0x400531
0x40056b    ret

------> offset: 0x4005e6
0x4005e6    call 0xffffffffff886661
0x4005eb    enter 0x108a, 0xff
0x4005ef    retf

------> offset: 0x4005eb
0x4005eb    enter 0x108a, 0xff
0x4005ef    retf

------> offset: 0x4005ed
0x4005ed    adc bh, bh
0x4005ef    retf

------> offset: 0x400656
0x400656    pop r12
0x400658    pop r13
0x40065a    pop r14
0x40065c    pop r15
0x40065e    pop rbp
0x40065f    ret

------> offset: 0x400657
0x400657    pop rsp
0x400658    pop r13
0x40065a    pop r14
0x40065c    pop r15
0x40065e    pop rbp
0x40065f    ret

------> offset: 0x400658
0x400658    pop r13
0x40065a    pop r14
0x40065c    pop r15
0x40065e    pop rbp
0x40065f    ret

------> offset: 0x400659
0x400659    pop rbp
0x40065a    pop r14
0x40065c    pop r15
0x40065e    pop rbp
0x40065f    ret

------> offset: 0x40065a
0x40065a    pop r14
0x40065c    pop r15
0x40065e    pop rbp
0x40065f    ret

------> offset: 0x40065b
0x40065b    pop rsi
0x40065c    pop r15
0x40065e    pop rbp
0x40065f    ret

------> offset: 0x40065c
0x40065c    pop r15
0x40065e    pop rbp
0x40065f    ret

------> offset: 0x40065d
0x40065d    pop rdi
0x40065e    pop rbp
0x40065f    ret

------> offset: 0x400737
0x400737    ror byte [rdi], 0x95
0x40073a    ret

------> offset: 0x400739
0x400739    xchg ebp, eax
0x40073a    ret

------> offset: 0x400790
0x400790    ret 0x8348

------> offset: 0x400799
0x400799    retf 0x394d

------> offset: 0x4007c6
0x4007c6    pop rsp
0x4007c7    iret

------> offset: 0x4007da
0x4007da    ret 0xff49

------> offset: 0x4007fe
0x4007fe    or [rax-0xb700b6], cl
0x400804    retf 0x90eb

------> offset: 0x400800
0x400800    dec qword [rax-0x1]
0x400804    retf 0x90eb

------> offset: 0x400801
0x400801    dec dword [rax-0x1]
0x400804    retf 0x90eb

------> offset: 0x400804
0x400804    retf 0x90eb

------> offset: 0x400821
0x400821    retf 0xff48

------> offset: 0x400a7c
0x400a7c    jg 0x400a09
0x400a7e    add cl, [rax-0x7d]
0x400a81    ret 0x8304

------> offset: 0x400a7e
0x400a7e    add cl, [rax-0x7d]
0x400a81    ret 0x8304

------> offset: 0x400a81
0x400a81    ret 0x8304

------> offset: 0x400ab0
0x400ab0    add eax, [rbx-0x7cb70038]
0x400ab6    ret 0xeb04

------> offset: 0x400ab2
0x400ab2    enter 0x48ff, 0x83
0x400ab6    ret 0xeb04

------> offset: 0x400ab3
0x400ab3    dec dword [rax-0x7d]
0x400ab6    ret 0xeb04

------> offset: 0x400ab4
0x400ab4    add rdx, 0x4
0x400ab8    jmp 0x400a86
0x400aba    mov [rdi], rdx
0x400abd    ret

------> offset: 0x400ab5
0x400ab5    add edx, 0x4
0x400ab8    jmp 0x400a86
0x400aba    mov [rdi], rdx
0x400abd    ret

------> offset: 0x400ab6
0x400ab6    ret 0xeb04

------> offset: 0x400ab7
0x400ab7    add al, 0xeb
0x400ab9    int 3
0x400aba    mov [rdi], rdx
0x400abd    ret

------> offset: 0x400ab8
0x400ab8    jmp 0x400a86
0x400aba    mov [rdi], rdx
0x400abd    ret

------> offset: 0x400ab9
0x400ab9    int 3
0x400aba    mov [rdi], rdx
0x400abd    ret

------> offset: 0x400aba
0x400aba    mov [rdi], rdx
0x400abd    ret

------> offset: 0x400abb
0x400abb    mov [rdi], edx
0x400abd    ret

------> offset: 0x400b1b
0x400b1b    or bh, bh
0x400b1d    retf

------> offset: 0x400d07
0x400d07    test [rip+0x5b000001], dl
0x400d0d    pop rbp
0x400d0e    pop r12
0x400d10    ret

------> offset: 0x400d08
0x400d08    adc eax, 0x5b000001
0x400d0d    pop rbp
0x400d0e    pop r12
0x400d10    ret

------> offset: 0x400d09
0x400d09    add [rax], eax
0x400d0b    add [rbx+0x5d], bl
0x400d0e    pop r12
0x400d10    ret

------> offset: 0x400d35
0x400d35    ret 0x0

------> offset: 0x400d79
0x400d79    ret 0xeac1

------> offset: 0x400d82
0x400d82    ret 0x840f

------> offset: 0x400e0a
0x400e0a    mov [rip+0x2c031f], rax
0x400e11    pop r12
0x400e13    ret

------> offset: 0x400e0b
0x400e0b    mov [rip+0x2c031f], eax
0x400e11    pop r12
0x400e13    ret

------> offset: 0x400e0c
0x400e0c    add eax, 0x2c031f
0x400e11    pop r12
0x400e13    ret

------> offset: 0x400e0e
0x400e0e    add ebp, [rax+rax]
0x400e11    pop r12
0x400e13    ret

------> offset: 0x400e0f
0x400e0f    sub al, 0x0
0x400e11    pop r12
0x400e13    ret

------> offset: 0x400e10
0x400e10    add [rcx+0x5c], al
0x400e13    ret

------> offset: 0x400e34
0x400e34    push qword 0xffffffffbf000323
0x400e39    ret 0x0

------> offset: 0x400ed4
0x400ed4    ret 0xe8c1

------> offset: 0x400f8d
0x400f8d    cmp eax, 0xe
0x400f90    mov rbp, rsp
0x400f93    ja 0x400f97
0x400f95    pop rbp
0x400f96    ret

------> offset: 0x400f90
0x400f90    mov rbp, rsp
0x400f93    ja 0x400f97
0x400f95    pop rbp
0x400f96    ret

------> offset: 0x400f91
0x400f91    mov ebp, esp
0x400f93    ja 0x400f97
0x400f95    pop rbp
0x400f96    ret

------> offset: 0x400f93
0x400f93    ja 0x400f97
0x400f95    pop rbp
0x400f96    ret

------> offset: 0x400fc5
0x400fc5    ret 0xc148

------> offset: 0x400fca
0x400fca    add rax, rdx
0x400fcd    sar rax, 0x1
0x400fd0    jnz 0x400fd4
0x400fd2    pop rbp
0x400fd3    ret

------> offset: 0x400fcb
0x400fcb    add eax, edx
0x400fcd    sar rax, 0x1
0x400fd0    jnz 0x400fd4
0x400fd2    pop rbp
0x400fd3    ret

------> offset: 0x400fcc
0x400fcc    ror byte [rax-0x2f], 0x1
0x400fcf    clc
0x400fd0    jnz 0x400fd4
0x400fd2    pop rbp
0x400fd3    ret

------> offset: 0x400fcd
0x400fcd    sar rax, 0x1
0x400fd0    jnz 0x400fd4
0x400fd2    pop rbp
0x400fd3    ret

------> offset: 0x400fce
0x400fce    sar eax, 0x1
0x400fd0    jnz 0x400fd4
0x400fd2    pop rbp
0x400fd3    ret

------> offset: 0x400fcf
0x400fcf    clc
0x400fd0    jnz 0x400fd4
0x400fd2    pop rbp
0x400fd3    ret

------> offset: 0x400fd0
0x400fd0    jnz 0x400fd4
0x400fd2    pop rbp
0x400fd3    ret

------> offset: 0x401013
0x401013    pop rbp
0x401014    mov byte [rip+0x2c0c25], 0x1
0x40101b    ret

------> offset: 0x401014
0x401014    mov byte [rip+0x2c0c25], 0x1
0x40101b    ret

------> offset: 0x401015
0x401015    add eax, 0x2c0c25
0x40101a    add ebx, esi
0x40101c    ret

------> offset: 0x401016
0x401016    and eax, 0x1002c0c
0x40101b    ret

------> offset: 0x401017
0x401017    or al, 0x2c
0x401019    add [rcx], al
0x40101b    ret

------> offset: 0x401018
0x401018    sub al, 0x0
0x40101a    add ebx, esi
0x40101c    ret

------> offset: 0x401019
0x401019    add [rcx], al
0x40101b    ret

------> offset: 0x40101a
0x40101a    add ebx, esi
0x40101c    ret

------> offset: 0x40109a
0x40109a    mov rdi, rax
0x40109d    call 0x408840
0x4010a2    leave
0x4010a3    ret

------> offset: 0x40109b
0x40109b    mov edi, eax
0x40109d    call 0x408840
0x4010a2    leave
0x4010a3    ret

------> offset: 0x40109d
0x40109d    call 0x408840
0x4010a2    leave
0x4010a3    ret

------> offset: 0x40109e
0x40109e    sahf
0x40109f    ja 0x4010a1
0x4010a1    add cl, cl
0x4010a3    ret

------> offset: 0x40109f
0x40109f    ja 0x4010a1
0x4010a1    add cl, cl
0x4010a3    ret

------> offset: 0x4010a0
0x4010a0    add [rax], al
0x4010a2    leave
0x4010a3    ret

------> offset: 0x4010a1
0x4010a1    add cl, cl
0x4010a3    ret

------> offset: 0x4010a2
0x4010a2    leave
0x4010a3    ret

------> offset: 0x4010e4
0x4010e4    outs dx, dword [rsi]
0x4010e5    add [rax], al
0x4010e7    mov eax, 0x0
0x4010ec    leave
0x4010ed    ret

------> offset: 0x4010e5
0x4010e5    add [rax], al
0x4010e7    mov eax, 0x0
0x4010ec    leave
0x4010ed    ret

------> offset: 0x4010e6
0x4010e6    add [rax+0x0], bh
0x4010ec    leave
0x4010ed    ret

------> offset: 0x4010e7
0x4010e7    mov eax, 0x0
0x4010ec    leave
0x4010ed    ret

------> offset: 0x4010e8
0x4010e8    add [rax], al
0x4010ea    add [rax], al
0x4010ec    leave
0x4010ed    ret

------> offset: 0x4010e9
0x4010e9    add [rax], al
0x4010eb    add cl, cl
0x4010ed    ret

------> offset: 0x4011a9
0x4011a9    retf 0x1

------> offset: 0x4011c2
0x4011c2    add [rax], eax
0x4011c4    add bh, bh
0x4011c6    push rbx
0x4011c7    adc [rax-0x7d], cl
0x4011ca    ret

------> offset: 0x4011c4
0x4011c4    add bh, bh
0x4011c6    push rbx
0x4011c7    adc [rax-0x7d], cl
0x4011ca    ret

------> offset: 0x4011c6
0x4011c6    push rbx
0x4011c7    adc [rax-0x7d], cl
0x4011ca    ret

------> offset: 0x4011c7
0x4011c7    adc [rax-0x7d], cl
0x4011ca    ret

------> offset: 0x4013b1
0x4013b1    ret 0x3b8

------> offset: 0x4013eb
0x4013eb    dec dword [rdi]
0x4013ed    xchg esp, eax
0x4013ee    ret 0xc031

------> offset: 0x4013ed
0x4013ed    xchg esp, eax
0x4013ee    ret 0xc031

------> offset: 0x4013ee
0x4013ee    ret 0xc031

------> offset: 0x401415
0x401415    ret 0x860f

------> offset: 0x40146e
0x40146e    cmp eax, -0x1
0x401471    jz 0x401493
0x401473    add rsp, 0x8
0x401477    ret

------> offset: 0x40146f
0x40146f    clc
0x401470    push qword [rax+0x48]
0x401474    add esp, 0x8
0x401477    ret

------> offset: 0x401470
0x401470    push qword [rax+0x48]
0x401474    add esp, 0x8
0x401477    ret

------> offset: 0x401471
0x401471    jz 0x401493
0x401473    add rsp, 0x8
0x401477    ret

------> offset: 0x401473
0x401473    add rsp, 0x8
0x401477    ret

------> offset: 0x401474
0x401474    add esp, 0x8
0x401477    ret

------> offset: 0x401484
0x401484    ret 0x1be

------> offset: 0x4015a8
0x4015a8    scasd
0x4015a9    ret

------> offset: 0x401618
0x401618    dec dword [rax+0x1]
0x40161b    iret

------> offset: 0x40168b
0x40168b    add [rcx], al
0x40168d    add [rax], al
0x40168f    add [rax+0xf], cl
0x401692    scasd
0x401693    ret

------> offset: 0x40168d
0x40168d    add [rax], al
0x40168f    add [rax+0xf], cl
0x401692    scasd
0x401693    ret

------> offset: 0x40168f
0x40168f    add [rax+0xf], cl
0x401692    scasd
0x401693    ret

------> offset: 0x4016ab
0x4016ab    ret 0x900

------> offset: 0x4016c2
0x4016c2    ret 0x2c23

------> offset: 0x4016cb
0x4016cb    pop rbp
0x4016cc    pop r12
0x4016ce    pop r13
0x4016d0    pop r14
0x4016d2    pop r15
0x4016d4    ret

------> offset: 0x4016cc
0x4016cc    pop r12
0x4016ce    pop r13
0x4016d0    pop r14
0x4016d2    pop r15
0x4016d4    ret

------> offset: 0x4016cd
0x4016cd    pop rsp
0x4016ce    pop r13
0x4016d0    pop r14
0x4016d2    pop r15
0x4016d4    ret

------> offset: 0x4016ce
0x4016ce    pop r13
0x4016d0    pop r14
0x4016d2    pop r15
0x4016d4    ret

------> offset: 0x4016cf
0x4016cf    pop rbp
0x4016d0    pop r14
0x4016d2    pop r15
0x4016d4    ret

------> offset: 0x4016d0
0x4016d0    pop r14
0x4016d2    pop r15
0x4016d4    ret

------> offset: 0x4016d1
0x4016d1    pop rsi
0x4016d2    pop r15
0x4016d4    ret

------> offset: 0x4016d2
0x4016d2    pop r15
0x4016d4    ret

------> offset: 0x4016d3
0x4016d3    pop rdi
0x4016d4    ret

------> offset: 0x401739
0x401739    mov [rip+0x2be930], rax
0x401740    xor eax, eax
0x401742    ret

------> offset: 0x40173a
0x40173a    mov [rip+0x2be930], eax
0x401740    xor eax, eax
0x401742    ret

------> offset: 0x40173b
0x40173b    add eax, 0x2be930
0x401740    xor eax, eax
0x401742    ret

------> offset: 0x40173c
0x40173c    xor cl, ch
0x40173e    sub eax, [rax]
0x401740    xor eax, eax
0x401742    ret

------> offset: 0x40173d
0x40173d    jmp 0xffffffffc071176d
0x401742    ret

------> offset: 0x40173e
0x40173e    sub eax, [rax]
0x401740    xor eax, eax
0x401742    ret

------> offset: 0x401740
0x401740    xor eax, eax
0x401742    ret

------> offset: 0x40179e
0x40179e    add [rax-0x7d], cl
0x4017a1    ret

------> offset: 0x4017df
0x4017df    call 0x5c81753f
0x4017e4    pop r13
0x4017e6    pop r14
0x4017e8    ret

------> offset: 0x4017e0
0x4017e0    pop rbx
0x4017e1    pop rbp
0x4017e2    pop r12
0x4017e4    pop r13
0x4017e6    pop r14
0x4017e8    ret

------> offset: 0x4017e1
0x4017e1    pop rbp
0x4017e2    pop r12
0x4017e4    pop r13
0x4017e6    pop r14
0x4017e8    ret

------> offset: 0x4017e2
0x4017e2    pop r12
0x4017e4    pop r13
0x4017e6    pop r14
0x4017e8    ret

------> offset: 0x4017e3
0x4017e3    pop rsp
0x4017e4    pop r13
0x4017e6    pop r14
0x4017e8    ret

------> offset: 0x4017e4
0x4017e4    pop r13
0x4017e6    pop r14
0x4017e8    ret

------> offset: 0x4017e5
0x4017e5    pop rbp
0x4017e6    pop r14
0x4017e8    ret

------> offset: 0x4017e6
0x4017e6    pop r14
0x4017e8    ret

------> offset: 0x4017e7
0x4017e7    pop rsi
0x4017e8    ret

------> offset: 0x40186e
0x40186e    add [r8-0x7b], cl
0x401872    fisttp dword [rax-0x77]
0x401875    ret 0x894c

------> offset: 0x40186f
0x40186f    add [rax-0x7b], cl
0x401872    fisttp dword [rax-0x77]
0x401875    ret 0x894c

------> offset: 0x401872
0x401872    fisttp dword [rax-0x77]
0x401875    ret 0x894c

------> offset: 0x401875
0x401875    ret 0x894c

------> offset: 0x40190f
0x40190f    xor al, 0x3
0x401911    add [rax-0x7d], cl
0x401914    clc
0x401915    dec dword [rax-0x77]
0x401918    ret

------> offset: 0x401911
0x401911    add [rax-0x7d], cl
0x401914    clc
0x401915    dec dword [rax-0x77]
0x401918    ret

------> offset: 0x401914
0x401914    clc
0x401915    dec dword [rax-0x77]
0x401918    ret

------> offset: 0x401915
0x401915    dec dword [rax-0x77]
0x401918    ret

------> offset: 0x401a28
0x401a28    mov rax, rcx
0x401a2b    pop rbx
0x401a2c    pop rbp
0x401a2d    pop r12
0x401a2f    pop r13
0x401a31    ret

------> offset: 0x401a29
0x401a29    mov eax, ecx
0x401a2b    pop rbx
0x401a2c    pop rbp
0x401a2d    pop r12
0x401a2f    pop r13
0x401a31    ret

------> offset: 0x401a2a
0x401a2a    enter 0x5d5b, 0x41
0x401a2e    pop rsp
0x401a2f    pop r13
0x401a31    ret

------> offset: 0x401a2b
0x401a2b    pop rbx
0x401a2c    pop rbp
0x401a2d    pop r12
0x401a2f    pop r13
0x401a31    ret

------> offset: 0x401a2c
0x401a2c    pop rbp
0x401a2d    pop r12
0x401a2f    pop r13
0x401a31    ret

------> offset: 0x401a2d
0x401a2d    pop r12
0x401a2f    pop r13
0x401a31    ret

------> offset: 0x401a2e
0x401a2e    pop rsp
0x401a2f    pop r13
0x401a31    ret

------> offset: 0x401a2f
0x401a2f    pop r13
0x401a31    ret

------> offset: 0x401a9e
0x401a9e    pop rbx
0x401a9f    pop rbp
0x401aa0    pop r12
0x401aa2    mov rax, rcx
0x401aa5    pop r13
0x401aa7    ret

------> offset: 0x401a9f
0x401a9f    pop rbp
0x401aa0    pop r12
0x401aa2    mov rax, rcx
0x401aa5    pop r13
0x401aa7    ret

------> offset: 0x401aa0
0x401aa0    pop r12
0x401aa2    mov rax, rcx
0x401aa5    pop r13
0x401aa7    ret

------> offset: 0x401aa1
0x401aa1    pop rsp
0x401aa2    mov rax, rcx
0x401aa5    pop r13
0x401aa7    ret

------> offset: 0x401aa2
0x401aa2    mov rax, rcx
0x401aa5    pop r13
0x401aa7    ret

------> offset: 0x401aa3
0x401aa3    mov eax, ecx
0x401aa5    pop r13
0x401aa7    ret

------> offset: 0x401b5e
0x401b5e    ret 0xfffe

------> offset: 0x401bbf
0x401bbf    sub eax, [rbx+0x8]
0x401bc2    add rsp, 0x8
0x401bc6    pop rbx
0x401bc7    pop rbp
0x401bc8    ret

------> offset: 0x401bc2
0x401bc2    add rsp, 0x8
0x401bc6    pop rbx
0x401bc7    pop rbp
0x401bc8    ret

------> offset: 0x401bc3
0x401bc3    add esp, 0x8
0x401bc6    pop rbx
0x401bc7    pop rbp
0x401bc8    ret

------> offset: 0x401bc5
0x401bc5    or [rbx+0x5d], bl
0x401bc8    ret

------> offset: 0x401c9b
0x401c9b    inc byte [rcx+0x29]
0x401c9e    retf

------> offset: 0x401dff
0x401dff    push rcx
0x401e00    add al, 0xf
0x401e02    retf 0xd289

------> offset: 0x401e00
0x401e00    add al, 0xf
0x401e02    retf 0xd289

------> offset: 0x401e02
0x401e02    retf 0xd289

------> offset: 0x401e72
0x401e72    ret 0x10eb

------> offset: 0x40230e
0x40230e    mov r8b, r13b
0x402311    retf

------> offset: 0x40230f
0x40230f    mov al, ch
0x402311    retf

------> offset: 0x40239f
0x40239f    or dh, dh
0x4023a1    ret 0xfdf

------> offset: 0x4023a1
0x4023a1    ret 0xfdf

------> offset: 0x4023cf
0x4023cf    ret 0xf01

------> offset: 0x4023e9
0x4023e9    cmovs eax, [rbx-0x76b70f1f]
0x4023f0    iret

------> offset: 0x402413
0x402413    add [rax-0x6bf0d006], eax
0x402419    ret 0xb60f

------> offset: 0x402418
0x402418    xchg esp, eax
0x402419    ret 0xb60f

------> offset: 0x402419
0x402419    ret 0xb60f

------> offset: 0x402569
0x402569    add [rax+0x1], cl
0x40256c    retf 0x8948

------> offset: 0x40256c
0x40256c    retf 0x8948

------> offset: 0x402692
0x402692    ret 0x9

------> offset: 0x402c01
0x402c01    sal byte [rbx+rdx+0x48], 0x83
0x402c06    ret 0x4901

------> offset: 0x402c03
0x402c03    adc ecx, [rax-0x7d]
0x402c06    ret 0x4901

------> offset: 0x402c06
0x402c06    ret 0x4901

------> offset: 0x402df7
0x402df7    dec dword [rax-0x77]
0x402dfa    iret

------> offset: 0x402e6e
0x402e6e    add byte [rax-0x178b7f80], 0x89
0x402e75    ret 0x8b4c

------> offset: 0x402e75
0x402e75    ret 0x8b4c

------> offset: 0x402e8b
0x402e8b    add [rdi], cl
0x402e8d    ret 0x8d49

------> offset: 0x402e8d
0x402e8d    ret 0x8d49

------> offset: 0x402ef0
0x402ef0    ret 0xdae8

------> offset: 0x402f7e
0x402f7e    and eax, [rbx]
0x402f80    add [rax-0x77], cl
0x402f83    ret

------> offset: 0x402f80
0x402f80    add [rax-0x77], cl
0x402f83    ret

------> offset: 0x402ff2
0x402ff2    add byte [rax], 0x0
0x402ff5    add cl, ch
0x402ff7    ret 0xffed

------> offset: 0x402ff3
0x402ff3    add [rax], al
0x402ff5    add cl, ch
0x402ff7    ret 0xffed

------> offset: 0x402ff5
0x402ff5    add cl, ch
0x402ff7    ret 0xffed

------> offset: 0x402ff7
0x402ff7    ret 0xffed

------> offset: 0x4034a5
0x4034a5    xchg ebp, eax
0x4034a6    ret 0x953d

------> offset: 0x4034a6
0x4034a6    ret 0x953d

------> offset: 0x40351f
0x40351f    test [rcx+rax+0x0], bl
0x403523    add [rdi], cl
0x403525    retf 0x8b41

------> offset: 0x403520
0x403520    pop rsp
0x403521    add [rax], eax
0x403523    add [rdi], cl
0x403525    retf 0x8b41

------> offset: 0x403521
0x403521    add [rax], eax
0x403523    add [rdi], cl
0x403525    retf 0x8b41

------> offset: 0x403523
0x403523    add [rdi], cl
0x403525    retf 0x8b41

------> offset: 0x403525
0x403525    retf 0x8b41

------> offset: 0x403564
0x403564    dec dword [rdi]
0x403566    retf 0xd289

------> offset: 0x4036f5
0x4036f5    retf 0x8589

------> offset: 0x40378a
0x40378a    or [rax-0x7d], cl
0x40378d    ret 0x4c08

------> offset: 0x40378d
0x40378d    ret 0x4c08

------> offset: 0x40399d
0x40399d    mov [rdi], cl
0x40399f    retf 0xd289

------> offset: 0x4039f3
0x4039f3    or [rax+0x1], cl
0x4039f6    ret

------> offset: 0x403b54
0x403b54    push rax
0x403b55    or [rdi], cl
0x403b57    retf 0xfa83

------> offset: 0x403b55
0x403b55    or [rdi], cl
0x403b57    retf 0xfa83

------> offset: 0x403b57
0x403b57    retf 0xfa83

------> offset: 0x403b59
0x403b59    cli
0x403b5a    dec dword [rdi]
0x403b5c    xchg ebp, eax
0x403b5d    ret 0xd284

------> offset: 0x403b5a
0x403b5a    dec dword [rdi]
0x403b5c    xchg ebp, eax
0x403b5d    ret 0xd284

------> offset: 0x403b5c
0x403b5c    xchg ebp, eax
0x403b5d    ret 0xd284

------> offset: 0x403b5d
0x403b5d    ret 0xd284

------> offset: 0x403c7a
0x403c7a    dec dword [rax-0x7d]
0x403c7d    ret

------> offset: 0x403ccf
0x403ccf    add [rcx-0x73], cl
0x403cd2    adc [rax+0x39], r9b
0x403cd6    retf 0x8d48

------> offset: 0x403cd2
0x403cd2    adc [rax+0x39], r9b
0x403cd6    retf 0x8d48

------> offset: 0x403cd3
0x403cd3    adc [rax+0x39], cl
0x403cd6    retf 0x8d48

------> offset: 0x403cd6
0x403cd6    retf 0x8d48

------> offset: 0x403d71
0x403d71    ret 0xf889

------> offset: 0x403e1a
0x403e1a    add al, 0xf
0x403e1d    retf 0xc80f

------> offset: 0x403e1d
0x403e1d    retf 0xc80f

------> offset: 0x403e3f
0x403e3f    ror byte [rax], 0x8b
0x403e42    push rax
0x403e43    add al, 0xf
0x403e45    retf 0xfa83

------> offset: 0x403e42
0x403e42    push rax
0x403e43    add al, 0xf
0x403e45    retf 0xfa83

------> offset: 0x403e43
0x403e43    add al, 0xf
0x403e45    retf 0xfa83

------> offset: 0x403ed0
0x403ed0    inc dword [rbx+0xfff0878]
0x403ed6    xchg ebp, eax
0x403ed7    ret 0x81e9

------> offset: 0x403ed2
0x403ed2    js 0x403edc
0x403ed4    dec dword [rdi]
0x403ed6    xchg ebp, eax
0x403ed7    ret 0x81e9

------> offset: 0x403ed4
0x403ed4    dec dword [rdi]
0x403ed6    xchg ebp, eax
0x403ed7    ret 0x81e9

------> offset: 0x403ed6
0x403ed6    xchg ebp, eax
0x403ed7    ret 0x81e9

------> offset: 0x403ed7
0x403ed7    ret 0x81e9

------> offset: 0x404063
0x404063    sub [rbp+0x1], edx
0x404066    add [rax-0x77], cl
0x404069    ret

------> offset: 0x4041b2
0x4041b2    retf 0x30b

------> offset: 0x4043bd
0x4043bd    ret 0xfff3

------> offset: 0x4045ba
0x4045ba    add r9b, bpl
0x4045bd    ret 0xfff1

------> offset: 0x4045bb
0x4045bb    add cl, ch
0x4045bd    ret 0xfff1

------> offset: 0x4045bd
0x4045bd    ret 0xfff1

------> offset: 0x4048ad
0x4048ad    add r9b, bpl
0x4048b0    iret

------> offset: 0x4048ae
0x4048ae    add cl, ch
0x4048b0    iret

------> offset: 0x404a4f
0x404a4f    ret 0xce80

------> offset: 0x404abc
0x404abc    retf 0x44f6

------> offset: 0x404afa
0x404afa    adc al, 0xe9
0x404afc    clc
0x404afd    add [rax], eax
0x404aff    add [rax-0x7d], cl
0x404b02    ret

------> offset: 0x404afc
0x404afc    clc
0x404afd    add [rax], eax
0x404aff    add [rax-0x7d], cl
0x404b02    ret

------> offset: 0x404afd
0x404afd    add [rax], eax
0x404aff    add [rax-0x7d], cl
0x404b02    ret

------> offset: 0x404b18
0x404b18    add [rdi], cl
0x404b1a    mov dh, 0x53
0x404b1c    add [rax-0x7d], ecx
0x404b1f    ret

------> offset: 0x404b1a
0x404b1a    mov dh, 0x53
0x404b1c    add [rax-0x7d], ecx
0x404b1f    ret

------> offset: 0x404b1b
0x404b1b    push rbx
0x404b1c    add [rax-0x7d], ecx
0x404b1f    ret

------> offset: 0x404b1c
0x404b1c    add [rax-0x7d], ecx
0x404b1f    ret

------> offset: 0x404c4e
0x404c4e    retf 0x7ce8

------> offset: 0x404d87
0x404d87    add [rcx-0x77], cl
0x404d8a    ret 0x75e9

------> offset: 0x404d8a
0x404d8a    ret 0x75e9

------> offset: 0x404de1
0x404de1    add [rcx-0x43], al
0x404de4    add [fs:rax], al
0x404de7    add bl, ch
0x404de9    retf

------> offset: 0x404de4
0x404de4    add [fs:rax], al
0x404de7    add bl, ch
0x404de9    retf

------> offset: 0x404de5
0x404de5    add [rax], al
0x404de7    add bl, ch
0x404de9    retf

------> offset: 0x404de7
0x404de7    add bl, ch
0x404de9    retf

------> offset: 0x404f4e
0x404f4e    add [rax-0x77], cl
0x404f52    ret 0x8348

------> offset: 0x404f7c
0x404f7c    ret 0x8001

------> offset: 0x405109
0x405109    add cl, [rax+0x1]
0x40510c    retf

------> offset: 0x4051ff
0x4051ff    retf 0xe181

------> offset: 0x40521d
0x40521d    inc ecx
0x40521f    cli
0x405220    add al, [rcx]
0x405222    retf 0xd189

------> offset: 0x40521f
0x40521f    cli
0x405220    add al, [rcx]
0x405222    retf 0xd189

------> offset: 0x405220
0x405220    add al, [rcx]
0x405222    retf 0xd189

------> offset: 0x405222
0x405222    retf 0xd189

------> offset: 0x405224
0x405224    rol ecx, 0x1
0x405226    stc
0x405227    add al, 0x1
0x405229    retf 0xe281

------> offset: 0x405226
0x405226    stc
0x405227    add al, 0x1
0x405229    retf 0xe281

------> offset: 0x405227
0x405227    add al, 0x1
0x405229    retf 0xe281

------> offset: 0x405229
0x405229    retf 0xe281

------> offset: 0x40535b
0x40535b    and al, 0xe8
0x40535d    iret

------> offset: 0x4054fe
0x4054fe    add eax, [rbx-0x6bf0fc08]
0x405504    ret 0x70e9

------> offset: 0x405500
0x405500    clc
0x405501    add ecx, [rdi]
0x405503    xchg esp, eax
0x405504    ret 0x70e9

------> offset: 0x405501
0x405501    add ecx, [rdi]
0x405503    xchg esp, eax
0x405504    ret 0x70e9

------> offset: 0x405503
0x405503    xchg esp, eax
0x405504    ret 0x70e9

------> offset: 0x405504
0x405504    ret 0x70e9

------> offset: 0x405524
0x405524    dec dword [rax-0x77]
0x405527    fucomip st0, st0
0x405529    ret

------> offset: 0x405527
0x405527    fucomip st0, st0
0x405529    ret

------> offset: 0x405575
0x405575    retf 0x4f6

------> offset: 0x405582
0x405582    add [rbx+0xf450afa], eax
0x405588    ret 0x8348

------> offset: 0x405584
0x405584    cli
0x405585    or al, [rbp+0xf]
0x405588    ret 0x8348

------> offset: 0x405585
0x405585    or al, [rbp+0xf]
0x405588    ret 0x8348

------> offset: 0x4055e3
0x4055e3    retf 0xe983

------> offset: 0x405600
0x405600    add rsp, 0x10
0x405604    pop rbx
0x405605    pop rbp
0x405606    pop r12
0x405608    ret

------> offset: 0x405601
0x405601    add esp, 0x10
0x405604    pop rbx
0x405605    pop rbp
0x405606    pop r12
0x405608    ret

------> offset: 0x405603
0x405603    adc [rbx+0x5d], bl
0x405606    pop r12
0x405608    ret

------> offset: 0x405639
0x405639    ret 0x8b48

------> offset: 0x4056c5
0x4056c5    add r8b, [r8]
0x4056c8    add [rax-0x7d], cl
0x4056cb    ret

------> offset: 0x4056c6
0x4056c6    add al, [rax]
0x4056c8    add [rax-0x7d], cl
0x4056cb    ret

------> offset: 0x405738
0x405738    and [rbx+0x5d], bl
0x40573b    pop r12
0x40573d    pop r13
0x40573f    pop r14
0x405741    ret

------> offset: 0x40603a
0x40603a    and al, 0x48
0x40603c    mov [rax+0x8], edx
0x40603f    pop rbx
0x406040    pop rbp
0x406041    pop r12
0x406043    ret

------> offset: 0x40603b
0x40603b    mov [rax+0x8], rdx
0x40603f    pop rbx
0x406040    pop rbp
0x406041    pop r12
0x406043    ret

------> offset: 0x40603c
0x40603c    mov [rax+0x8], edx
0x40603f    pop rbx
0x406040    pop rbp
0x406041    pop r12
0x406043    ret

------> offset: 0x40603d
0x40603d    push rax
0x40603e    or [rbx+0x5d], bl
0x406041    pop r12
0x406043    ret

------> offset: 0x40603e
0x40603e    or [rbx+0x5d], bl
0x406041    pop r12
0x406043    ret

------> offset: 0x4060a5
0x4060a5    add [rax], r8b
0x4060a8    pop rbx
0x4060a9    pop rbp
0x4060aa    xor eax, eax
0x4060ac    pop r12
0x4060ae    ret

------> offset: 0x4060a6
0x4060a6    add [rax], al
0x4060a8    pop rbx
0x4060a9    pop rbp
0x4060aa    xor eax, eax
0x4060ac    pop r12
0x4060ae    ret

------> offset: 0x4060a7
0x4060a7    add [rbx+0x5d], bl
0x4060aa    xor eax, eax
0x4060ac    pop r12
0x4060ae    ret

------> offset: 0x4060a8
0x4060a8    pop rbx
0x4060a9    pop rbp
0x4060aa    xor eax, eax
0x4060ac    pop r12
0x4060ae    ret

------> offset: 0x4060a9
0x4060a9    pop rbp
0x4060aa    xor eax, eax
0x4060ac    pop r12
0x4060ae    ret

------> offset: 0x4060aa
0x4060aa    xor eax, eax
0x4060ac    pop r12
0x4060ae    ret

------> offset: 0x40617f
0x40617f    mov esi, 0xffffffff89490001
0x406184    ret 0x8d48

------> offset: 0x406181
0x406181    add [rcx-0x77], cl
0x406184    ret 0x8d48

------> offset: 0x406184
0x406184    ret 0x8d48

------> offset: 0x40632a
0x40632a    add ch, cl
0x40632c    ret 0xfffd

------> offset: 0x40632c
0x40632c    ret 0xfffd

------> offset: 0x406910
0x406910    add [rax], eax
0x406912    add cl, ch
0x406914    ret

------> offset: 0x406912
0x406912    add cl, ch
0x406914    ret

------> offset: 0x4069a9
0x4069a9    add esp, 0x28
0x4069ac    pop rbx
0x4069ad    pop rbp
0x4069ae    pop r12
0x4069b0    pop r13
0x4069b2    ret

------> offset: 0x4069ab
0x4069ab    sub [rbx+0x5d], bl
0x4069ae    pop r12
0x4069b0    pop r13
0x4069b2    ret

------> offset: 0x4069d3
0x4069d3    and al, 0x74
0x4069d5    ret 0x8d48

------> offset: 0x4069e7
0x4069e7    adc al, ch
0x4069e9    ret

------> offset: 0x406a16
0x406a16    add [rax+0x1], ecx
0x406a19    ror byte [rax-0x77], 0x1
0x406a1c    ret 0xe281

------> offset: 0x406a19
0x406a19    ror byte [rax-0x77], 0x1
0x406a1c    ret 0xe281

------> offset: 0x406a1c
0x406a1c    ret 0xe281

------> offset: 0x406a2e
0x406a2e    ror byte [rdi], 0x1
0x406a30    mov dh, 0x17
0x406a32    test dl, dl
0x406a34    jnz 0x406a0f
0x406a36    ret

------> offset: 0x406a2f
0x406a2f    movzx edx, byte [rdi]
0x406a32    test dl, dl
0x406a34    jnz 0x406a0f
0x406a36    ret

------> offset: 0x406a30
0x406a30    mov dh, 0x17
0x406a32    test dl, dl
0x406a34    jnz 0x406a0f
0x406a36    ret

------> offset: 0x406a32
0x406a32    test dl, dl
0x406a34    jnz 0x406a0f
0x406a36    ret

------> offset: 0x406a33
0x406a33    sal [rbp-0x27], cl
0x406a36    ret

------> offset: 0x406a34
0x406a34    jnz 0x406a0f
0x406a36    ret

------> offset: 0x406a35
0x406a35    fpatan
0x406a37    ret

------> offset: 0x406a7b
0x406a7b    mov cl, 0x35
0x406a7d    iret

------> offset: 0x406f6f
0x406f6f    add eax, ebp
0x406f71    retf

------> offset: 0x4073bf
0x4073bf    in al, dx
0x4073c0    or al, ch
0x4073c2    retf 0x121

------> offset: 0x4073c0
0x4073c0    or al, ch
0x4073c2    retf 0x121

------> offset: 0x4073c2
0x4073c2    retf 0x121

------> offset: 0x407444
0x407444    sbb bl, ch
0x407446    iret

------> offset: 0x4074bf
0x4074bf    add [rcx-0x75], cl
0x4074c2    or [r8-0x77], r9b
0x4074c6    ret 0xc148

------> offset: 0x4074c2
0x4074c2    or [r8-0x77], r9b
0x4074c6    ret 0xc148

------> offset: 0x4074c3
0x4074c3    or [rax-0x77], cl
0x4074c6    ret 0xc148

------> offset: 0x407681
0x407681    retf 0xf66

------> offset: 0x407690
0x407690    ror byte [rax-0x7d], 0x1
0x407693    ret 0x4801

------> offset: 0x407693
0x407693    ret 0x4801

------> offset: 0x4076d5
0x4076d5    add rsp, 0x8
0x4076d9    mov rax, rsi
0x4076dc    pop rbx
0x4076dd    pop rbp
0x4076de    ret

------> offset: 0x4076d6
0x4076d6    add esp, 0x8
0x4076d9    mov rax, rsi
0x4076dc    pop rbx
0x4076dd    pop rbp
0x4076de    ret

------> offset: 0x4076d9
0x4076d9    mov rax, rsi
0x4076dc    pop rbx
0x4076dd    pop rbp
0x4076de    ret

------> offset: 0x4076da
0x4076da    mov eax, esi
0x4076dc    pop rbx
0x4076dd    pop rbp
0x4076de    ret

------> offset: 0x40776a
0x40776a    add [rax], al
0x40776c    add [rcx], dh
0x40776e    rcr byte [rbx+0x5d], 0x41
0x407772    pop rsp
0x407773    ret

------> offset: 0x40776b
0x40776b    add [rax], al
0x40776d    xor eax, eax
0x40776f    pop rbx
0x407770    pop rbp
0x407771    pop r12
0x407773    ret

------> offset: 0x40776c
0x40776c    add [rcx], dh
0x40776e    rcr byte [rbx+0x5d], 0x41
0x407772    pop rsp
0x407773    ret

------> offset: 0x40776d
0x40776d    xor eax, eax
0x40776f    pop rbx
0x407770    pop rbp
0x407771    pop r12
0x407773    ret

------> offset: 0x40776e
0x40776e    rcr byte [rbx+0x5d], 0x41
0x407772    pop rsp
0x407773    ret

------> offset: 0x407802
0x407802    add byte [rax], 0x0
0x407805    add cl, ch
0x407807    retf 0xfffe

------> offset: 0x407803
0x407803    add [rax], al
0x407805    add cl, ch
0x407807    retf 0xfffe

------> offset: 0x407805
0x407805    add cl, ch
0x407807    retf 0xfffe

------> offset: 0x407807
0x407807    retf 0xfffe

------> offset: 0x40798f
0x40798f    retf 0x840f

------> offset: 0x4079ff
0x4079ff    ret 0xf748

------> offset: 0x407a02
0x407a02    fiadd dword [rbp+0x450f48ff]
0x407a08    ret 0x8348

------> offset: 0x407a04
0x407a04    dec dword [rax+0xf]
0x407a07    ret 0x8348

------> offset: 0x407ac1
0x407ac1    push rdi
0x407ac3    ret 0xffef

------> offset: 0x407ac3
0x407ac3    ret 0xffef

------> offset: 0x407bdf
0x407bdf    add [rax+0x39], ecx
0x407be2    ret 0xeb75

------> offset: 0x407be2
0x407be2    ret 0xeb75

------> offset: 0x407c64
0x407c64    ret 0xaba

------> offset: 0x407cbb
0x407cbb    ret 0x1

------> offset: 0x407d2b
0x407d2b    ret 0x13eb

------> offset: 0x407d74
0x407d74    ret 0x5474

------> offset: 0x407da5
0x407da5    fmul dword [rax+0x39]
0x407da8    ret

------> offset: 0x407dc7
0x407dc7    add [rbp-0x77], cl
0x407dca    ret 0xf41

------> offset: 0x407dca
0x407dca    ret 0xf41

------> offset: 0x407e73
0x407e73    adc [rdx+rdx*8+0x394ce875], al
0x407e7a    ret

------> offset: 0x407eb7
0x407eb7    out dx, eax
0x407eb8    add ecx, ebp
0x407eba    ret

------> offset: 0x407eb8
0x407eb8    add ecx, ebp
0x407eba    ret

------> offset: 0x407f75
0x407f75    add [rax], al
0x407f77    add rsp, 0xd8
0x407f7e    ret

------> offset: 0x407f77
0x407f77    add rsp, 0xd8
0x407f7e    ret

------> offset: 0x407f78
0x407f78    add esp, 0xd8
0x407f7e    ret

------> offset: 0x407f7a
0x407f7a    fadd dword [rax]
0x407f7c    add [rax], al
0x407f7e    ret

------> offset: 0x407f7c
0x407f7c    add [rax], al
0x407f7e    ret

------> offset: 0x408080
0x408080    lea esp, [rbp-0x18]
0x408083    pop rbx
0x408084    pop r12
0x408086    pop r13
0x408088    pop rbp
0x408089    ret

------> offset: 0x408081
0x408081    call 0x419cc1e2
0x408087    pop rbp
0x408088    pop rbp
0x408089    ret

------> offset: 0x408083
0x408083    pop rbx
0x408084    pop r12
0x408086    pop r13
0x408088    pop rbp
0x408089    ret

------> offset: 0x408084
0x408084    pop r12
0x408086    pop r13
0x408088    pop rbp
0x408089    ret

------> offset: 0x408085
0x408085    pop rsp
0x408086    pop r13
0x408088    pop rbp
0x408089    ret

------> offset: 0x408086
0x408086    pop r13
0x408088    pop rbp
0x408089    ret

------> offset: 0x408087
0x408087    pop rbp
0x408088    pop rbp
0x408089    ret

------> offset: 0x4080a1
0x4080a1    call 0x419cc202
0x4080a7    pop rbp
0x4080a8    pop rbp
0x4080a9    ret

------> offset: 0x408218
0x408218    add eax, [rax]
0x40821a    add [rax], al
0x40821c    add [rax-0x77], cl
0x40821f    fucomip st0, st0
0x408221    retf

------> offset: 0x40821a
0x40821a    add [rax], al
0x40821c    add [rax-0x77], cl
0x40821f    fucomip st0, st0
0x408221    retf

------> offset: 0x40821c
0x40821c    add [rax-0x77], cl
0x40821f    fucomip st0, st0
0x408221    retf

------> offset: 0x40821f
0x40821f    fucomip st0, st0
0x408221    retf

------> offset: 0x408223
0x408223    add [rax], al
0x408225    pop rbx
0x408226    mov eax, ebp
0x408228    pop rbp
0x408229    pop r12
0x40822b    ret

------> offset: 0x408225
0x408225    pop rbx
0x408226    mov eax, ebp
0x408228    pop rbp
0x408229    pop r12
0x40822b    ret

------> offset: 0x408226
0x408226    mov eax, ebp
0x408228    pop rbp
0x408229    pop r12
0x40822b    ret

------> offset: 0x408330
0x408330    add byte [rax], 0x0
0x408333    add cl, ch
0x408335    ret

------> offset: 0x408331
0x408331    add [rax], al
0x408333    add cl, ch
0x408335    ret

------> offset: 0x4083e5
0x4083e5    ror byte [rdi], 0x95
0x4083e8    ret 0xdaf7

------> offset: 0x4083e7
0x4083e7    xchg ebp, eax
0x4083e8    ret 0xdaf7

------> offset: 0x4083e8
0x4083e8    ret 0xdaf7

------> offset: 0x40841a
0x40841a    jnz 0x40848c
0x40841c    nop dword [rax+0x0]
0x408420    mov eax, edx
0x408422    pop rbx
0x408423    ret

------> offset: 0x40841c
0x40841c    nop dword [rax+0x0]
0x408420    mov eax, edx
0x408422    pop rbx
0x408423    ret

------> offset: 0x408420
0x408420    mov eax, edx
0x408422    pop rbx
0x408423    ret

------> offset: 0x408422
0x408422    pop rbx
0x408423    ret

------> offset: 0x4084f1
0x4084f1    add [rax-0x77], cl
0x4084f4    mov al, [rax+0x1]
0x4084f7    add [rax], al
0x4084f9    ret

------> offset: 0x4084f2
0x4084f2    mov [rdx+0x140], rcx
0x4084f9    ret

------> offset: 0x4084f3
0x4084f3    mov [rdx+0x140], ecx
0x4084f9    ret

------> offset: 0x4084f4
0x4084f4    mov al, [rax+0x1]
0x4084f7    add [rax], al
0x4084f9    ret

------> offset: 0x4084f5
0x4084f5    add [rax], eax
0x4084f8    add bl, dh
0x4084fa    ret

------> offset: 0x4084f8
0x4084f8    add bl, dh
0x4084fa    ret

------> offset: 0x408516
0x408516    in al, dx
0x408517    or al, ch
0x408519    push rbx
0x40851a    ret 0x0

------> offset: 0x408517
0x408517    or al, ch
0x408519    push rbx
0x40851a    ret 0x0

------> offset: 0x408519
0x408519    push rbx
0x40851a    ret 0x0

------> offset: 0x40852f
0x40852f    mov al, dh
0x408531    add [rax], al
0x408533    add [rax-0x77], cl
0x408536    ret

------> offset: 0x408530
0x408530    lock add [rax], al
0x408533    add [rax-0x77], cl
0x408536    ret

------> offset: 0x408531
0x408531    add [rax], al
0x408533    add [rax-0x77], cl
0x408536    ret

------> offset: 0x408592
0x408592    loopnz 0x4085d6
0x408594    add [r8+0xf], cl
0x408598    ret 0x8948

------> offset: 0x408593
0x408593    add [r8+0xf], cl
0x408598    ret 0x8948

------> offset: 0x408595
0x408595    add [rax+0xf], cl
0x408598    ret 0x8948

------> offset: 0x408598
0x408598    ret 0x8948

------> offset: 0x4085b3
0x4085b3    mov rax, rbx
0x4085b6    pop rbx
0x4085b7    pop rbp
0x4085b8    pop r12
0x4085ba    pop r13
0x4085bc    ret

------> offset: 0x4085b4
0x4085b4    mov eax, ebx
0x4085b6    pop rbx
0x4085b7    pop rbp
0x4085b8    pop r12
0x4085ba    pop r13
0x4085bc    ret

------> offset: 0x4085b5
0x4085b5    fcomp dword [rbx+0x5d]
0x4085b8    pop r12
0x4085ba    pop r13
0x4085bc    ret

------> offset: 0x40866b
0x40866b    loopnz 0x4086af
0x40866d    add [r8+0xf], cl
0x408671    ret 0x8948

------> offset: 0x408686
0x408686    add [rax], al
0x408688    mov rax, rbx
0x40868b    pop rbx
0x40868c    pop rbp
0x40868d    pop r12
0x40868f    ret

------> offset: 0x408687
0x408687    add [rax-0x77], cl
0x40868a    fcomp dword [rbx+0x5d]
0x40868d    pop r12
0x40868f    ret

------> offset: 0x408688
0x408688    mov rax, rbx
0x40868b    pop rbx
0x40868c    pop rbp
0x40868d    pop r12
0x40868f    ret

------> offset: 0x408689
0x408689    mov eax, ebx
0x40868b    pop rbx
0x40868c    pop rbp
0x40868d    pop r12
0x40868f    ret

------> offset: 0x40868a
0x40868a    fcomp dword [rbx+0x5d]
0x40868d    pop r12
0x40868f    ret

------> offset: 0x408741
0x408741    add [rax-0x76b80000], al
0x408747    ret 0x3675

------> offset: 0x408744
0x408744    add [rax-0x77], cl
0x408747    ret 0x3675

------> offset: 0x408747
0x408747    ret 0x3675

------> offset: 0x408791
0x408791    add esp, 0x8
0x408794    pop rbx
0x408795    pop rbp
0x408796    pop r12
0x408798    pop r13
0x40879a    ret

------> offset: 0x408793
0x408793    or [rbx+0x5d], bl
0x408796    pop r12
0x408798    pop r13
0x40879a    ret

------> offset: 0x4087a3
0x4087a3    or [rcx], dh
0x4087a5    rcr byte [rbx+0x5d], 0x41
0x4087a9    pop rsp
0x4087aa    pop r13
0x4087ac    ret

------> offset: 0x4087a4
0x4087a4    xor eax, eax
0x4087a6    pop rbx
0x4087a7    pop rbp
0x4087a8    pop r12
0x4087aa    pop r13
0x4087ac    ret

------> offset: 0x4087a5
0x4087a5    rcr byte [rbx+0x5d], 0x41
0x4087a9    pop rsp
0x4087aa    pop r13
0x4087ac    ret

------> offset: 0x408ad0
0x408ad0    xor [rax+0x29], cl
0x408ad3    ret

------> offset: 0x408aef
0x408aef    add [rax-0x77], cl
0x408af2    ret 0x8949

------> offset: 0x408af2
0x408af2    ret 0x8949

------> offset: 0x408b06
0x408b06    add [rax], al
0x408b08    add [rbx+0x5d], bl
0x408b0b    pop r12
0x408b0d    pop r13
0x408b0f    ret

------> offset: 0x408b07
0x408b07    add [rax], al
0x408b09    pop rbx
0x408b0a    pop rbp
0x408b0b    pop r12
0x408b0d    pop r13
0x408b0f    ret

------> offset: 0x408b08
0x408b08    add [rbx+0x5d], bl
0x408b0b    pop r12
0x408b0d    pop r13
0x408b0f    ret

------> offset: 0x408b1a
0x408b1a    ror byte [rcx-0x77], 0x4
0x408b1e    and al, 0x74
0x408b20    ret 0x8b4c

------> offset: 0x408b1e
0x408b1e    and al, 0x74
0x408b20    ret 0x8b4c

------> offset: 0x408b52
0x408b52    jl 0x408b78
0x408b54    cmp al, ch
0x408b56    xchg esi, eax
0x408b57    ret 0x0

------> offset: 0x408b54
0x408b54    cmp al, ch
0x408b56    xchg esi, eax
0x408b57    ret 0x0

------> offset: 0x408b56
0x408b56    xchg esi, eax
0x408b57    ret 0x0

------> offset: 0x408c12
0x408c12    add [rax-0x7d], cl
0x408c15    in al, dx
0x408c16    xor [rcx-0x77], cl
0x408c19    ret 0xb941

------> offset: 0x408c15
0x408c15    in al, dx
0x408c16    xor [rcx-0x77], cl
0x408c19    ret 0xb941

------> offset: 0x408c16
0x408c16    xor [rcx-0x77], cl
0x408c19    ret 0xb941

------> offset: 0x408c19
0x408c19    ret 0xb941

------> offset: 0x408c90
0x408c90    out 0xe8, al
0x408c92    retf 0x2c0

------> offset: 0x408c92
0x408c92    retf 0x2c0

------> offset: 0x408cf3
0x408cf3    ret 0xc083

------> offset: 0x408e31
0x408e31    ret 0x8908

------> offset: 0x408f16
0x408f16    retf 0xf631

------> offset: 0x409039
0x409039    mov rax, rbp
0x40903c    mov [rbx], edx
0x40903e    pop rbx
0x40903f    pop rbp
0x409040    pop r12
0x409042    ret

------> offset: 0x40903a
0x40903a    mov eax, ebp
0x40903c    mov [rbx], edx
0x40903e    pop rbx
0x40903f    pop rbp
0x409040    pop r12
0x409042    ret

------> offset: 0x40903b
0x40903b    call 0x5d9ba3c9
0x409040    pop r12
0x409042    ret

------> offset: 0x40903c
0x40903c    mov [rbx], edx
0x40903e    pop rbx
0x40903f    pop rbp
0x409040    pop r12
0x409042    ret

------> offset: 0x40903d
0x40903d    adc ebx, [rbx+0x5d]
0x409040    pop r12
0x409042    ret

------> offset: 0x409047
0x409047    add dh, dh
0x409049    ret 0x7420

------> offset: 0x409049
0x409049    ret 0x7420

------> offset: 0x409061
0x409061    jmp 0x409036
0x409063    nop dword [rax+rax+0x0]
0x409068    xor eax, eax
0x40906a    ret

------> offset: 0x409063
0x409063    nop dword [rax+rax+0x0]
0x409068    xor eax, eax
0x40906a    ret

------> offset: 0x409065
0x409065    add [rax], r8b
0x409068    xor eax, eax
0x40906a    ret

------> offset: 0x409066
0x409066    add [rax], al
0x409068    xor eax, eax
0x40906a    ret

------> offset: 0x4090cf
0x4090cf    ror byte [rax-0x7d], 0xc4
0x4090d3    and [rbx+0x5d], bl
0x4090d6    pop r12
0x4090d8    ret

------> offset: 0x4090d0
0x4090d0    add rsp, 0x20
0x4090d4    pop rbx
0x4090d5    pop rbp
0x4090d6    pop r12
0x4090d8    ret

------> offset: 0x4090d1
0x4090d1    add esp, 0x20
0x4090d4    pop rbx
0x4090d5    pop rbp
0x4090d6    pop r12
0x4090d8    ret

------> offset: 0x4090d3
0x4090d3    and [rbx+0x5d], bl
0x4090d6    pop r12
0x4090d8    ret

------> offset: 0x4092d0
0x4092d0    or cl, [rax+0x1]
0x4092d3    ret 0x8948

------> offset: 0x409359
0x409359    add [rbx-0x7af0fe08], al
0x40935f    retf 0x2

------> offset: 0x40935f
0x40935f    retf 0x2

------> offset: 0x409483
0x409483    pop r14
0x409485    mov eax, 0xffffffffffffffff
0x40948a    pop r15
0x40948c    ret

------> offset: 0x409484
0x409484    pop rsi
0x409485    mov eax, 0xffffffffffffffff
0x40948a    pop r15
0x40948c    ret

------> offset: 0x409485
0x409485    mov eax, 0xffffffffffffffff
0x40948a    pop r15
0x40948c    ret

------> offset: 0x409489
0x409489    inc dword [rcx+0x5f]
0x40948c    ret

------> offset: 0x4095f0
0x4095f0    dec dword [rax-0x75]
0x4095f3    cmp [r8-0x77], cl
0x4095f7    ret 0x348

------> offset: 0x4095f3
0x4095f3    cmp [r8-0x77], cl
0x4095f7    ret 0x348

------> offset: 0x4095f4
0x4095f4    cmp [rax-0x77], cl
0x4095f7    ret 0x348

------> offset: 0x4095f7
0x4095f7    ret 0x348

------> offset: 0x4096b2
0x4096b2    retf 0x294c

------> offset: 0x409f0c
0x409f0c    pop rbx
0x409f0d    mov eax, 0xffffffffffffffff
0x409f12    pop rbp
0x409f13    ret

------> offset: 0x409f0d
0x409f0d    mov eax, 0xffffffffffffffff
0x409f12    pop rbp
0x409f13    ret

------> offset: 0x409f17
0x409f17    add [rbx-0x3b7cb7fe], cl
0x409f1d    sub [rbx+0x5d], bl
0x409f20    ret

------> offset: 0x409f18
0x409f18    mov eax, [rdx]
0x409f1a    add rsp, 0x28
0x409f1e    pop rbx
0x409f1f    pop rbp
0x409f20    ret

------> offset: 0x409f1a
0x409f1a    add rsp, 0x28
0x409f1e    pop rbx
0x409f1f    pop rbp
0x409f20    ret

------> offset: 0x409f1b
0x409f1b    add esp, 0x28
0x409f1e    pop rbx
0x409f1f    pop rbp
0x409f20    ret

------> offset: 0x409f1d
0x409f1d    sub [rbx+0x5d], bl
0x409f20    ret

------> offset: 0x409f2e
0x409f2e    ret 0xffb8

------> offset: 0x409f35
0x409f35    ret 0xe274

------> offset: 0x409f96
0x409f96    sbb [rax], eax
0x409f98    add [rbx+0x275fff8], al
0x409f9e    pop rbx
0x409f9f    ret

------> offset: 0x409f97
0x409f97    add [rax], al
0x409f99    cmp eax, -0x1
0x409f9c    jnz 0x409fa0
0x409f9e    pop rbx
0x409f9f    ret

------> offset: 0x409f98
0x409f98    add [rbx+0x275fff8], al
0x409f9e    pop rbx
0x409f9f    ret

------> offset: 0x409f99
0x409f99    cmp eax, -0x1
0x409f9c    jnz 0x409fa0
0x409f9e    pop rbx
0x409f9f    ret

------> offset: 0x409f9a
0x409f9a    clc
0x409f9b    push qword [rbp+0x2]
0x409f9e    pop rbx
0x409f9f    ret

------> offset: 0x409f9b
0x409f9b    push qword [rbp+0x2]
0x409f9e    pop rbx
0x409f9f    ret

------> offset: 0x409f9c
0x409f9c    jnz 0x409fa0
0x409f9e    pop rbx
0x409f9f    ret

------> offset: 0x40a0d5
0x40a0d5    retf 0x2948

------> offset: 0x40a1ef
0x40a1ef    cli
0x40a1f0    add ch, al
0x40a1f2    retf 0xfffd

------> offset: 0x40a1f0
0x40a1f0    add ch, al
0x40a1f2    retf 0xfffd

------> offset: 0x40a1f2
0x40a1f2    retf 0xfffd

------> offset: 0x40a203
0x40a203    or [rax-0x1], bh
0x40a209    pop rbx
0x40a20a    pop rbp
0x40a20b    ret

------> offset: 0x40a204
0x40a204    mov eax, 0xffffffffffffffff
0x40a209    pop rbx
0x40a20a    pop rbp
0x40a20b    ret

------> offset: 0x40a208
0x40a208    call far dword [rbx+0x5d]
0x40a20b    ret

------> offset: 0x40a3c6
0x40a3c6    ror byte [rdi], 0x95
0x40a3c9    ret 0xd284

------> offset: 0x40a3f4
0x40a3f4    push qword [rcx]
0x40a3f6    rcr byte [rbx+0x5d], 0x41
0x40a3fa    pop rsp
0x40a3fb    ret

------> offset: 0x40a461
0x40a461    ror byte [rdi], 0x95
0x40a464    ret 0x60e9

------> offset: 0x40a463
0x40a463    xchg ebp, eax
0x40a464    ret 0x60e9

------> offset: 0x40a464
0x40a464    ret 0x60e9

------> offset: 0x40a46f
0x40a46f    add [rax-0x39], cl
0x40a472    ret 0xffc0

------> offset: 0x40a472
0x40a472    ret 0xffc0

------> offset: 0x40a537
0x40a537    add [rax], al
0x40a539    add [rax+0x39], cl
0x40a53c    fmul dword [rax+0xf]
0x40a53f    ret

------> offset: 0x40a539
0x40a539    add [rax+0x39], cl
0x40a53c    fmul dword [rax+0xf]
0x40a53f    ret

------> offset: 0x40a53c
0x40a53c    fmul dword [rax+0xf]
0x40a53f    ret

------> offset: 0x40a563
0x40a563    adc [r15], r9b
0x40a566    xchg ebx, eax
0x40a567    ret 0x3948

------> offset: 0x40a564
0x40a564    adc [rdi], cl
0x40a566    xchg ebx, eax
0x40a567    ret 0x3948

------> offset: 0x40a566
0x40a566    xchg ebx, eax
0x40a567    ret 0x3948

------> offset: 0x40a567
0x40a567    ret 0x3948

------> offset: 0x40a58f
0x40a58f    ret 0xf301

------> offset: 0x40a5a0
0x40a5a0    ret 0xf189

------> offset: 0x40a63b
0x40a63b    out 0xe8, eax
0x40a63d    iret

------> offset: 0x40a65c
0x40a65c    clc
0x40a65d    add cl, [rax+0x39]
0x40a660    ret

------> offset: 0x40a65d
0x40a65d    add cl, [rax+0x39]
0x40a660    ret

------> offset: 0x40a6a5
0x40a6a5    ret 0x8d4a

------> offset: 0x40a739
0x40a739    in al, dx
0x40a73a    add byte [rax], 0x0
0x40a73d    add al, ch
0x40a73f    pop rbp
0x40a740    retf 0x2

------> offset: 0x40a73a
0x40a73a    add byte [rax], 0x0
0x40a73d    add al, ch
0x40a73f    pop rbp
0x40a740    retf 0x2

------> offset: 0x40a73b
0x40a73b    add [rax], al
0x40a73d    add al, ch
0x40a73f    pop rbp
0x40a740    retf 0x2

------> offset: 0x40a73d
0x40a73d    add al, ch
0x40a73f    pop rbp
0x40a740    retf 0x2

------> offset: 0x40a73f
0x40a73f    pop rbp
0x40a740    retf 0x2

------> offset: 0x40a766
0x40a766    mov [rbx+0x90], rax
0x40a76d    pop rbx
0x40a76e    ret

------> offset: 0x40a767
0x40a767    mov [rbx+0x90], eax
0x40a76d    pop rbx
0x40a76e    ret

------> offset: 0x40a76b
0x40a76b    add [rax], al
0x40a76d    pop rbx
0x40a76e    ret

------> offset: 0x40a76f
0x40a76f    nop
0x40a770    mov rax, 0xffffffffffffffff
0x40a777    pop rbx
0x40a778    ret

------> offset: 0x40a770
0x40a770    mov rax, 0xffffffffffffffff
0x40a777    pop rbx
0x40a778    ret

------> offset: 0x40a771
0x40a771    mov eax, 0xffffffffffffffff
0x40a777    pop rbx
0x40a778    ret

------> offset: 0x40a7b6
0x40a7b6    mov [rbx+0x10], rax
0x40a7ba    mov rax, rbx
0x40a7bd    pop rbx
0x40a7be    ret

------> offset: 0x40a7b7
0x40a7b7    mov [rbx+0x10], eax
0x40a7ba    mov rax, rbx
0x40a7bd    pop rbx
0x40a7be    ret

------> offset: 0x40a7ba
0x40a7ba    mov rax, rbx
0x40a7bd    pop rbx
0x40a7be    ret

------> offset: 0x40a7bb
0x40a7bb    mov eax, ebx
0x40a7bd    pop rbx
0x40a7be    ret

------> offset: 0x40a915
0x40a915    movzx eax, byte [rax]
0x40a918    add rsp, 0x8
0x40a91c    pop rbx
0x40a91d    pop rbp
0x40a91e    ret

------> offset: 0x40a916
0x40a916    mov dh, 0x0
0x40a918    add rsp, 0x8
0x40a91c    pop rbx
0x40a91d    pop rbp
0x40a91e    ret

------> offset: 0x40a920
0x40a920    movzx eax, byte [rdx]
0x40a923    add rsp, 0x8
0x40a927    pop rbx
0x40a928    pop rbp
0x40a929    ret

------> offset: 0x40a921
0x40a921    mov dh, 0x2
0x40a923    add rsp, 0x8
0x40a927    pop rbx
0x40a928    pop rbp
0x40a929    ret

------> offset: 0x40a972
0x40a972    and bl, ch
0x40a974    ret 0x1f0f

------> offset: 0x40a974
0x40a974    ret 0x1f0f

------> offset: 0x40aa42
0x40aa42    add [rbp+0x31], al
0x40aa45    dec dword [rax+0x39]
0x40aa48    ret 0x830f

------> offset: 0x40aa45
0x40aa45    dec dword [rax+0x39]
0x40aa48    ret 0x830f

------> offset: 0x40aa48
0x40aa48    ret 0x830f

------> offset: 0x40ab1b
0x40ab1b    add [rax], al
0x40ab1d    add [rax], al
0x40ab1f    add [rax+0x39], cl
0x40ab22    ret 0x850f

------> offset: 0x40ab1d
0x40ab1d    add [rax], al
0x40ab1f    add [rax+0x39], cl
0x40ab22    ret 0x850f

------> offset: 0x40ab1f
0x40ab1f    add [rax+0x39], cl
0x40ab22    ret 0x850f

------> offset: 0x40ab22
0x40ab22    ret 0x850f

------> offset: 0x40aba4
0x40aba4    xchg ebp, eax
0x40aba5    ret 0x8445

------> offset: 0x40aba5
0x40aba5    ret 0x8445

------> offset: 0x40ac2e
0x40ac2e    push rbx
0x40ac2f    sbb [rax+0x29], cl
0x40ac32    iret

------> offset: 0x40ac2f
0x40ac2f    sbb [rax+0x29], cl
0x40ac32    iret

------> offset: 0x40ae6f
0x40ae6f    add [rbx+0x38e9707f], cl
0x40ae75    ret 0x2

------> offset: 0x40ae75
0x40ae75    ret 0x2

------> offset: 0x40aeb8
0x40aeb8    mov [rbx+0x10], rax
0x40aebc    xor eax, eax
0x40aebe    pop rbx
0x40aebf    ret

------> offset: 0x40aeb9
0x40aeb9    mov [rbx+0x10], eax
0x40aebc    xor eax, eax
0x40aebe    pop rbx
0x40aebf    ret

------> offset: 0x40aebc
0x40aebc    xor eax, eax
0x40aebe    pop rbx
0x40aebf    ret

------> offset: 0x40aed0
0x40aed0    or dword [rbx], 0x20
0x40aed3    mov eax, 0xffffffffffffffff
0x40aed8    pop rbx
0x40aed9    ret

------> offset: 0x40aed1
0x40aed1    or esp, [rax]
0x40aed3    mov eax, 0xffffffffffffffff
0x40aed8    pop rbx
0x40aed9    ret

------> offset: 0x40aed2
0x40aed2    and [rax-0x1], bh
0x40aed8    pop rbx
0x40aed9    ret

------> offset: 0x40b009
0x40b009    cli
0x40b00a    dec dword [rax+0xf]
0x40b00d    ret 0xa0ba

------> offset: 0x40b00a
0x40b00a    dec dword [rax+0xf]
0x40b00d    ret 0xa0ba

------> offset: 0x40b00d
0x40b00d    ret 0xa0ba

------> offset: 0x40b034
0x40b034    adc [rax+0xf], cl
0x40b037    ret 0x8948

------> offset: 0x40b08f
0x40b08f    add [rax+0x29], cl
0x40b092    ret

------> offset: 0x40b0cf
0x40b0cf    or ecx, [rax+0x1]
0x40b0d2    ret 0x8949

------> offset: 0x40b0f2
0x40b0f2    call 0xffffffffec18da3f
0x40b0f7    retf

------> offset: 0x40b0f5
0x40b0f5    fsubr st0, st3
0x40b0f7    retf

------> offset: 0x40b1c5
0x40b1c5    add [r8+0xf], cl
0x40b1ca    ret 0x8b48

------> offset: 0x40b1c7
0x40b1c7    add [rax+0xf], cl
0x40b1ca    ret 0x8b48

------> offset: 0x40b29e
0x40b29e    dec byte [rax+0x21]
0x40b2a1    retf 0x8949

------> offset: 0x40b2a1
0x40b2a1    retf 0x8949

------> offset: 0x40b455
0x40b455    ror byte [rax-0x77], 0x1
0x40b458    ret 0x8b48

------> offset: 0x40b4a8
0x40b4a8    sub rax, r12
0x40b4ab    pop r12
0x40b4ad    pop r13
0x40b4af    pop r14
0x40b4b1    ret

------> offset: 0x40b4a9
0x40b4a9    sub eax, esp
0x40b4ab    pop r12
0x40b4ad    pop r13
0x40b4af    pop r14
0x40b4b1    ret

------> offset: 0x40b4aa
0x40b4aa    loopnz 0x40b4ed
0x40b4ac    pop rsp
0x40b4ad    pop r13
0x40b4af    pop r14
0x40b4b1    ret

------> offset: 0x40b558
0x40b558    loopnz 0x40b59b
0x40b55a    pop rsp
0x40b55b    pop r13
0x40b55d    pop r14
0x40b55f    ret

------> offset: 0x40b619
0x40b619    mov rax, rbp
0x40b61c    add rsp, 0x8
0x40b620    pop rbx
0x40b621    pop rbp
0x40b622    ret

------> offset: 0x40b61a
0x40b61a    mov eax, ebp
0x40b61c    add rsp, 0x8
0x40b620    pop rbx
0x40b621    pop rbp
0x40b622    ret

------> offset: 0x40b61b
0x40b61b    call 0x9053968
0x40b620    pop rbx
0x40b621    pop rbp
0x40b622    ret

------> offset: 0x40b645
0x40b645    add [rax], al
0x40b647    add rsp, 0x8
0x40b64b    pop rbx
0x40b64c    pop rbp
0x40b64d    ret

------> offset: 0x40b691
0x40b691    jo 0x40b67b
0x40b693    xchg edx, eax
0x40b694    mov eax, [rdx]
0x40b696    add [rdx+0x48], bl
0x40b699    cwde
0x40b69a    ret

------> offset: 0x40b692
0x40b692    call 0x434229
0x40b697    pop rdx
0x40b698    cdqe
0x40b69a    ret

------> offset: 0x40b693
0x40b693    xchg edx, eax
0x40b694    mov eax, [rdx]
0x40b696    add [rdx+0x48], bl
0x40b699    cwde
0x40b69a    ret

------> offset: 0x40b694
0x40b694    mov eax, [rdx]
0x40b696    add [rdx+0x48], bl
0x40b699    cwde
0x40b69a    ret

------> offset: 0x40b695
0x40b695    add al, [rax]
0x40b697    pop rdx
0x40b698    cdqe
0x40b69a    ret

------> offset: 0x40b696
0x40b696    add [rdx+0x48], bl
0x40b699    cwde
0x40b69a    ret

------> offset: 0x40b697
0x40b697    pop rdx
0x40b698    cdqe
0x40b69a    ret

------> offset: 0x40b698
0x40b698    cdqe
0x40b69a    ret

------> offset: 0x40b699
0x40b699    cwde
0x40b69a    ret

------> offset: 0x40b975
0x40b975    add [rax], eax
0x40b978    add [rax+0x5b004943], ah
0x40b97e    ret

------> offset: 0x40b978
0x40b978    add [rax+0x5b004943], ah
0x40b97e    ret

------> offset: 0x40bd12
0x40bd12    mov [rbx+0x70], ebp
0x40bd15    add rsp, 0x8
0x40bd19    pop rbx
0x40bd1a    pop rbp
0x40bd1b    ret

------> offset: 0x40bd14
0x40bd14    jo 0x40bd5e
0x40bd16    add esp, 0x8
0x40bd19    pop rbx
0x40bd1a    pop rbp
0x40bd1b    ret

------> offset: 0x40bd36
0x40bd36    retf 0x850f

------> offset: 0x40bd62
0x40bd62    dec dword [rcx]
0x40bd64    retf 0x8141

------> offset: 0x40bd64
0x40bd64    retf 0x8141

------> offset: 0x40be20
0x40be20    add [gs:rax-0x77], cl
0x40be24    fcomp dword [rbx+0x5d]
0x40be27    pop r12
0x40be29    ret

------> offset: 0x40be3d
0x40be3d    add [rax], al
0x40be3f    add [rbx+0x5d], bl
0x40be42    xor eax, eax
0x40be44    pop r12
0x40be46    ret

------> offset: 0x40be9f
0x40be9f    xchg ecx, eax
0x40bea0    add byte [rax], 0x0
0x40bea3    add [rax-0x77], cl
0x40bea6    ret 0xffb8

------> offset: 0x40bea0
0x40bea0    add byte [rax], 0x0
0x40bea3    add [rax-0x77], cl
0x40bea6    ret 0xffb8

------> offset: 0x40bea1
0x40bea1    add [rax], al
0x40bea3    add [rax-0x77], cl
0x40bea6    ret 0xffb8

------> offset: 0x40bea3
0x40bea3    add [rax-0x77], cl
0x40bea6    ret 0xffb8

------> offset: 0x40bf15
0x40bf15    or [rbx+0x5d], bl
0x40bf18    pop r12
0x40bf1a    neg eax
0x40bf1c    pop r13
0x40bf1e    ret

------> offset: 0x40bf16
0x40bf16    pop rbx
0x40bf17    pop rbp
0x40bf18    pop r12
0x40bf1a    neg eax
0x40bf1c    pop r13
0x40bf1e    ret

------> offset: 0x40bf17
0x40bf17    pop rbp
0x40bf18    pop r12
0x40bf1a    neg eax
0x40bf1c    pop r13
0x40bf1e    ret

------> offset: 0x40bf18
0x40bf18    pop r12
0x40bf1a    neg eax
0x40bf1c    pop r13
0x40bf1e    ret

------> offset: 0x40bf19
0x40bf19    pop rsp
0x40bf1a    neg eax
0x40bf1c    pop r13
0x40bf1e    ret

------> offset: 0x40bf1a
0x40bf1a    neg eax
0x40bf1c    pop r13
0x40bf1e    ret

------> offset: 0x40bf1b
0x40bf1b    fadd dword [rcx+0x5d]
0x40bf1e    ret

------> offset: 0x40c064
0x40c064    cmovz eax, r12d
0x40c068    pop rbx
0x40c069    pop rbp
0x40c06a    pop r12
0x40c06c    ret

------> offset: 0x40c065
0x40c065    cmovz eax, esp
0x40c068    pop rbx
0x40c069    pop rbp
0x40c06a    pop r12
0x40c06c    ret

------> offset: 0x40c302
0x40c302    add [rax-0x7d], ecx
0x40c305    ret 0x8801

------> offset: 0x40c305
0x40c305    ret 0x8801

------> offset: 0x40c31f
0x40c31f    add [rbx-0x7cb7fe3f], al
0x40c325    ret 0xc601

------> offset: 0x40c322
0x40c322    add [rax-0x7d], ecx
0x40c325    ret 0xc601

------> offset: 0x40c325
0x40c325    ret 0xc601

------> offset: 0x40c4ce
0x40c4ce    test [rip-0x7c000003], edx
0x40c4d4    retf 0x4140

------> offset: 0x40c4cf
0x40c4cf    adc eax, 0xffffffff83fffffd
0x40c4d4    retf 0x4140

------> offset: 0x40c4d4
0x40c4d4    retf 0x4140

------> offset: 0x40c4f1
0x40c4f1    retf 0x4102

------> offset: 0x40c512
0x40c512    in eax, 0x0
0x40c514    adc [rax], al
0x40c516    add [rax-0x77], cl
0x40c519    ret

------> offset: 0x40c514
0x40c514    adc [rax], al
0x40c516    add [rax-0x77], cl
0x40c519    ret

------> offset: 0x40c539
0x40c539    retf 0x4101

------> offset: 0x40c547
0x40c547    add [rcx-0x7d], al
0x40c54a    ret 0x4101

------> offset: 0x40c54a
0x40c54a    ret 0x4101

------> offset: 0x40c55b
0x40c55b    ret 0xe901

------> offset: 0x40c6f3
0x40c6f3    add [rax+0xf], al
0x40c6f6    mov dh, 0xc5
0x40c6f8    pop rbx
0x40c6f9    pop rbp
0x40c6fa    pop r12
0x40c6fc    ret

------> offset: 0x40c6f4
0x40c6f4    movzx eax, bpl
0x40c6f8    pop rbx
0x40c6f9    pop rbp
0x40c6fa    pop r12
0x40c6fc    ret

------> offset: 0x40c6f5
0x40c6f5    movzx eax, ch
0x40c6f8    pop rbx
0x40c6f9    pop rbp
0x40c6fa    pop r12
0x40c6fc    ret

------> offset: 0x40c6f6
0x40c6f6    mov dh, 0xc5
0x40c6f8    pop rbx
0x40c6f9    pop rbp
0x40c6fa    pop r12
0x40c6fc    ret

------> offset: 0x40c6f7
0x40c6f7    vminsd xmm8, xmm4, qword [rcx+0x5c]
0x40c6fc    ret

------> offset: 0x40c93b
0x40c93b    jz 0x40c8d9
0x40c93d    mov eax, 0xffffffffffffffff
0x40c942    pop rbx
0x40c943    ret

------> offset: 0x40c93c
0x40c93c    pushf
0x40c93d    mov eax, 0xffffffffffffffff
0x40c942    pop rbx
0x40c943    ret

------> offset: 0x40ca15
0x40ca15    sub eax, [rax]
0x40ca17    jnz 0x40ec7b
0x40ca1d    ret

------> offset: 0x40ca16
0x40ca16    add [rdi], cl
0x40ca18    test [rsi+0x22], ebx
0x40ca1b    add [rax], al
0x40ca1d    ret

------> offset: 0x40ca17
0x40ca17    jnz 0x40ec7b
0x40ca1d    ret

------> offset: 0x40ca18
0x40ca18    test [rsi+0x22], ebx
0x40ca1b    add [rax], al
0x40ca1d    ret

------> offset: 0x40ca19
0x40ca19    pop rsi
0x40ca1a    and al, [rax]
0x40ca1c    add bl, dh
0x40ca1e    ret

------> offset: 0x40ca1a
0x40ca1a    and al, [rax]
0x40ca1c    add bl, dh
0x40ca1e    ret

------> offset: 0x40ccd1
0x40ccd1    adc esi, esi
0x40ccd3    ret 0xf02

------> offset: 0x40ccd3
0x40ccd3    ret 0xf02

------> offset: 0x40cd9b
0x40cd9b    mov eax, r12d
0x40cd9e    pop rbx
0x40cd9f    pop rbp
0x40cda0    pop r12
0x40cda2    pop r13
0x40cda4    ret

------> offset: 0x40cd9c
0x40cd9c    mov eax, esp
0x40cd9e    pop rbx
0x40cd9f    pop rbp
0x40cda0    pop r12
0x40cda2    pop r13
0x40cda4    ret

------> offset: 0x40cd9d
0x40cd9d    loopnz 0x40cdfa
0x40cd9f    pop rbp
0x40cda0    pop r12
0x40cda2    pop r13
0x40cda4    ret

------> offset: 0x40ce77
0x40ce77    add [rbx-0x16fefbbe], al
0x40ce7d    retf 0xfffe

------> offset: 0x40ce7b
0x40ce7b    add ecx, ebp
0x40ce7d    retf 0xfffe

------> offset: 0x40cf93
0x40cf93    push qword 0x74c98548
0x40cf99    and ecx, [rax+0x39]
0x40cf9c    retf

------> offset: 0x40cf99
0x40cf99    and ecx, [rax+0x39]
0x40cf9c    retf

------> offset: 0x40d018
0x40d018    mov edi, 0xffffffffc48348ff
0x40d01d    sub [rbx+0x5d], bl
0x40d020    ret

------> offset: 0x40d20d
0x40d20d    retf 0x2b6c

------> offset: 0x40d2dc
0x40d2dc    ror qword [r8-0x7b], 0xd2
0x40d2e1    jnz 0x40d2d0
0x40d2e3    ret

------> offset: 0x40d2dd
0x40d2dd    ror dword [rax-0x7b], 0xd2
0x40d2e1    jnz 0x40d2d0
0x40d2e3    ret

------> offset: 0x40d2de
0x40d2de    test rdx, rdx
0x40d2e1    jnz 0x40d2d0
0x40d2e3    ret

------> offset: 0x40d2df
0x40d2df    test edx, edx
0x40d2e1    jnz 0x40d2d0
0x40d2e3    ret

------> offset: 0x40d2e0
0x40d2e0    sal [rbp-0x13], cl
0x40d2e3    ret

------> offset: 0x40d2e1
0x40d2e1    jnz 0x40d2d0
0x40d2e3    ret

------> offset: 0x40d2e2
0x40d2e2    in eax, dx
0x40d2e3    ret

------> offset: 0x40d311
0x40d311    mov [rdi+0x18], rax
0x40d316    mov [rdi+0x8], rax
0x40d31a    ret

------> offset: 0x40d313
0x40d313    mov [rdi+0x18], eax
0x40d316    mov [rdi+0x8], rax
0x40d31a    ret

------> offset: 0x40d316
0x40d316    mov [rdi+0x8], rax
0x40d31a    ret

------> offset: 0x40d317
0x40d317    mov [rdi+0x8], eax
0x40d31a    ret

------> offset: 0x40d341
0x40d341    sbb [rax-0x77], cl
0x40d344    push rdi
0x40d345    mov [rdi+0x8], rax
0x40d34a    ret

------> offset: 0x40d342
0x40d342    mov [rdi+0x48], rdx
0x40d346    mov [rdi+0x8], rax
0x40d34a    ret

------> offset: 0x40d343
0x40d343    mov [rdi+0x48], edx
0x40d346    mov [rdi+0x8], rax
0x40d34a    ret

------> offset: 0x40d344
0x40d344    push rdi
0x40d345    mov [rdi+0x8], rax
0x40d34a    ret

------> offset: 0x40d382
0x40d382    mov [rbx+0x20], rax
0x40d386    mov [rbx], edx
0x40d388    xor eax, eax
0x40d38a    pop rbx
0x40d38b    ret

------> offset: 0x40d383
0x40d383    mov [rbx+0x20], eax
0x40d386    mov [rbx], edx
0x40d388    xor eax, eax
0x40d38a    pop rbx
0x40d38b    ret

------> offset: 0x40d384
0x40d384    and [r9+0x5bc03113], cl
0x40d38b    ret

------> offset: 0x40d385
0x40d385    and [rcx+0x5bc03113], cl
0x40d38b    ret

------> offset: 0x40d386
0x40d386    mov [rbx], edx
0x40d388    xor eax, eax
0x40d38a    pop rbx
0x40d38b    ret

------> offset: 0x40d409
0x40d409    mov qword [rbx+0x50], 0x0
0x40d411    pop rbx
0x40d412    ret

------> offset: 0x40d40a
0x40d40a    mov dword [rbx+0x50], 0x0
0x40d411    pop rbx
0x40d412    ret

------> offset: 0x40d40b
0x40d40b    push r8
0x40d40d    add [rax], al
0x40d40f    add [rax], al
0x40d411    pop rbx
0x40d412    ret

------> offset: 0x40d40c
0x40d40c    push rax
0x40d40d    add [rax], al
0x40d40f    add [rax], al
0x40d411    pop rbx
0x40d412    ret

------> offset: 0x40d40d
0x40d40d    add [rax], al
0x40d40f    add [rax], al
0x40d411    pop rbx
0x40d412    ret

------> offset: 0x40d4b3
0x40d4b3    jz 0x40d468
0x40d4b5    mov eax, 0xffffffffffffffff
0x40d4ba    pop rbx
0x40d4bb    ret

------> offset: 0x40d4e8
0x40d4e8    mov rsi, rcx
0x40d4eb    jbe 0x40d485
0x40d4ed    movzx eax, byte [rdx]
0x40d4f0    pop rbx
0x40d4f1    ret

------> offset: 0x40d4e9
0x40d4e9    mov esi, ecx
0x40d4eb    jbe 0x40d485
0x40d4ed    movzx eax, byte [rdx]
0x40d4f0    pop rbx
0x40d4f1    ret

------> offset: 0x40d4eb
0x40d4eb    jbe 0x40d485
0x40d4ed    movzx eax, byte [rdx]
0x40d4f0    pop rbx
0x40d4f1    ret

------> offset: 0x40d4ec
0x40d4ec    cwde
0x40d4ed    movzx eax, byte [rdx]
0x40d4f0    pop rbx
0x40d4f1    ret

------> offset: 0x40d4ed
0x40d4ed    movzx eax, byte [rdx]
0x40d4f0    pop rbx
0x40d4f1    ret

------> offset: 0x40d4ee
0x40d4ee    mov dh, 0x2
0x40d4f0    pop rbx
0x40d4f1    ret

------> offset: 0x40d633
0x40d633    jz 0x40d5e8
0x40d635    mov eax, 0xffffffffffffffff
0x40d63a    pop rbx
0x40d63b    ret

------> offset: 0x40d780
0x40d780    ret 0xc883

------> offset: 0x40d78f
0x40d78f    ror byte [rcx-0x3b7cb7ed], 0x1
0x40d795    sbb [rbx+0x5d], bl
0x40d798    ret

------> offset: 0x40d790
0x40d790    mov [rbx], edx
0x40d792    add rsp, 0x18
0x40d796    pop rbx
0x40d797    pop rbp
0x40d798    ret

------> offset: 0x40d792
0x40d792    add rsp, 0x18
0x40d796    pop rbx
0x40d797    pop rbp
0x40d798    ret

------> offset: 0x40d793
0x40d793    add esp, 0x18
0x40d796    pop rbx
0x40d797    pop rbp
0x40d798    ret

------> offset: 0x40d795
0x40d795    sbb [rbx+0x5d], bl
0x40d798    ret

------> offset: 0x40d7d9
0x40d7d9    mov rbx, rdi
0x40d7dc    jz 0x40d7e8
0x40d7de    pop rbx
0x40d7df    pop rbp
0x40d7e0    pop r12
0x40d7e2    ret

------> offset: 0x40d7da
0x40d7da    mov ebx, edi
0x40d7dc    jz 0x40d7e8
0x40d7de    pop rbx
0x40d7df    pop rbp
0x40d7e0    pop r12
0x40d7e2    ret

------> offset: 0x40d7dc
0x40d7dc    jz 0x40d7e8
0x40d7de    pop rbx
0x40d7df    pop rbp
0x40d7e0    pop r12
0x40d7e2    ret

------> offset: 0x40d7dd
0x40d7dd    or bl, [rbx+0x5d]
0x40d7e0    pop r12
0x40d7e2    ret

------> offset: 0x40d82f
0x40d82f    mov [rbx+0x40], esp
0x40d832    mov [rbx], eax
0x40d834    pop rbx
0x40d835    pop rbp
0x40d836    pop r12
0x40d838    ret

------> offset: 0x40d830
0x40d830    movsxd eax, [rax-0x77]
0x40d833    add ebx, [rbx+0x5d]
0x40d836    pop r12
0x40d838    ret

------> offset: 0x40d831
0x40d831    mov [rbx], eax
0x40d834    pop rbx
0x40d835    pop rbp
0x40d836    pop r12
0x40d838    ret

------> offset: 0x40d833
0x40d833    add ebx, [rbx+0x5d]
0x40d836    pop r12
0x40d838    ret

------> offset: 0x40d86c
0x40d86c    jmp 0x40d827
0x40d86e    nop
0x40d870    mov eax, 0xffffffffffffffff
0x40d875    ret

------> offset: 0x40d86e
0x40d86e    nop
0x40d870    mov eax, 0xffffffffffffffff
0x40d875    ret

------> offset: 0x40d870
0x40d870    mov eax, 0xffffffffffffffff
0x40d875    ret

------> offset: 0x40d89a
0x40d89a    add [rax-0x77], ecx
0x40d89d    push rbx
0x40d89e    or [rdi], cl
0x40d8a0    mov dh, 0x0
0x40d8a2    pop rbx
0x40d8a3    ret

------> offset: 0x40d89b
0x40d89b    mov [rbx+0x8], rdx
0x40d89f    movzx eax, byte [rax]
0x40d8a2    pop rbx
0x40d8a3    ret

------> offset: 0x40d89c
0x40d89c    mov [rbx+0x8], edx
0x40d89f    movzx eax, byte [rax]
0x40d8a2    pop rbx
0x40d8a3    ret

------> offset: 0x40d89d
0x40d89d    push rbx
0x40d89e    or [rdi], cl
0x40d8a0    mov dh, 0x0
0x40d8a2    pop rbx
0x40d8a3    ret

------> offset: 0x40d89e
0x40d89e    or [rdi], cl
0x40d8a0    mov dh, 0x0
0x40d8a2    pop rbx
0x40d8a3    ret

------> offset: 0x40d89f
0x40d89f    movzx eax, byte [rax]
0x40d8a2    pop rbx
0x40d8a3    ret

------> offset: 0x40d8a0
0x40d8a0    mov dh, 0x0
0x40d8a2    pop rbx
0x40d8a3    ret

------> offset: 0x40d986
0x40d986    retf 0x2949

------> offset: 0x40d9b5
0x40d9b5    fcomp dword [rbx+0x5d]
0x40d9b8    pop r12
0x40d9ba    pop r13
0x40d9bc    pop r14
0x40d9be    ret

------> offset: 0x40dacb
0x40dacb    retf 0x0

------> offset: 0x40db9e
0x40db9e    pop r12
0x40dba0    sub rax, r13
0x40dba3    pop r13
0x40dba5    pop r14
0x40dba7    ret

------> offset: 0x40db9f
0x40db9f    pop rsp
0x40dba0    sub rax, r13
0x40dba3    pop r13
0x40dba5    pop r14
0x40dba7    ret

------> offset: 0x40dba0
0x40dba0    sub rax, r13
0x40dba3    pop r13
0x40dba5    pop r14
0x40dba7    ret

------> offset: 0x40dba1
0x40dba1    sub eax, ebp
0x40dba3    pop r13
0x40dba5    pop r14
0x40dba7    ret

------> offset: 0x40dba2
0x40dba2    call 0x5e8238e8
0x40dba7    ret

------> offset: 0x40dd9a
0x40dd9a    sbb [rax], al
0x40dd9c    add [rax], al
0x40dd9e    add [rbx+0x5d], bl
0x40dda1    pop r12
0x40dda3    ret

------> offset: 0x40dd9b
0x40dd9b    add [rax], al
0x40dd9d    add [rax], al
0x40dd9f    pop rbx
0x40dda0    pop rbp
0x40dda1    pop r12
0x40dda3    ret

------> offset: 0x40dd9c
0x40dd9c    add [rax], al
0x40dd9e    add [rbx+0x5d], bl
0x40dda1    pop r12
0x40dda3    ret

------> offset: 0x40dea2
0x40dea2    mov eax, 0x1
0x40dea7    pop rbx
0x40dea8    pop rbp
0x40dea9    pop r12
0x40deab    ret

------> offset: 0x40dea3
0x40dea3    add [rax], eax
0x40dea5    add [rax], al
0x40dea7    pop rbx
0x40dea8    pop rbp
0x40dea9    pop r12
0x40deab    ret

------> offset: 0x40df89
0x40df89    test al, 0x0
0x40df8b    add [rax], al
0x40df8d    add [rax], al
0x40df8f    add [rax], al
0x40df91    ret

------> offset: 0x40df8b
0x40df8b    add [rax], al
0x40df8d    add [rax], al
0x40df8f    add [rax], al
0x40df91    ret

------> offset: 0x40df8d
0x40df8d    add [rax], al
0x40df8f    add [rax], al
0x40df91    ret

------> offset: 0x40e039
0x40e039    mov qword [rax+0x8], 0x0
0x40e041    ret

------> offset: 0x40e03a
0x40e03a    mov dword [rax+0x8], 0x0
0x40e041    ret

------> offset: 0x40e03b
0x40e03b    or [rax], al
0x40e03e    add [rax], al
0x40e040    add bl, dh
0x40e042    ret

------> offset: 0x40e03e
0x40e03e    add [rax], al
0x40e040    add bl, dh
0x40e042    ret

------> offset: 0x40e18a
0x40e18a    test [rax], al
0x40e18c    add [rax], al
0x40e18e    add [rax], al
0x40e190    xor eax, eax
0x40e192    ret

------> offset: 0x40e18c
0x40e18c    add [rax], al
0x40e18e    add [rax], al
0x40e190    xor eax, eax
0x40e192    ret

------> offset: 0x40e220
0x40e220    mov rax, 0xffffffffffffffff
0x40e227    ret

------> offset: 0x40e251
0x40e251    cmp eax, -0x1
0x40e254    jz 0x40e259
0x40e256    and dword [rbx], -0x11
0x40e259    pop rbx
0x40e25a    ret

------> offset: 0x40e252
0x40e252    clc
0x40e253    push qword [rbx+rax-0x7d]
0x40e257    and ebp, edi
0x40e259    pop rbx
0x40e25a    ret

------> offset: 0x40e253
0x40e253    push qword [rbx+rax-0x7d]
0x40e257    and ebp, edi
0x40e259    pop rbx
0x40e25a    ret

------> offset: 0x40e254
0x40e254    jz 0x40e259
0x40e256    and dword [rbx], -0x11
0x40e259    pop rbx
0x40e25a    ret

------> offset: 0x40e256
0x40e256    and dword [rbx], -0x11
0x40e259    pop rbx
0x40e25a    ret

------> offset: 0x40e257
0x40e257    and ebp, edi
0x40e259    pop rbx
0x40e25a    ret

------> offset: 0x40e258
0x40e258    out dx, eax
0x40e259    pop rbx
0x40e25a    ret

------> offset: 0x40e286
0x40e286    movzx eax, byte [rax-0x1]
0x40e28a    and dword [rbx], -0x11
0x40e28d    pop rbx
0x40e28e    ret

------> offset: 0x40e29c
0x40e29c    call qword [rax+0x30]
0x40e29f    cmp eax, -0x1
0x40e2a2    jnz 0x40e28a
0x40e2a4    pop rbx
0x40e2a5    ret

------> offset: 0x40e29d
0x40e29d    push rax
0x40e29e    xor [rbx-0x198a0008], al
0x40e2a4    pop rbx
0x40e2a5    ret

------> offset: 0x40e29e
0x40e29e    xor [rbx-0x198a0008], al
0x40e2a4    pop rbx
0x40e2a5    ret

------> offset: 0x40e29f
0x40e29f    cmp eax, -0x1
0x40e2a2    jnz 0x40e28a
0x40e2a4    pop rbx
0x40e2a5    ret

------> offset: 0x40e2a0
0x40e2a0    clc
0x40e2a1    push qword [rbp-0x1a]
0x40e2a4    pop rbx
0x40e2a5    ret

------> offset: 0x40e2a1
0x40e2a1    push qword [rbp-0x1a]
0x40e2a4    pop rbx
0x40e2a5    ret

------> offset: 0x40e2a2
0x40e2a2    jnz 0x40e28a
0x40e2a4    pop rbx
0x40e2a5    ret

------> offset: 0x40e2a3
0x40e2a3    out 0x5b, al
0x40e2a5    ret

------> offset: 0x40e2b2
0x40e2b2    ret 0x149

------> offset: 0x40e2d9
0x40e2d9    cmp rcx, rsi
0x40e2dc    jnz 0x40e2d0
0x40e2de    lea eax, [rdx+rdi]
0x40e2e1    ret

------> offset: 0x40e2da
0x40e2da    cmp ecx, esi
0x40e2dc    jnz 0x40e2d0
0x40e2de    lea eax, [rdx+rdi]
0x40e2e1    ret

------> offset: 0x40e2dc
0x40e2dc    jnz 0x40e2d0
0x40e2de    lea eax, [rdx+rdi]
0x40e2e1    ret

------> offset: 0x40e2dd
0x40e2dd    lea eax, [rdx+rdi]
0x40e2e1    ret

------> offset: 0x40e2df
0x40e2df    add al, 0x3a
0x40e2e1    ret

------> offset: 0x40e2e6
0x40e2e6    add [rax], al
0x40e2e8    sub r8, rcx
0x40e2eb    lea eax, [r8-0x1]
0x40e2ef    ret

------> offset: 0x40e2e8
0x40e2e8    sub r8, rcx
0x40e2eb    lea eax, [r8-0x1]
0x40e2ef    ret

------> offset: 0x40e2e9
0x40e2e9    sub eax, ecx
0x40e2eb    lea eax, [r8-0x1]
0x40e2ef    ret

------> offset: 0x40e2eb
0x40e2eb    lea eax, [r8-0x1]
0x40e2ef    ret

------> offset: 0x40e2ec
0x40e2ec    lea eax, [rax-0x1]
0x40e2ef    ret

------> offset: 0x40e50d
0x40e50d    retf 0x2b59

------> offset: 0x40e7a1
0x40e7a1    mov [rbx+0x60], ebp
0x40e7a4    add rsp, 0x8
0x40e7a8    pop rbx
0x40e7a9    pop rbp
0x40e7aa    ret

------> offset: 0x40e84c
0x40e84c    adc ecx, [rax-0x77]
0x40e84f    ret 0x8b48

------> offset: 0x40e850
0x40e850    mov rax, [rdx]
0x40e853    test rax, rax
0x40e856    jnz 0x40e848
0x40e858    ret

------> offset: 0x40e851
0x40e851    mov eax, [rdx]
0x40e853    test rax, rax
0x40e856    jnz 0x40e848
0x40e858    ret

------> offset: 0x40e852
0x40e852    add cl, [rax-0x7b]
0x40e855    sal byte [rbp-0x10], 0xf3
0x40e859    ret

------> offset: 0x40e853
0x40e853    test rax, rax
0x40e856    jnz 0x40e848
0x40e858    ret

------> offset: 0x40e854
0x40e854    test eax, eax
0x40e856    jnz 0x40e848
0x40e858    ret

------> offset: 0x40e855
0x40e855    sal byte [rbp-0x10], 0xf3
0x40e859    ret

------> offset: 0x40e856
0x40e856    jnz 0x40e848
0x40e858    ret

------> offset: 0x40e85e
0x40e85e    nop
0x40e860    mov rcx, [rdi]
0x40e863    mov [rdx], rcx
0x40e866    ret

------> offset: 0x40e860
0x40e860    mov rcx, [rdi]
0x40e863    mov [rdx], rcx
0x40e866    ret

------> offset: 0x40e861
0x40e861    mov ecx, [rdi]
0x40e863    mov [rdx], rcx
0x40e866    ret

------> offset: 0x40e863
0x40e863    mov [rdx], rcx
0x40e866    ret

------> offset: 0x40e864
0x40e864    mov [rdx], ecx
0x40e866    ret

------> offset: 0x40e86e
0x40e86e    add [rax], al
0x40e870    mov eax, [rdi+0x10]
0x40e873    sub eax, [rsi+0x10]
0x40e876    ret

------> offset: 0x40e870
0x40e870    mov eax, [rdi+0x10]
0x40e873    sub eax, [rsi+0x10]
0x40e876    ret

------> offset: 0x40e873
0x40e873    sub eax, [rsi+0x10]
0x40e876    ret

------> offset: 0x40e894
0x40e894    or ebp, [rbx]
0x40e896    push rax
0x40e897    sbb [rbx-0x2fd6efb9], cl
0x40e89d    ret

------> offset: 0x40e895
0x40e895    sub edx, [rax+0x18]
0x40e898    mov eax, [rdi+0x10]
0x40e89b    sub eax, edx
0x40e89d    ret

------> offset: 0x40e896
0x40e896    push rax
0x40e897    sbb [rbx-0x2fd6efb9], cl
0x40e89d    ret

------> offset: 0x40e897
0x40e897    sbb [rbx-0x2fd6efb9], cl
0x40e89d    ret

------> offset: 0x40e898
0x40e898    mov eax, [rdi+0x10]
0x40e89b    sub eax, edx
0x40e89d    ret

------> offset: 0x40e89b
0x40e89b    sub eax, edx
0x40e89d    ret

------> offset: 0x40e89f
0x40e89f    nop
0x40e8a0    sub edx, [rax+0x10]
0x40e8a3    mov eax, [rdi+0x10]
0x40e8a6    sub eax, edx
0x40e8a8    ret

------> offset: 0x40e8a0
0x40e8a0    sub edx, [rax+0x10]
0x40e8a3    mov eax, [rdi+0x10]
0x40e8a6    sub eax, edx
0x40e8a8    ret

------> offset: 0x40e8a1
0x40e8a1    push rax
0x40e8a2    adc [rbx-0x2fd6efb9], cl
0x40e8a8    ret

------> offset: 0x40e8a2
0x40e8a2    adc [rbx-0x2fd6efb9], cl
0x40e8a8    ret

------> offset: 0x40e8a5
0x40e8a5    adc [rcx], ch
0x40e8a7    rol bl, 0x1
0x40e8a9    mov eax, 0xffffffffffffffff
0x40e8ae    ret

------> offset: 0x40e8a7
0x40e8a7    rol bl, 0x1
0x40e8a9    mov eax, 0xffffffffffffffff
0x40e8ae    ret

------> offset: 0x40e8f3
0x40e8f3    add ecx, eax
0x40e8f5    xor eax, eax
0x40e8f7    mov [rdx+0x8], rcx
0x40e8fb    ret

------> offset: 0x40e8f4
0x40e8f4    sal dword [rcx], 0xc0
0x40e8f7    mov [rdx+0x8], rcx
0x40e8fb    ret

------> offset: 0x40e8f5
0x40e8f5    xor eax, eax
0x40e8f7    mov [rdx+0x8], rcx
0x40e8fb    ret

------> offset: 0x40e8f6
0x40e8f6    ror byte [rax-0x77], 0x4a
0x40e8fa    or bl, dh
0x40e8fc    ret

------> offset: 0x40e8f7
0x40e8f7    mov [rdx+0x8], rcx
0x40e8fb    ret

------> offset: 0x40e8f8
0x40e8f8    mov [rdx+0x8], ecx
0x40e8fb    ret

------> offset: 0x40e8f9
0x40e8f9    or bl, sil
0x40e8fc    ret

------> offset: 0x40e8fa
0x40e8fa    or bl, dh
0x40e8fc    ret

------> offset: 0x40eb0f
0x40eb0f    nop
0x40eb10    mov rax, 0xffffffffffffffff
0x40eb17    ret

------> offset: 0x40eb1c
0x40eb1c    add [rax], al
0x40eb1e    add [rax], al
0x40eb20    mov eax, 0xffffffffffffffff
0x40eb25    ret

------> offset: 0x40eb1d
0x40eb1d    add [rax], al
0x40eb1f    add [rax-0x1], bh
0x40eb25    ret

------> offset: 0x40eb1e
0x40eb1e    add [rax], al
0x40eb20    mov eax, 0xffffffffffffffff
0x40eb25    ret

------> offset: 0x40eb1f
0x40eb1f    add [rax-0x1], bh
0x40eb25    ret

------> offset: 0x40eb2e
0x40eb2e    add [rax], al
0x40eb30    mov rax, 0xffffffffffffffff
0x40eb37    ret

------> offset: 0x40eb58
0x40eb58    nop dword [rax+rax+0x0]
0x40eb60    ret

------> offset: 0x40eb5a
0x40eb5a    test [rax], al
0x40eb5c    add [rax], al
0x40eb5e    add [rax], al
0x40eb60    ret

------> offset: 0x40eb5b
0x40eb5b    add [rax], al
0x40eb5d    add [rax], al
0x40eb5f    add bl, dh
0x40eb61    ret

------> offset: 0x40eb6e
0x40eb6e    add [rax], al
0x40eb70    mov rax, [rip+0x2b1529]
0x40eb77    ret

------> offset: 0x40eb6f
0x40eb6f    add [rax-0x75], cl
0x40eb72    add eax, 0x2b1529
0x40eb77    ret

------> offset: 0x40eb70
0x40eb70    mov rax, [rip+0x2b1529]
0x40eb77    ret

------> offset: 0x40eb71
0x40eb71    mov eax, [rip+0x2b1529]
0x40eb77    ret

------> offset: 0x40eb72
0x40eb72    add eax, 0x2b1529
0x40eb77    ret

------> offset: 0x40eb75
0x40eb75    sub eax, [rax]
0x40eb77    ret

------> offset: 0x40eb8c
0x40eb8c    add [rax], al
0x40eb8e    add [rax], al
0x40eb90    mov rax, [rdi+0x68]
0x40eb94    ret

------> offset: 0x40eb8e
0x40eb8e    add [rax], al
0x40eb90    mov rax, [rdi+0x68]
0x40eb94    ret

------> offset: 0x40eb90
0x40eb90    mov rax, [rdi+0x68]
0x40eb94    ret

------> offset: 0x40eb91
0x40eb91    mov eax, [rdi+0x68]
0x40eb94    ret

------> offset: 0x40eb9a
0x40eb9a    test [rax], al
0x40eb9c    add [rax], al
0x40eb9e    add [rax], al
0x40eba0    mov rax, rdi
0x40eba3    ret

------> offset: 0x40eb9b
0x40eb9b    add [rax], al
0x40eb9d    add [rax], al
0x40eb9f    add [rax-0x77], cl
0x40eba2    clc
0x40eba3    ret

------> offset: 0x40eb9c
0x40eb9c    add [rax], al
0x40eb9e    add [rax], al
0x40eba0    mov rax, rdi
0x40eba3    ret

------> offset: 0x40eb9d
0x40eb9d    add [rax], al
0x40eb9f    add [rax-0x77], cl
0x40eba2    clc
0x40eba3    ret

------> offset: 0x40eb9e
0x40eb9e    add [rax], al
0x40eba0    mov rax, rdi
0x40eba3    ret

------> offset: 0x40eb9f
0x40eb9f    add [rax-0x77], cl
0x40eba2    clc
0x40eba3    ret

------> offset: 0x40eba0
0x40eba0    mov rax, rdi
0x40eba3    ret

------> offset: 0x40eba1
0x40eba1    mov eax, edi
0x40eba3    ret

------> offset: 0x40eba2
0x40eba2    clc
0x40eba3    ret

------> offset: 0x40ebf4
0x40ebf4    sub eax, [rax]
0x40ebf6    add dword [rip+0x2b3b07], 0x1
0x40ebfd    ret

------> offset: 0x40ebf5
0x40ebf5    add [rbx+0x2b3b0705], al
0x40ebfb    add [rcx], al
0x40ebfd    ret

------> offset: 0x40ebf6
0x40ebf6    add dword [rip+0x2b3b07], 0x1
0x40ebfd    ret

------> offset: 0x40ebf9
0x40ebf9    cmp ebp, [rbx]
0x40ebfb    add [rcx], al
0x40ebfd    ret

------> offset: 0x40ec30
0x40ec30    sub eax, [rax]
0x40ec32    jnz 0x40eea4
0x40ec38    ret

------> offset: 0x40ec31
0x40ec31    add [rdi], cl
0x40ec33    test [rdx+rax+0x0], ebp
0x40ec37    add bl, dh
0x40ec39    ret

------> offset: 0x40ec32
0x40ec32    jnz 0x40eea4
0x40ec38    ret

------> offset: 0x40ec33
0x40ec33    test [rdx+rax+0x0], ebp
0x40ec37    add bl, dh
0x40ec39    ret

------> offset: 0x40ec34
0x40ec34    ins byte [rdi], dx
0x40ec35    add al, [rax]
0x40ec37    add bl, dh
0x40ec39    ret

------> offset: 0x40ec35
0x40ec35    add al, [rax]
0x40ec37    add bl, dh
0x40ec39    ret

------> offset: 0x40ec56
0x40ec56    add eax, 0x2b3aa9
0x40ec5b    add [rax], al
0x40ec5d    add [rax], al
0x40ec5f    ret

------> offset: 0x40ec59
0x40ec59    sub eax, [rax]
0x40ec5b    add [rax], al
0x40ec5d    add [rax], al
0x40ec5f    ret

------> offset: 0x40eef7
0x40eef7    or [rax+0x39], cl
0x40eefa    enter 0x2373, 0xf
0x40eefe    mov dh, 0x0
0x40ef00    ret

------> offset: 0x40eef8
0x40eef8    cmp rax, rcx
0x40eefb    jae 0x40ef20
0x40eefd    movzx eax, byte [rax]
0x40ef00    ret

------> offset: 0x40eef9
0x40eef9    cmp eax, ecx
0x40eefb    jae 0x40ef20
0x40eefd    movzx eax, byte [rax]
0x40ef00    ret

------> offset: 0x40eefa
0x40eefa    enter 0x2373, 0xf
0x40eefe    mov dh, 0x0
0x40ef00    ret

------> offset: 0x40eefb
0x40eefb    jae 0x40ef20
0x40eefd    movzx eax, byte [rax]
0x40ef00    ret

------> offset: 0x40eefc
0x40eefc    and ecx, [rdi]
0x40eefe    mov dh, 0x0
0x40ef00    ret

------> offset: 0x40eefd
0x40eefd    movzx eax, byte [rax]
0x40ef00    ret

------> offset: 0x40eefe
0x40eefe    mov dh, 0x0
0x40ef00    ret

------> offset: 0x40ef1c
0x40ef1c    nop dword [rax+0x0]
0x40ef20    mov eax, 0xffffffffffffffff
0x40ef25    ret

------> offset: 0x40ef1e
0x40ef1e    add [rax-0x1], dil
0x40ef25    ret

------> offset: 0x40ef8a
0x40ef8a    cmp [rax-0x75], cl
0x40ef8d    imul eax, [rax+0x48], -0x77
0x40ef91    retf 0x2b48

------> offset: 0x40ef8d
0x40ef8d    imul eax, [rax+0x48], -0x77
0x40ef91    retf 0x2b48

------> offset: 0x40ef91
0x40ef91    retf 0x2b48

------> offset: 0x40efa2
0x40efa2    ret 0x820f

------> offset: 0x40f19c
0x40f19c    retf 0xbee8

------> offset: 0x40f308
0x40f308    add esp, 0x18
0x40f30b    pop rbx
0x40f30c    pop rbp
0x40f30d    pop r12
0x40f30f    pop r13
0x40f311    ret

------> offset: 0x40f30a
0x40f30a    sbb [rbx+0x5d], bl
0x40f30d    pop r12
0x40f30f    pop r13
0x40f311    ret

------> offset: 0x40f3a7
0x40f3a7    add [rax-0x75], cl
0x40f3aa    push rbx
0x40f3ab    or [rax+0x29], cl
0x40f3ae    ret 0x148

------> offset: 0x40f3aa
0x40f3aa    push rbx
0x40f3ab    or [rax+0x29], cl
0x40f3ae    ret 0x148

------> offset: 0x40f3ab
0x40f3ab    or [rax+0x29], cl
0x40f3ae    ret 0x148

------> offset: 0x40f3ae
0x40f3ae    ret 0x148

------> offset: 0x40f529
0x40f529    ror [rdi], cl
0x40f52b    ret 0x9848

------> offset: 0x40f52b
0x40f52b    ret 0x9848

------> offset: 0x40f5b8
0x40f5b8    dec dword [rdi]
0x40f5ba    ret 0x4855

------> offset: 0x40f5ba
0x40f5ba    ret 0x4855

------> offset: 0x40f609
0x40f609    add [rax], al
0x40f60b    or dword [rbx], 0x8
0x40f60e    pop rbx
0x40f60f    pop rbp
0x40f610    pop r12
0x40f612    ret

------> offset: 0x40f60a
0x40f60a    add [rbx+0x5d5b080b], al
0x40f610    pop r12
0x40f612    ret

------> offset: 0x40f60b
0x40f60b    or dword [rbx], 0x8
0x40f60e    pop rbx
0x40f60f    pop rbp
0x40f610    pop r12
0x40f612    ret

------> offset: 0x40f60c
0x40f60c    or ecx, [rax]
0x40f60e    pop rbx
0x40f60f    pop rbp
0x40f610    pop r12
0x40f612    ret

------> offset: 0x40f638
0x40f638    cmovae rax, [rdi+0x28]
0x40f63d    sub rax, [rdi+0x18]
0x40f641    ret

------> offset: 0x40f639
0x40f639    cmovae eax, [rdi+0x28]
0x40f63d    sub rax, [rdi+0x18]
0x40f641    ret

------> offset: 0x40f63d
0x40f63d    sub rax, [rdi+0x18]
0x40f641    ret

------> offset: 0x40f63e
0x40f63e    sub eax, [rdi+0x18]
0x40f641    ret

------> offset: 0x40f685
0x40f685    ret 0xffd0

------> offset: 0x40f70e
0x40f70e    retf 0x2b10

------> offset: 0x40f748
0x40f748    add [rbx+0x2b307005], al
0x40f74e    add [rcx], al
0x40f750    ret

------> offset: 0x40f749
0x40f749    add dword [rip+0x2b3070], 0x1
0x40f750    ret

------> offset: 0x40f74a
0x40f74a    add eax, 0x2b3070
0x40f74f    add ebx, esi
0x40f751    ret

------> offset: 0x40f74b
0x40f74b    jo 0x40f77d
0x40f74d    sub eax, [rax]
0x40f74f    add ebx, esi
0x40f751    ret

------> offset: 0x40f74c
0x40f74c    xor [rbx], ch
0x40f74e    add [rcx], al
0x40f750    ret

------> offset: 0x40f74d
0x40f74d    sub eax, [rax]
0x40f74f    add ebx, esi
0x40f751    ret

------> offset: 0x40f7bf
0x40f7bf    or [rax], al
0x40f7c1    add [rax-0x77], cl
0x40f7c4    ret 0x8b48

------> offset: 0x40f7c1
0x40f7c1    add [rax-0x77], cl
0x40f7c4    ret 0x8b48

------> offset: 0x40f7e7
0x40f7e7    shr dword [rdi], 0x1
0x40f7e9    sub eax, [rax]
0x40f7eb    add [rax], al
0x40f7ed    add [rax], al
0x40f7ef    ret

------> offset: 0x40f81d
0x40f81d    adc [r11], bpl
0x40f820    add [rax-0x77], cl
0x40f823    retf 0x8348

------> offset: 0x40f81e
0x40f81e    adc [rbx], ch
0x40f820    add [rax-0x77], cl
0x40f823    retf 0x8348

------> offset: 0x40f820
0x40f820    add [rax-0x77], cl
0x40f823    retf 0x8348

------> offset: 0x40f823
0x40f823    retf 0x8348

------> offset: 0x40f84c
0x40f84c    adc [rbp+0x39], cl
0x40f84f    retf 0x830f

------> offset: 0x40f84f
0x40f84f    retf 0x830f

------> offset: 0x40f87a
0x40f87a    add [rax], eax
0x40f87c    add [rax-0x7d], cl
0x40f87f    ret 0x4d07

------> offset: 0x40f87c
0x40f87c    add [rax-0x7d], cl
0x40f87f    ret 0x4d07

------> offset: 0x40f87f
0x40f87f    ret 0x4d07

------> offset: 0x40f883
0x40f883    ret 0x894d

------> offset: 0x40f8ae
0x40f8ae    add [rax-0x73], cl
0x40f8b1    adc [rax+0x39], cl
0x40f8b5    retf 0x1e73

------> offset: 0x40f8b1
0x40f8b1    adc [rax+0x39], cl
0x40f8b5    retf 0x1e73

------> offset: 0x40f8b5
0x40f8b5    retf 0x1e73

------> offset: 0x40f8d3
0x40f8d3    add [rax], al
0x40f8d5    add [rax+0x29], cl
0x40f8d8    ret 0x8d49

------> offset: 0x40f8d5
0x40f8d5    add [rax+0x29], cl
0x40f8d8    ret 0x8d49

------> offset: 0x40f8f8
0x40f8f8    add [rax], al
0x40f8fa    mov [rsi], rax
0x40f8fd    mov rax, r8
0x40f900    ret

------> offset: 0x40f8fa
0x40f8fa    mov [rsi], rax
0x40f8fd    mov rax, r8
0x40f900    ret

------> offset: 0x40f8fb
0x40f8fb    mov [rsi], eax
0x40f8fd    mov rax, r8
0x40f900    ret

------> offset: 0x40f8fd
0x40f8fd    mov rax, r8
0x40f900    ret

------> offset: 0x40f8fe
0x40f8fe    mov eax, eax
0x40f900    ret

------> offset: 0x40f929
0x40f929    add [rcx+0xf], al
0x40f92c    xchg esi, eax
0x40f92d    ret 0x8348

------> offset: 0x40f92c
0x40f92c    xchg esi, eax
0x40f92d    ret 0x8348

------> offset: 0x40f930
0x40f930    clc
0x40f931    and [rdi], cl
0x40f933    xchg ebp, eax
0x40f934    ret 0x8441

------> offset: 0x40f931
0x40f931    and [rdi], cl
0x40f933    xchg ebp, eax
0x40f934    ret 0x8441

------> offset: 0x40f933
0x40f933    xchg ebp, eax
0x40f934    ret 0x8441

------> offset: 0x40f934
0x40f934    ret 0x8441

------> offset: 0x40f969
0x40f969    cmp eax, 0x1000
0x40f96e    jz 0x40f978
0x40f970    xor eax, eax
0x40f972    ret

------> offset: 0x40f96a
0x40f96a    add [rax], dl
0x40f96c    add [rax], al
0x40f96e    jz 0x40f978
0x40f970    xor eax, eax
0x40f972    ret

------> offset: 0x40f96c
0x40f96c    add [rax], al
0x40f96e    jz 0x40f978
0x40f970    xor eax, eax
0x40f972    ret

------> offset: 0x40f96e
0x40f96e    jz 0x40f978
0x40f970    xor eax, eax
0x40f972    ret

------> offset: 0x40f995
0x40f995    ret 0x2948

------> offset: 0x40f9a1
0x40f9a1    retf 0x7475

------> offset: 0x40f9a7
0x40f9a7    add [rbp-0x77], ecx
0x40f9aa    ret

------> offset: 0x40fa0a
0x40fa0a    retf 0xdb75

------> offset: 0x40fa11
0x40fa11    dec dword [rcx+rcx*4-0x40]
0x40fa15    nop dword [rax]
0x40fa18    ret

------> offset: 0x40fa12
0x40fa12    mov rax, r8
0x40fa15    nop dword [rax]
0x40fa18    ret

------> offset: 0x40fa13
0x40fa13    mov eax, eax
0x40fa15    nop dword [rax]
0x40fa18    ret

------> offset: 0x40fa14
0x40fa14    ror byte [rdi], 0x1f
0x40fa17    add bl, dh
0x40fa19    ret

------> offset: 0x40fa15
0x40fa15    nop dword [rax]
0x40fa18    ret

------> offset: 0x40fa42
0x40fa42    cmp ecx, edi
0x40fa44    jz 0x40f87d
0x40fa4a    ret

------> offset: 0x40fa43
0x40fa43    stc
0x40fa44    jz 0x40f87d
0x40fa4a    ret

------> offset: 0x40fa44
0x40fa44    jz 0x40f87d
0x40fa4a    ret

------> offset: 0x40fa49
0x40fa49    push rbx
0x40fa4b    ret

------> offset: 0x40fa69
0x40fa69    nop dword [rax+0x0]
0x40fa70    ret

------> offset: 0x40fa6b
0x40fa6b    add byte [rax], 0x0
0x40fa6e    add [rax], al
0x40fa70    ret

------> offset: 0x40fb85
0x40fb85    imul ebx, [rax], 0x48
0x40fb88    mov eax, ebx
0x40fb8a    pop rbx
0x40fb8b    pop rbp
0x40fb8c    pop r12
0x40fb8e    ret

------> offset: 0x40fb86
0x40fb86    sbb [rax-0x77], cl
0x40fb89    fcomp dword [rbx+0x5d]
0x40fb8c    pop r12
0x40fb8e    ret

------> offset: 0x40fd3c
0x40fd3c    or ebp, [rbx]
0x40fd3e    add [rax+0x39], cl
0x40fd41    ret

------> offset: 0x40fd3e
0x40fd3e    add [rax+0x39], cl
0x40fd41    ret

------> offset: 0x40fe6f
0x40fe6f    add [rax-0x75], cl
0x40fe72    adc [rax-0x7d], cl
0x40fe76    ret 0x4801

------> offset: 0x40fe72
0x40fe72    adc [rax-0x7d], cl
0x40fe76    ret 0x4801

------> offset: 0x40ff83
0x40ff83    and [rax+0x1], cl
0x40ff86    ret

------> offset: 0x4101e8
0x4101e8    sub eax, [rax]
0x4101ea    jnz 0x41696a
0x4101f0    ret

------> offset: 0x4101e9
0x4101e9    add [rdi], cl
0x4101eb    test [rdx+0x67], edi
0x4101ee    add [rax], al
0x4101f0    ret

------> offset: 0x4101ea
0x4101ea    jnz 0x41696a
0x4101f0    ret

------> offset: 0x4101eb
0x4101eb    test [rdx+0x67], edi
0x4101ee    add [rax], al
0x4101f0    ret

------> offset: 0x4101ec
0x4101ec    jp 0x410255
0x4101ee    add [rax], al
0x4101f0    ret

------> offset: 0x4101ed
0x4101ed    add [eax], al
0x4101f0    ret

------> offset: 0x41024a
0x41024a    add [rax-0x77], cl
0x41024d    ret 0x8948

------> offset: 0x410250
0x410250    fmul dword [rax+0x3]
0x410253    add [r8+0x39], r9b
0x410257    ret 0xd575

------> offset: 0x410253
0x410253    add [r8+0x39], r9b
0x410257    ret 0xd575

------> offset: 0x410254
0x410254    add [rax+0x39], cl
0x410257    ret 0xd575

------> offset: 0x410257
0x410257    ret 0xd575

------> offset: 0x41029b
0x41029b    or [rax+0x29], cl
0x41029e    ret 0x8e74

------> offset: 0x41029e
0x41029e    ret 0x8e74

------> offset: 0x41046a
0x41046a    add rsp, 0x8
0x41046e    mov rax, rdx
0x410471    pop rbx
0x410472    pop rbp
0x410473    ret

------> offset: 0x41046b
0x41046b    add esp, 0x8
0x41046e    mov rax, rdx
0x410471    pop rbx
0x410472    pop rbp
0x410473    ret

------> offset: 0x41046d
0x41046d    or [rax-0x77], cl
0x410470    rcr byte [rbx+0x5d], 0x1
0x410473    ret

------> offset: 0x41046e
0x41046e    mov rax, rdx
0x410471    pop rbx
0x410472    pop rbp
0x410473    ret

------> offset: 0x41046f
0x41046f    mov eax, edx
0x410471    pop rbx
0x410472    pop rbp
0x410473    ret

------> offset: 0x410470
0x410470    rcr byte [rbx+0x5d], 0x1
0x410473    ret

------> offset: 0x4105d7
0x4105d7    mov cl, 0xd
0x4105d9    ret

------> offset: 0x4107e4
0x4107e4    mov [rdx+0x0], esp
0x4107e7    add [rax+0x6c0860], bh
0x4107ed    ret

------> offset: 0x4107e6
0x4107e6    add [rax], al
0x4107e8    mov eax, 0x6c0860
0x4107ed    ret

------> offset: 0x4107e7
0x4107e7    add [rax+0x6c0860], bh
0x4107ed    ret

------> offset: 0x4107e8
0x4107e8    mov eax, 0x6c0860
0x4107ed    ret

------> offset: 0x41085e
0x41085e    adc [rax-0x77], ecx
0x410861    ret 0x8348

------> offset: 0x410975
0x410975    rcr byte [rbx+0x5d], 0x41
0x410979    pop rsp
0x41097a    pop r13
0x41097c    pop r14
0x41097e    ret

------> offset: 0x410b15
0x410b15    sbb [rax-0x77], cl
0x410b18    adc [r8-0x7d], cl
0x410b1c    retf 0x4d01

------> offset: 0x410b18
0x410b18    adc [r8-0x7d], cl
0x410b1c    retf 0x4d01

------> offset: 0x410b19
0x410b19    adc [rax-0x7d], cl
0x410b1c    retf 0x4d01

------> offset: 0x410b1c
0x410b1c    retf 0x4d01

------> offset: 0x410b54
0x410b54    add ecx, [rax+0x29]
0x410b57    ret

------> offset: 0x410bcb
0x410bcb    add [rax], al
0x410bcd    add [rax], al
0x410bcf    add [rcx-0x7d], cl
0x410bd2    ret 0x4908

------> offset: 0x410bcd
0x410bcd    add [rax], al
0x410bcf    add [rcx-0x7d], cl
0x410bd2    ret 0x4908

------> offset: 0x410bcf
0x410bcf    add [rcx-0x7d], cl
0x410bd2    ret 0x4908

------> offset: 0x410bd2
0x410bd2    ret 0x4908

------> offset: 0x411112
0x411112    jz 0x41111b
0x411114    add rsp, 0x8
0x411118    pop rbx
0x411119    pop rbp
0x41111a    ret

------> offset: 0x41113b
0x41113b    mov [rbx+0x14], eax
0x41113e    add rsp, 0x8
0x411142    pop rbx
0x411143    pop rbp
0x411144    ret

------> offset: 0x41113c
0x41113c    adc al, 0x48
0x41113f    add esp, 0x8
0x411142    pop rbx
0x411143    pop rbp
0x411144    ret

------> offset: 0x411213
0x411213    or [rax+0x39], cl
0x411216    retf

------> offset: 0x4112b7
0x4112b7    sub ecx, [rax+0x39]
0x4112ba    ret

------> offset: 0x41144d
0x41144d    and [rax-0x73], cl
0x411450    and [r8+0x39], r9b
0x411454    ret

------> offset: 0x411450
0x411450    and [r8+0x39], r9b
0x411454    ret

------> offset: 0x411451
0x411451    and [rax+0x39], cl
0x411454    ret

------> offset: 0x41152a
0x41152a    leave
0x41152b    add [rax+0x39], ecx
0x41152e    ret

------> offset: 0x41152b
0x41152b    add [rax+0x39], ecx
0x41152e    ret

------> offset: 0x4115de
0x4115de    retf 0x2b11

------> offset: 0x411b57
0x411b57    and al, 0x30
0x411b59    xor cl, [rdi]
0x411b5b    xchg esp, eax
0x411b5c    ret 0x1589

------> offset: 0x411b59
0x411b59    xor cl, [rdi]
0x411b5b    xchg esp, eax
0x411b5c    ret 0x1589

------> offset: 0x411b5b
0x411b5b    xchg esp, eax
0x411b5c    ret 0x1589

------> offset: 0x411b5c
0x411b5c    ret 0x1589

------> offset: 0x411c0d
0x411c0d    retf 0x2b22

------> offset: 0x411db7
0x411db7    dec dword [rdi]
0x411db9    xchg esp, eax
0x411dba    ret 0xa0e9

------> offset: 0x411db9
0x411db9    xchg esp, eax
0x411dba    ret 0xa0e9

------> offset: 0x411dba
0x411dba    ret 0xa0e9

------> offset: 0x411dd5
0x411dd5    add [rax+0x29], cl
0x411dd8    retf 0x8948

------> offset: 0x411e00
0x411e00    jmp 0x434d80
0x411e05    nop dword [rax]
0x411e08    ret

------> offset: 0x411e01
0x411e01    jnp 0x411e32
0x411e03    add al, [rax]
0x411e05    nop dword [rax]
0x411e08    ret

------> offset: 0x411e03
0x411e03    add al, [rax]
0x411e05    nop dword [rax]
0x411e08    ret

------> offset: 0x411e96
0x411e96    ror [rdi], cl
0x411e98    xchg [rbx-0x9fffffb], ebp
0x411e9e    ret

------> offset: 0x411e98
0x411e98    xchg [rbx-0x9fffffb], ebp
0x411e9e    ret

------> offset: 0x411e9c
0x411e9c    add dh, dh
0x411e9e    ret

------> offset: 0x411eea
0x411eea    or dh, dh
0x411eec    ret 0xf01

------> offset: 0x4120fb
0x4120fb    add [rax-0x7b], ecx
0x4120fe    ret 0x850f

------> offset: 0x41218b
0x41218b    ins byte [rdi], dx
0x41218c    add [rax+0x39], cl
0x41218f    retf

------> offset: 0x41218c
0x41218c    add [rax+0x39], cl
0x41218f    retf

------> offset: 0x4121d5
0x4121d5    retf 0x8548

------> offset: 0x41229e
0x41229e    test al, al
0x4122a0    add [rax], al
0x4122a2    add dh, dh
0x4122a4    ret

------> offset: 0x41229f
0x41229f    rol byte [rax], 0x0
0x4122a2    add dh, dh
0x4122a4    ret

------> offset: 0x4122a0
0x4122a0    add [rax], al
0x4122a2    add dh, dh
0x4122a4    ret

------> offset: 0x412492
0x412492    retf 0x3949

------> offset: 0x4124f9
0x4124f9    push rdx
0x4124fa    add r8b, bpl
0x4124fd    iret

------> offset: 0x4124fa
0x4124fa    add r8b, bpl
0x4124fd    iret

------> offset: 0x4124fb
0x4124fb    add al, ch
0x4124fd    iret

------> offset: 0x4126ed
0x4126ed    dec byte [rax-0x73]
0x4126f0    ret

------> offset: 0x4128e8
0x4128e8    call 0x54ce70ef
0x4128ed    ret

------> offset: 0x4128e9
0x4128e9    add cl, [rax-0x73]
0x4128ec    push rsp
0x4128ed    ret

------> offset: 0x4128ec
0x4128ec    push rsp
0x4128ed    ret

------> offset: 0x41294f
0x41294f    call 0x54ce7156
0x412954    ret

------> offset: 0x412977
0x412977    add [rax-0x75], cl
0x41297a    push rax
0x41297b    or dh, dh
0x41297d    ret 0x7404

------> offset: 0x41297a
0x41297a    push rax
0x41297b    or dh, dh
0x41297d    ret 0x7404

------> offset: 0x41297b
0x41297b    or dh, dh
0x41297d    ret 0x7404

------> offset: 0x41297d
0x41297d    ret 0x7404

------> offset: 0x412992
0x412992    and [rax-0x75], cl
0x412996    push rax
0x412997    or dh, dh
0x412999    ret 0xf04

------> offset: 0x412996
0x412996    push rax
0x412997    or dh, dh
0x412999    ret 0xf04

------> offset: 0x412997
0x412997    or dh, dh
0x412999    ret 0xf04

------> offset: 0x412999
0x412999    ret 0xf04

------> offset: 0x4129c2
0x4129c2    sub [rcx+rcx*4+0x62], cl
0x4129c6    and [rax-0x77], cl
0x4129c9    ret 0x8b48

------> offset: 0x4129c6
0x4129c6    and [rax-0x77], cl
0x4129c9    ret 0x8b48

------> offset: 0x412a57
0x412a57    or [rax+rax+0xf], ch
0x412a5b    xchg ebp, eax
0x412a5c    ret 0x8348

------> offset: 0x412a58
0x412a58    ins byte [rdi], dx
0x412a59    add [rdi], cl
0x412a5b    xchg ebp, eax
0x412a5c    ret 0x8348

------> offset: 0x412a59
0x412a59    add [rdi], cl
0x412a5b    xchg ebp, eax
0x412a5c    ret 0x8348

------> offset: 0x412a5b
0x412a5b    xchg ebp, eax
0x412a5c    ret 0x8348

------> offset: 0x412a6d
0x412a6d    retf 0x4801

------> offset: 0x412b14
0x412b14    add [rcx+0x548d48cf], cl
0x412b1a    ret

------> offset: 0x412b2c
0x412b2c    add bl, dl
0x412b2e    loopnz 0x412ab5
0x412b30    rol byte [rcx+0xf], 0x94
0x412b34    ret

------> offset: 0x412b2e
0x412b2e    loopnz 0x412ab5
0x412b30    rol byte [rcx+0xf], 0x94
0x412b34    ret

------> offset: 0x412b30
0x412b30    rol byte [rcx+0xf], 0x94
0x412b34    ret

------> offset: 0x412b4c
0x412b4c    ret 0xb48b

------> offset: 0x412b60
0x412b60    clc
0x412b61    add al, 0x74
0x412b63    cmp al, 0x89
0x412b65    ret 0xb48b

------> offset: 0x412b61
0x412b61    add al, 0x74
0x412b63    cmp al, 0x89
0x412b65    ret 0xb48b

------> offset: 0x412b63
0x412b63    cmp al, 0x89
0x412b65    ret 0xb48b

------> offset: 0x412c3e
0x412c3e    add [rax-0x7d], cl
0x412c42    ret 0x110

------> offset: 0x412c42
0x412c42    ret 0x110

------> offset: 0x412cbe
0x412cbe    inc dword [rbx-0x73]
0x412cc1    sub eax, 0x448d48fe
0x412cc7    ret

------> offset: 0x412cc1
0x412cc1    sub eax, 0x448d48fe
0x412cc7    ret

------> offset: 0x412ccb
0x412ccb    push rax
0x412ccc    adc [rax+0x39], cl
0x412ccf    ret 0x840f

------> offset: 0x412ccc
0x412ccc    adc [rax+0x39], cl
0x412ccf    ret 0x840f

------> offset: 0x412da0
0x412da0    ret 0xc789

------> offset: 0x412e87
0x412e87    mov ecx, 0xffffffffe8004949
0x412e8c    retf

------> offset: 0x412e88
0x412e88    add r8b, bpl
0x412e8c    retf

------> offset: 0x412e8a
0x412e8a    add al, ch
0x412e8c    retf

------> offset: 0x412ef4
0x412ef4    retf 0x4901

------> offset: 0x412f1a
0x412f1a    clc
0x412f1b    add al, [rdi+rcx+0x46]
0x412f1f    retf 0x59e9

------> offset: 0x412f1b
0x412f1b    add al, [rdi+rcx+0x46]
0x412f1f    retf 0x59e9

------> offset: 0x412f1e
0x412f1e    retf 0x59e9

------> offset: 0x412f36
0x412f36    test bl, dh
0x412f38    or [rax], al
0x412f3a    add [rcx-0xa], al
0x412f3d    ret 0xf01

------> offset: 0x412f37
0x412f37    or [rax], al
0x412f3a    add [rcx-0xa], al
0x412f3d    ret 0xf01

------> offset: 0x412f3a
0x412f3a    add [rcx-0xa], al
0x412f3d    ret 0xf01

------> offset: 0x4130c8
0x4130c8    add cl, [rax-0x7d]
0x4130cb    retf 0x4c01

------> offset: 0x4130cb
0x4130cb    retf 0x4c01

------> offset: 0x413152
0x413152    adc [rcx+rcx*4+0x70], cl
0x413156    or [rax-0x77], cl
0x413159    retf 0x348

------> offset: 0x413156
0x413156    or [rax-0x77], cl
0x413159    retf 0x348

------> offset: 0x413159
0x413159    retf 0x348

------> offset: 0x41322f
0x41322f    xor cl, [rcx+0x21]
0x413232    iret

------> offset: 0x41324a
0x41324a    fisubr word [rdx]
0x41324c    add [rax-0x77], cl
0x41324f    ret 0x58b

------> offset: 0x41324c
0x41324c    add [rax-0x77], cl
0x41324f    ret 0x58b

------> offset: 0x41324f
0x41324f    ret 0x58b

------> offset: 0x4132c5
0x4132c5    add [rcx-0x7d], cl
0x4132c8    retf 0x4d01

------> offset: 0x413386
0x413386    mov [rdi], ch
0x413388    add [rax], eax
0x41338a    add [rax-0x77], cl
0x41338d    iret

------> offset: 0x413388
0x413388    add [rax], eax
0x41338a    add [rax-0x77], cl
0x41338d    iret

------> offset: 0x41338a
0x41338a    add [rax-0x77], cl
0x41338d    iret

------> offset: 0x4134f9
0x4134f9    add [rax-0x7d], cl
0x4134fc    clc
0x4134fd    dec dword [rax-0x77]
0x413500    ret 0x840f

------> offset: 0x4134fc
0x4134fc    clc
0x4134fd    dec dword [rax-0x77]
0x413500    ret 0x840f

------> offset: 0x4134fd
0x4134fd    dec dword [rax-0x77]
0x413500    ret 0x840f

------> offset: 0x413598
0x413598    sub al, ch
0x41359a    ret 0x217

------> offset: 0x41359a
0x41359a    ret 0x217

------> offset: 0x4135bc
0x4135bc    retf 0x4802

------> offset: 0x4135c9
0x4135c9    rcl dword [rip+0x2ad259], 0x83
0x4135d0    ret 0x8b01

------> offset: 0x4135d0
0x4135d0    ret 0x8b01

------> offset: 0x4135d4
0x4135d4    pop rax
0x4135d5    shr [rdx], cl
0x4135d7    add [rcx], bh
0x4135d9    ret 0xa7e

------> offset: 0x4135d5
0x4135d5    shr [rdx], cl
0x4135d7    add [rcx], bh
0x4135d9    ret 0xa7e

------> offset: 0x4135d7
0x4135d7    add [rcx], bh
0x4135d9    ret 0xa7e

------> offset: 0x4135d9
0x4135d9    ret 0xa7e

------> offset: 0x41385b
0x41385b    push rcx
0x41385c    iret

------> offset: 0x413863
0x413863    in al, 0x48
0x413865    add r8b, bpl
0x413868    retf 0xffff

------> offset: 0x413864
0x413864    add r8b, bpl
0x413868    retf 0xffff

------> offset: 0x413866
0x413866    add al, ch
0x413868    retf 0xffff

------> offset: 0x413868
0x413868    retf 0xffff

------> offset: 0x41388b
0x41388b    sub [rax-0x77], cl
0x41388e    and cl, bpl
0x413891    ret 0xfff4

------> offset: 0x41388e
0x41388e    and cl, bpl
0x413891    ret 0xfff4

------> offset: 0x41388f
0x41388f    and cl, ch
0x413891    ret 0xfff4

------> offset: 0x413891
0x413891    ret 0xfff4

------> offset: 0x413a9a
0x413a9a    ret 0xe083

------> offset: 0x413ab0
0x413ab0    adc [rax+0x29], ecx
0x413ab3    ret 0x3948

------> offset: 0x413afb
0x413afb    mov dword [rax-0x78], 0xffffffff89481e3c
0x413b02    pop rbx
0x413b04    ret

------> offset: 0x413afc
0x413afc    mov [rsi+rbx], dil
0x413b00    mov rax, rsi
0x413b03    pop rbx
0x413b04    ret

------> offset: 0x413afd
0x413afd    mov [rsi+rbx], bh
0x413b00    mov rax, rsi
0x413b03    pop rbx
0x413b04    ret

------> offset: 0x413afe
0x413afe    cmp al, 0x1e
0x413b00    mov rax, rsi
0x413b03    pop rbx
0x413b04    ret

------> offset: 0x413b00
0x413b00    mov rax, rsi
0x413b03    pop rbx
0x413b04    ret

------> offset: 0x413b01
0x413b01    mov eax, esi
0x413b03    pop rbx
0x413b04    ret

------> offset: 0x413b20
0x413b20    mov dword [rax], 0xc
0x413b26    xor eax, eax
0x413b28    pop rbx
0x413b29    ret

------> offset: 0x413b21
0x413b21    add [rax+rax], cl
0x413b24    add [rax], al
0x413b26    xor eax, eax
0x413b28    pop rbx
0x413b29    ret

------> offset: 0x413b22
0x413b22    or al, 0x0
0x413b24    add [rax], al
0x413b26    xor eax, eax
0x413b28    pop rbx
0x413b29    ret

------> offset: 0x413b24
0x413b24    add [rax], al
0x413b26    xor eax, eax
0x413b28    pop rbx
0x413b29    ret

------> offset: 0x413b3e
0x413b3e    ret 0x4817

------> offset: 0x413b9a
0x413b9a    adc [rax-0x77], cl
0x413b9d    ret 0x8d48

------> offset: 0x413bdc
0x413bdc    add [rax], al
0x413bde    add [rax-0x7d], cl
0x413be1    retf 0x4805

------> offset: 0x413bde
0x413bde    add [rax-0x7d], cl
0x413be1    retf 0x4805

------> offset: 0x413be1
0x413be1    retf 0x4805

------> offset: 0x413c26
0x413c26    add [rax], al
0x413c28    add [rax-0x75], cl
0x413c2b    push rbp
0x413c2c    or [rax-0x77], cl
0x413c2f    retf

------> offset: 0x413c28
0x413c28    add [rax-0x75], cl
0x413c2b    push rbp
0x413c2c    or [rax-0x77], cl
0x413c2f    retf

------> offset: 0x413c2b
0x413c2b    push rbp
0x413c2c    or [rax-0x77], cl
0x413c2f    retf

------> offset: 0x413c2c
0x413c2c    or [rax-0x77], cl
0x413c2f    retf

------> offset: 0x413c31
0x413c31    ret 0x7402

------> offset: 0x413c50
0x413c50    push rbp
0x413c51    or dh, dh
0x413c53    ret 0x7502

------> offset: 0x413c51
0x413c51    or dh, dh
0x413c53    ret 0x7502

------> offset: 0x413c53
0x413c53    ret 0x7502

------> offset: 0x413c62
0x413c62    retf 0xd376

------> offset: 0x413c76
0x413c76    jz 0x413c9d
0x413c78    add [rax-0x7d], cl
0x413c7b    retf 0x4801

------> offset: 0x413c78
0x413c78    add [rax-0x7d], cl
0x413c7b    retf 0x4801

------> offset: 0x413cbb
0x413cbb    adc [rbx+0x5d], bl
0x413cbe    pop r12
0x413cc0    pop r13
0x413cc2    pop r14
0x413cc4    ret

------> offset: 0x413ccf
0x413ccf    mov dword [fs:rax], 0xc
0x413cd6    xor eax, eax
0x413cd8    ret

------> offset: 0x413cd0
0x413cd0    mov dword [rax], 0xc
0x413cd6    xor eax, eax
0x413cd8    ret

------> offset: 0x413cd1
0x413cd1    add [rax+rax], cl
0x413cd4    add [rax], al
0x413cd6    xor eax, eax
0x413cd8    ret

------> offset: 0x413cd2
0x413cd2    or al, 0x0
0x413cd4    add [rax], al
0x413cd6    xor eax, eax
0x413cd8    ret

------> offset: 0x413ce4
0x413ce4    dec dword [rax-0x7d]
0x413ce7    retf 0x4801

------> offset: 0x413da0
0x413da0    retf 0x2a

------> offset: 0x413da8
0x413da8    add bl, ch
0x413daa    or eax, 0xffffffffae35b10f
0x413daf    retf 0x2a

------> offset: 0x413daa
0x413daa    or eax, 0xffffffffae35b10f
0x413daf    retf 0x2a

------> offset: 0x413dac
0x413dac    mov cl, 0x35
0x413dae    scasb
0x413daf    retf 0x2a

------> offset: 0x413dae
0x413dae    scasb
0x413daf    retf 0x2a

------> offset: 0x413e71
0x413e71    mov rax, r8
0x413e74    add rsp, 0x8
0x413e78    pop rbx
0x413e79    pop rbp
0x413e7a    ret

------> offset: 0x413e72
0x413e72    mov eax, eax
0x413e74    add rsp, 0x8
0x413e78    pop rbx
0x413e79    pop rbp
0x413e7a    ret

------> offset: 0x413e73
0x413e73    ror byte [rax-0x7d], 0xc4
0x413e77    or [rbx+0x5d], bl
0x413e7a    ret

------> offset: 0x414029
0x414029    or [rax+rax+0xf], ch
0x41402d    xchg ebp, eax
0x41402e    ret 0x948

------> offset: 0x41402a
0x41402a    ins byte [rdi], dx
0x41402b    add [rdi], cl
0x41402d    xchg ebp, eax
0x41402e    ret 0x948

------> offset: 0x41402b
0x41402b    add [rdi], cl
0x41402d    xchg ebp, eax
0x41402e    ret 0x948

------> offset: 0x41402d
0x41402d    xchg ebp, eax
0x41402e    ret 0x948

------> offset: 0x41402e
0x41402e    ret 0x948

------> offset: 0x414178
0x414178    add cl, [rax-0x7d]
0x41417b    iret

------> offset: 0x41447c
0x41447c    ret 0x4811

------> offset: 0x41447d
0x41447d    adc [rax+0x29], ecx
0x414480    ror byte [rax+0x39], 0x1
0x414483    ret

------> offset: 0x414480
0x414480    ror byte [rax+0x39], 0x1
0x414483    ret

------> offset: 0x414498
0x414498    add [rax], al
0x41449a    add [rax+0x39], cl
0x41449d    ret

------> offset: 0x4144ae
0x4144ae    loopz 0x414439
0x4144b0    ret 0xda29

------> offset: 0x4144b0
0x4144b0    ret 0xda29

------> offset: 0x4145f5
0x4145f5    ret 0xffff

------> offset: 0x41465e
0x41465e    add [rax-0x7b], ecx
0x414661    ret 0x7075

------> offset: 0x414661
0x414661    ret 0x7075

------> offset: 0x414759
0x414759    add eax, 0x2ae02e
0x41475e    add [rax], al
0x414760    add [rax], al
0x414762    ret

------> offset: 0x41475c
0x41475c    sub al, [rax]
0x41475e    add [rax], al
0x414760    add [rax], al
0x414762    ret

------> offset: 0x4147d2
0x4147d2    ret 0x7b74

------> offset: 0x414842
0x414842    push qword [rcx]
0x414844    ror byte [rax-0x7d], 0xc4
0x414848    or [rbx+0x5d], bl
0x41484b    ret

------> offset: 0x414843
0x414843    xor eax, eax
0x414845    add rsp, 0x8
0x414849    pop rbx
0x41484a    pop rbp
0x41484b    ret

------> offset: 0x41486d
0x41486d    dec dword [rax-0x77]
0x414870    ret 0x3d83

------> offset: 0x414870
0x414870    ret 0x3d83

------> offset: 0x4148b4
0x4148b4    clc
0x4148b5    pop rcx
0x4148b6    add r8b, bpl
0x4148b9    ret

------> offset: 0x4148b5
0x4148b5    pop rcx
0x4148b6    add r8b, bpl
0x4148b9    ret

------> offset: 0x4148b6
0x4148b6    add r8b, bpl
0x4148b9    ret

------> offset: 0x4148b7
0x4148b7    add al, ch
0x4148b9    ret

------> offset: 0x41497a
0x41497a    retf 0xe183

------> offset: 0x414990
0x414990    adc [rax+0x29], ecx
0x414993    retf 0x3948

------> offset: 0x414993
0x414993    retf 0x3948

------> offset: 0x4149d1
0x4149d1    xor esi, edx
0x4149d3    mov [rax+rbx], sil
0x4149d7    pop rbx
0x4149d8    ret

------> offset: 0x4149d3
0x4149d3    mov [rax+rbx], sil
0x4149d7    pop rbx
0x4149d8    ret

------> offset: 0x4149d4
0x4149d4    mov [rax+rbx], dh
0x4149d7    pop rbx
0x4149d8    ret

------> offset: 0x4149d5
0x4149d5    xor al, 0x18
0x4149d7    pop rbx
0x4149d8    ret

------> offset: 0x414a77
0x414a77    sbb [rax-0x77], cl
0x414a7a    xor [rax-0x7d], ecx
0x414a7d    ret 0x4810

------> offset: 0x414a7a
0x414a7a    xor [rax-0x7d], ecx
0x414a7d    ret 0x4810

------> offset: 0x414a7d
0x414a7d    ret 0x4810

------> offset: 0x414bbd
0x414bbd    test [rbx+0x48000021], ebx
0x414bc3    mov eax, ebx
0x414bc5    pop rbx
0x414bc6    ret

------> offset: 0x414bc0
0x414bc0    add [rax], al
0x414bc2    mov rax, rbx
0x414bc5    pop rbx
0x414bc6    ret

------> offset: 0x414bc1
0x414bc1    add [rax-0x77], cl
0x414bc4    fcomp dword [rbx-0x3d]
0x414bc7    xor eax, eax
0x414bc9    pop rbx
0x414bca    ret

------> offset: 0x414bc4
0x414bc4    fcomp dword [rbx-0x3d]
0x414bc7    xor eax, eax
0x414bc9    pop rbx
0x414bca    ret

------> offset: 0x414cd7
0x414cd7    add [rax-0x77], cl
0x414cda    rcr byte [rbx+0x5d], 0x1
0x414cdd    pop r12
0x414cdf    ret

------> offset: 0x414cda
0x414cda    rcr byte [rbx+0x5d], 0x1
0x414cdd    pop r12
0x414cdf    ret

------> offset: 0x414e82
0x414e82    stosb
0x414e83    ret

------> offset: 0x414e92
0x414e92    add [rax-0x7b], ecx
0x414e95    ret 0x2875

------> offset: 0x414e95
0x414e95    ret 0x2875

------> offset: 0x414ea9
0x414ea9    mov edi, [rcx-0x76b7ffd6]
0x414eaf    iret

------> offset: 0x414eaa
0x414eaa    mov ecx, 0xffffffff8948002a
0x414eaf    iret

------> offset: 0x414eb3
0x414eb3    add [rax], eax
0x414eb5    nop dword [rax]
0x414eb8    ret

------> offset: 0x41521a
0x41521a    in al, dx
0x41521b    or [rax+0x39], cl
0x41521e    ret 0x870f

------> offset: 0x41521b
0x41521b    or [rax+0x39], cl
0x41521e    ret 0x870f

------> offset: 0x41521e
0x41521e    ret 0x870f

------> offset: 0x4154bf
0x4154bf    ret 0xc

------> offset: 0x41550e
0x41550e    clc
0x41550f    cmovnz rax, rcx
0x415513    add rsp, 0x8
0x415517    ret

------> offset: 0x41550f
0x41550f    cmovnz rax, rcx
0x415513    add rsp, 0x8
0x415517    ret

------> offset: 0x415510
0x415510    cmovnz eax, ecx
0x415513    add rsp, 0x8
0x415517    ret

------> offset: 0x41551f
0x41551f    add [rax-0x73], cl
0x415522    add rsp, 0x8
0x415528    ret

------> offset: 0x415520
0x415520    lea rax, [rdx-0x10]
0x415524    add rsp, 0x8
0x415528    ret

------> offset: 0x415521
0x415521    lea eax, [rdx-0x10]
0x415524    add rsp, 0x8
0x415528    ret

------> offset: 0x41552e
0x41552e    add [rax], al
0x415530    xor eax, eax
0x415532    add rsp, 0x8
0x415536    ret

------> offset: 0x415530
0x415530    xor eax, eax
0x415532    add rsp, 0x8
0x415536    ret

------> offset: 0x41563a
0x41563a    or ecx, [rax+0x63]
0x41563d    ret

------> offset: 0x415694
0x415694    add rsp, 0x8
0x415698    mov eax, edx
0x41569a    pop rbx
0x41569b    pop rbp
0x41569c    ret

------> offset: 0x415695
0x415695    add esp, 0x8
0x415698    mov eax, edx
0x41569a    pop rbx
0x41569b    pop rbp
0x41569c    ret

------> offset: 0x4157fe
0x4157fe    cmpsb
0x4157ff    add [rax], al
0x415801    add [rax-0x7d], cl
0x415804    ret

------> offset: 0x4157ff
0x4157ff    add [rax], al
0x415801    add [rax-0x7d], cl
0x415804    ret

------> offset: 0x415a4a
0x415a4a    ret 0xfea8

------> offset: 0x415c47
0x415c47    add [rax], al
0x415c49    add [rbp-0x7b], al
0x415c4c    ror byte [rdi], 0x88
0x415c4f    retf

------> offset: 0x415c49
0x415c49    add [rbp-0x7b], al
0x415c4c    ror byte [rdi], 0x88
0x415c4f    retf

------> offset: 0x415c4c
0x415c4c    ror byte [rdi], 0x88
0x415c4f    retf

------> offset: 0x415c8f
0x415c8f    mov cl, 0x35
0x415c91    retf

------> offset: 0x415d63
0x415d63    adc [rax-0x7d], cl
0x415d66    ret 0x4810

------> offset: 0x415dd7
0x415dd7    movsd
0x415dd8    retf 0x2a

------> offset: 0x415e11
0x415e11    cmp cl, [rbx+rcx*4+0x47]
0x415e15    or [rbp-0x77], cl
0x415e18    ret

------> offset: 0x415e14
0x415e14    or [r13-0x77], r9b
0x415e18    ret

------> offset: 0x415e15
0x415e15    or [rbp-0x77], cl
0x415e18    ret

------> offset: 0x415e77
0x415e77    add [rbp-0x77], cl
0x415e7a    ret

------> offset: 0x415e7e
0x415e7e    or [rcx-0x7d], ecx
0x415e81    sti
0x415e82    adc al, 0x77
0x415e84    sub ecx, [rcx-0x7d]
0x415e87    ret

------> offset: 0x415e81
0x415e81    sti
0x415e82    adc al, 0x77
0x415e84    sub ecx, [rcx-0x7d]
0x415e87    ret

------> offset: 0x415e82
0x415e82    adc al, 0x77
0x415e84    sub ecx, [rcx-0x7d]
0x415e87    ret

------> offset: 0x415e84
0x415e84    sub ecx, [rcx-0x7d]
0x415e87    ret

------> offset: 0x415eab
0x415eab    add [rax], al
0x415ead    add [rax], al
0x415eaf    add [rbp-0x77], cl
0x415eb2    ret

------> offset: 0x415ead
0x415ead    add [rax], al
0x415eaf    add [rbp-0x77], cl
0x415eb2    ret

------> offset: 0x415ebe
0x415ebe    add [rax], eax
0x415ec0    add [rcx-0x7d], cl
0x415ec3    ret

------> offset: 0x415ec0
0x415ec0    add [rcx-0x7d], cl
0x415ec3    ret

------> offset: 0x416051
0x416051    add [rcx], dh
0x416053    ror byte [rax-0x7d], 0xc4
0x416057    or [rbx+0x5d], bl
0x41605a    ret

------> offset: 0x416064
0x416064    sti
0x416065    add al, 0x77
0x416067    or [rcx-0x7d], ecx
0x41606a    ret

------> offset: 0x416065
0x416065    add al, 0x77
0x416067    or [rcx-0x7d], ecx
0x41606a    ret

------> offset: 0x416067
0x416067    or [rcx-0x7d], ecx
0x41606a    ret

------> offset: 0x41620c
0x41620c    add [rax], al
0x41620e    xor eax, eax
0x416210    add rsp, 0x18
0x416214    ret

------> offset: 0x41620e
0x41620e    xor eax, eax
0x416210    add rsp, 0x18
0x416214    ret

------> offset: 0x416210
0x416210    add rsp, 0x18
0x416214    ret

------> offset: 0x416211
0x416211    add esp, 0x18
0x416214    ret

------> offset: 0x4164cd
0x4164cd    mov edi, 0xffffffff85002aa2
0x4164d2    ror byte [rdi], 0x88
0x4164d5    iret

------> offset: 0x4164d2
0x4164d2    ror byte [rdi], 0x88
0x4164d5    iret

------> offset: 0x41659c
0x41659c    xor [rcx+rcx*4-0x20], cl
0x4165a0    pop rbx
0x4165a1    pop rbp
0x4165a2    pop r12
0x4165a4    ret

------> offset: 0x41659d
0x41659d    mov rax, r12
0x4165a0    pop rbx
0x4165a1    pop rbp
0x4165a2    pop r12
0x4165a4    ret

------> offset: 0x41659e
0x41659e    mov eax, esp
0x4165a0    pop rbx
0x4165a1    pop rbp
0x4165a2    pop r12
0x4165a4    ret

------> offset: 0x41659f
0x41659f    loopnz 0x4165fc
0x4165a1    pop rbp
0x4165a2    pop r12
0x4165a4    ret

------> offset: 0x416602
0x416602    retf 0x8902

------> offset: 0x416795
0x416795    mov ecx, esi
0x416797    mov eax, 0x16
0x41679c    jz 0x4167a0
0x41679e    ret

------> offset: 0x416796
0x416796    int1
0x416797    mov eax, 0x16
0x41679c    jz 0x4167a0
0x41679e    ret

------> offset: 0x416797
0x416797    mov eax, 0x16
0x41679c    jz 0x4167a0
0x41679e    ret

------> offset: 0x41679a
0x41679a    add [rax], al
0x41679c    jz 0x4167a0
0x41679e    ret

------> offset: 0x41679c
0x41679c    jz 0x4167a0
0x41679e    ret

------> offset: 0x4167a5
0x4167a5    retf 0x4853

------> offset: 0x4167b0
0x4167b0    jp 0x4167b1
0x4167b2    test rdi, rdx
0x4167b5    jz 0x4167c0
0x4167b7    pop rbx
0x4167b8    ret

------> offset: 0x4167b1
0x4167b1    dec dword [rax-0x7b]
0x4167b4    xlat byte [rbx+al]
0x4167b5    jz 0x4167c0
0x4167b7    pop rbx
0x4167b8    ret

------> offset: 0x4167b2
0x4167b2    test rdi, rdx
0x4167b5    jz 0x4167c0
0x4167b7    pop rbx
0x4167b8    ret

------> offset: 0x4167b3
0x4167b3    test edi, edx
0x4167b5    jz 0x4167c0
0x4167b7    pop rbx
0x4167b8    ret

------> offset: 0x4167b4
0x4167b4    xlat byte [rbx+al]
0x4167b5    jz 0x4167c0
0x4167b7    pop rbx
0x4167b8    ret

------> offset: 0x4167b5
0x4167b5    jz 0x4167c0
0x4167b7    pop rbx
0x4167b8    ret

------> offset: 0x4167b6
0x4167b6    or [rbx-0xd], ebx
0x4167b9    ret

------> offset: 0x4167c9
0x4167c9    or [rax-0x77], cl
0x4167cc    iret

------> offset: 0x4167cf
0x4167cf    jrcxz 0x4167d0
0x4167d1    dec dword [rax-0x77]
0x4167d4    ret 0xcb8

------> offset: 0x4167d1
0x4167d1    dec dword [rax-0x77]
0x4167d4    ret 0xcb8

------> offset: 0x4167d4
0x4167d4    ret 0xcb8

------> offset: 0x4167ff
0x4167ff    and al, 0x60
0x416801    jz 0x416810
0x416803    add rsp, 0x70
0x416807    pop rbx
0x416808    ret

------> offset: 0x416801
0x416801    jz 0x416810
0x416803    add rsp, 0x70
0x416807    pop rbx
0x416808    ret

------> offset: 0x416802
0x416802    or eax, 0x70c48348
0x416807    pop rbx
0x416808    ret

------> offset: 0x416803
0x416803    add rsp, 0x70
0x416807    pop rbx
0x416808    ret

------> offset: 0x416804
0x416804    add esp, 0x70
0x416807    pop rbx
0x416808    ret

------> offset: 0x416806
0x416806    jo 0x416863
0x416808    ret

------> offset: 0x416849
0x416849    or [rax+rax-0x18], ch
0x41684d    iret

------> offset: 0x41684a
0x41684a    ins byte [rdi], dx
0x41684b    add al, ch
0x41684d    iret

------> offset: 0x4168bf
0x4168bf    add eax, [rax]
0x4168c1    add rsp, 0x70
0x4168c5    xor eax, eax
0x4168c7    pop rbx
0x4168c8    ret

------> offset: 0x4168c1
0x4168c1    add rsp, 0x70
0x4168c5    xor eax, eax
0x4168c7    pop rbx
0x4168c8    ret

------> offset: 0x4168c2
0x4168c2    add esp, 0x70
0x4168c5    xor eax, eax
0x4168c7    pop rbx
0x4168c8    ret

------> offset: 0x416f93
0x416f93    add rsp, 0x8
0x416f97    mov rax, rdx
0x416f9a    ret

------> offset: 0x416f94
0x416f94    add esp, 0x8
0x416f97    mov rax, rdx
0x416f9a    ret

------> offset: 0x416f97
0x416f97    mov rax, rdx
0x416f9a    ret

------> offset: 0x416f98
0x416f98    mov eax, edx
0x416f9a    ret

------> offset: 0x416fbf
0x416fbf    jz 0x416fc8
0x416fc1    lea rax, [rip+0x19e58]
0x416fc8    ret

------> offset: 0x416fc1
0x416fc1    lea rax, [rip+0x19e58]
0x416fc8    ret

------> offset: 0x416fc2
0x416fc2    lea eax, [rip+0x19e58]
0x416fc8    ret

------> offset: 0x416fc3
0x416fc3    add eax, 0x19e58
0x416fc8    ret

------> offset: 0x416fc4
0x416fc4    pop rax
0x416fc5    sahf
0x416fc6    add [rax], eax
0x416fc8    ret

------> offset: 0x416fc5
0x416fc5    sahf
0x416fc6    add [rax], eax
0x416fc8    ret

------> offset: 0x416fc6
0x416fc6    add [rax], eax
0x416fc8    ret

------> offset: 0x41701d
0x41701d    add al, 0x7
0x41701f    cmp [rax], sil
0x417022    cmovnz rax, rdx
0x417026    ret

------> offset: 0x41701f
0x41701f    cmp [rax], sil
0x417022    cmovnz rax, rdx
0x417026    ret

------> offset: 0x417020
0x417020    cmp [rax], dh
0x417022    cmovnz rax, rdx
0x417026    ret

------> offset: 0x417021
0x417021    xor [rax+0xf], cl
0x417024    ret 0x90c3

------> offset: 0x417022
0x417022    cmovnz rax, rdx
0x417026    ret

------> offset: 0x417023
0x417023    cmovnz eax, edx
0x417026    ret

------> offset: 0x417024
0x417024    ret 0x90c3

------> offset: 0x417071
0x417071    enter 0xf66, 0xeb
0x417075    ret

------> offset: 0x417110
0x417110    xlat byte [rbx+al]
0x417111    ret 0xc148

------> offset: 0x417119
0x417119    xlat byte [rbx+al]
0x41711a    ret

------> offset: 0x41713f
0x41713f    xor [rax+0xf], cl
0x417142    ret 0x66c3

------> offset: 0x417142
0x417142    ret 0x66c3

------> offset: 0x41718c
0x41718c    fsub qword [rsi+0xf]
0x41718f    xlat byte [rbx+al]
0x417190    ret

------> offset: 0x4171ad
0x4171ad    xlat byte [rbx+al]
0x4171ae    retf

------> offset: 0x4171c5
0x4171c5    shl byte [rsi+0xf], 0xeb
0x4171c9    ret 0xf66

------> offset: 0x4171c9
0x4171c9    ret 0xf66

------> offset: 0x417222
0x417222    jnz 0x41722b
0x417224    lea rax, [rip+0x5]
0x41722b    ret

------> offset: 0x417224
0x417224    lea rax, [rip+0x5]
0x41722b    ret

------> offset: 0x417225
0x417225    lea eax, [rip+0x5]
0x41722b    ret

------> offset: 0x417226
0x417226    add eax, 0x5
0x41722b    ret

------> offset: 0x41725f
0x41725f    shl dword [rsi+0xf], 0x74
0x417263    retf 0xf66

------> offset: 0x417380
0x417380    xlat byte [rbx+al]
0x417381    retf 0xead3

------> offset: 0x417381
0x417381    retf 0xead3

------> offset: 0x4173bb
0x4173bb    add [rax], al
0x4173bd    add [rax], al
0x4173bf    add [rcx-0x7d], cl
0x4173c2    ret 0xf10

------> offset: 0x4173bd
0x4173bd    add [rax], al
0x4173bf    add [rcx-0x7d], cl
0x4173c2    ret 0xf10

------> offset: 0x4173bf
0x4173bf    add [rcx-0x7d], cl
0x4173c2    ret 0xf10

------> offset: 0x4173c2
0x4173c2    ret 0xf10

------> offset: 0x417405
0x417405    adc [rsi+0xf], ah
0x417408    outs dx, dword [rsi]
0x417409    fmul qword [rcx-0x7d]
0x41740c    ret 0x7f10

------> offset: 0x417408
0x417408    outs dx, dword [rsi]
0x417409    fmul qword [rcx-0x7d]
0x41740c    ret 0x7f10

------> offset: 0x417409
0x417409    fmul qword [rcx-0x7d]
0x41740c    ret 0x7f10

------> offset: 0x41740c
0x41740c    ret 0x7f10

------> offset: 0x417466
0x417466    xlat byte [rbx+al]
0x417467    sal bh, 0x1
0x417469    ret 0xfffe

------> offset: 0x417467
0x417467    sal bh, 0x1
0x417469    ret 0xfffe

------> offset: 0x4175a6
0x4175a6    xlat byte [rbx+al]
0x4175a7    sal bh, 0x1
0x4175a9    ret 0xfffc

------> offset: 0x4175a7
0x4175a7    sal bh, 0x1
0x4175a9    ret 0xfffc

------> offset: 0x4175a9
0x4175a9    ret 0xfffc

------> offset: 0x4176e6
0x4176e6    xlat byte [rbx+al]
0x4176e7    sal bh, 0x1
0x4176e9    ret 0xfff8

------> offset: 0x4176e7
0x4176e7    sal bh, 0x1
0x4176e9    ret 0xfff8

------> offset: 0x4176e9
0x4176e9    ret 0xfff8

------> offset: 0x417826
0x417826    xlat byte [rbx+al]
0x417827    sal bh, 0x1
0x417829    ret 0xfff0

------> offset: 0x417827
0x417827    sal bh, 0x1
0x417829    ret 0xfff0

------> offset: 0x417829
0x417829    ret 0xfff0

------> offset: 0x417966
0x417966    xlat byte [rbx+al]
0x417967    sal bh, 0x1
0x417969    ret 0xffe0

------> offset: 0x417967
0x417967    sal bh, 0x1
0x417969    ret 0xffe0

------> offset: 0x417969
0x417969    ret 0xffe0

------> offset: 0x417aa6
0x417aa6    xlat byte [rbx+al]
0x417aa7    sal bh, 0x1
0x417aa9    ret 0xffc0

------> offset: 0x417aa7
0x417aa7    sal bh, 0x1
0x417aa9    ret 0xffc0

------> offset: 0x417be6
0x417be6    xlat byte [rbx+al]
0x417be7    sal bh, 0x1
0x417be9    ret 0xff80

------> offset: 0x417be7
0x417be7    sal bh, 0x1
0x417be9    ret 0xff80

------> offset: 0x417be9
0x417be9    ret 0xff80

------> offset: 0x417d26
0x417d26    xlat byte [rbx+al]
0x417d27    sal bh, 0x1
0x417d29    ret 0xff00

------> offset: 0x417d27
0x417d27    sal bh, 0x1
0x417d29    ret 0xff00

------> offset: 0x417d29
0x417d29    ret 0xff00

------> offset: 0x417e66
0x417e66    xlat byte [rbx+al]
0x417e67    sal bh, 0x1
0x417e69    ret 0xfe00

------> offset: 0x417e67
0x417e67    sal bh, 0x1
0x417e69    ret 0xfe00

------> offset: 0x417e69
0x417e69    ret 0xfe00

------> offset: 0x417fa6
0x417fa6    xlat byte [rbx+al]
0x417fa7    sal bh, 0x1
0x417fa9    ret 0xfc00

------> offset: 0x417fa7
0x417fa7    sal bh, 0x1
0x417fa9    ret 0xfc00

------> offset: 0x417fa9
0x417fa9    ret 0xfc00

------> offset: 0x4180e6
0x4180e6    xlat byte [rbx+al]
0x4180e7    sal bh, 0x1
0x4180e9    ret 0xf800

------> offset: 0x4180e7
0x4180e7    sal bh, 0x1
0x4180e9    ret 0xf800

------> offset: 0x4180e9
0x4180e9    ret 0xf800

------> offset: 0x418226
0x418226    xlat byte [rbx+al]
0x418227    sal bh, 0x1
0x418229    ret 0xf000

------> offset: 0x418227
0x418227    sal bh, 0x1
0x418229    ret 0xf000

------> offset: 0x418229
0x418229    ret 0xf000

------> offset: 0x418366
0x418366    xlat byte [rbx+al]
0x418367    sal bh, 0x1
0x418369    ret 0xe000

------> offset: 0x418367
0x418367    sal bh, 0x1
0x418369    ret 0xe000

------> offset: 0x418369
0x418369    ret 0xe000

------> offset: 0x4184a6
0x4184a6    xlat byte [rbx+al]
0x4184a7    sal bh, 0x1
0x4184a9    ret 0xc000

------> offset: 0x4184a7
0x4184a7    sal bh, 0x1
0x4184a9    ret 0xc000

------> offset: 0x4184a9
0x4184a9    ret 0xc000

------> offset: 0x4185e6
0x4185e6    xlat byte [rbx+al]
0x4185e7    sal bh, 0x1
0x4185e9    ret 0x8000

------> offset: 0x4185e7
0x4185e7    sal bh, 0x1
0x4185e9    ret 0x8000

------> offset: 0x4185e9
0x4185e9    ret 0x8000

------> offset: 0x418646
0x418646    or al, 0x16
0x418648    movzx eax, byte [rdi+rdx]
0x41864c    sub eax, ecx
0x41864e    ret

------> offset: 0x418648
0x418648    movzx eax, byte [rdi+rdx]
0x41864c    sub eax, ecx
0x41864e    ret

------> offset: 0x41864a
0x41864a    add al, 0x17
0x41864c    sub eax, ecx
0x41864e    ret

------> offset: 0x41864c
0x41864c    sub eax, ecx
0x41864e    ret

------> offset: 0x41864d
0x41864d    enter 0x31c3, 0xc0
0x418651    ret

------> offset: 0x41865f
0x41865f    add [rdi], cl
0x418661    mov dh, 0xe
0x418663    movzx eax, byte [rdi]
0x418666    sub eax, ecx
0x418668    ret

------> offset: 0x418660
0x418660    movzx ecx, byte [rsi]
0x418663    movzx eax, byte [rdi]
0x418666    sub eax, ecx
0x418668    ret

------> offset: 0x418661
0x418661    mov dh, 0xe
0x418663    movzx eax, byte [rdi]
0x418666    sub eax, ecx
0x418668    ret

------> offset: 0x418663
0x418663    movzx eax, byte [rdi]
0x418666    sub eax, ecx
0x418668    ret

------> offset: 0x418664
0x418664    mov dh, 0x7
0x418666    sub eax, ecx
0x418668    ret

------> offset: 0x41873e
0x41873e    add [rax], al
0x418740    add [rax-0x77], cl
0x418743    retf 0x6666

------> offset: 0x418740
0x418740    add [rax-0x77], cl
0x418743    retf 0x6666

------> offset: 0x418743
0x418743    retf 0x6666

------> offset: 0x41878d
0x41878d    add al, 0xf
0x41878f    movzx edx, byte [rsi+rcx]
0x418793    sub eax, edx
0x418795    ret

------> offset: 0x41878f
0x41878f    movzx edx, byte [rsi+rcx]
0x418793    sub eax, edx
0x418795    ret

------> offset: 0x418791
0x418791    adc al, 0xe
0x418793    sub eax, edx
0x418795    ret

------> offset: 0x4187e0
0x4187e0    adc [rax], al
0x4187e2    add [rax-0x77], cl
0x4187e5    retf 0x2e66

------> offset: 0x4187e2
0x4187e2    add [rax-0x77], cl
0x4187e5    retf 0x2e66

------> offset: 0x4187e5
0x4187e5    retf 0x2e66

------> offset: 0x4187eb
0x4187eb    add [rax], al
0x4187ed    add [rax], al
0x4187ef    add [rcx-0x7d], cl
0x4187f2    ret 0x7f10

------> offset: 0x4187ed
0x4187ed    add [rax], al
0x4187ef    add [rcx-0x7d], cl
0x4187f2    ret 0x7f10

------> offset: 0x4187ef
0x4187ef    add [rcx-0x7d], cl
0x4187f2    ret 0x7f10

------> offset: 0x41880d
0x41880d    or eax, [rax]
0x41880f    add [rax-0x7d], cl
0x418812    ret 0x4910

------> offset: 0x41880f
0x41880f    add [rax-0x7d], cl
0x418812    ret 0x4910

------> offset: 0x418812
0x418812    ret 0x4910

------> offset: 0x418813
0x418813    adc [rcx-0x7d], cl
0x418816    ret 0x7f10

------> offset: 0x41882f
0x41882f    xchg [rbx+rcx-0x7cb80000], cl
0x418836    ret 0xeb10

------> offset: 0x418831
0x418831    or eax, [rax]
0x418833    add [rax-0x7d], cl
0x418836    ret 0xeb10

------> offset: 0x418833
0x418833    add [rax-0x7d], cl
0x418836    ret 0xeb10

------> offset: 0x418836
0x418836    ret 0xeb10

------> offset: 0x4188dd
0x4188dd    or al, [rax]
0x4188df    add [rax-0x7d], cl
0x4188e2    ret 0x4910

------> offset: 0x4188ff
0x4188ff    xchg [rdx+rcx-0x7cb80000], bh
0x418906    ret 0xeb10

------> offset: 0x418901
0x418901    or al, [rax]
0x418903    add [rax-0x7d], cl
0x418906    ret 0xeb10

------> offset: 0x418980
0x418980    adc [rax], al
0x418982    add [rax-0x77], cl
0x418985    retf 0x8349

------> offset: 0x418982
0x418982    add [rax-0x77], cl
0x418985    retf 0x8349

------> offset: 0x418985
0x418985    retf 0x8349

------> offset: 0x4189a1
0x4189a1    xchg [rdx], bl
0x4189a3    or al, [rax]
0x4189a5    add [rax-0x7d], cl
0x4189a8    ret 0x4910

------> offset: 0x4189c5
0x4189c5    xchg dh, dh
0x4189c7    or [rax], eax
0x4189c9    add [rax-0x7d], cl
0x4189cc    ret 0xeb10

------> offset: 0x4189c7
0x4189c7    or [rax], eax
0x4189c9    add [rax-0x7d], cl
0x4189cc    ret 0xeb10

------> offset: 0x418a6c
0x418a6c    push rax
0x418a6d    or [rax], eax
0x418a6f    add [rax-0x7d], cl
0x418a72    ret 0x4910

------> offset: 0x418a6d
0x418a6d    or [rax], eax
0x418a6f    add [rax-0x7d], cl
0x418a72    ret 0x4910

------> offset: 0x418b3c
0x418b3c    or byte [rax], 0x0
0x418b3f    add [rax-0x7d], cl
0x418b42    ret 0x4910

------> offset: 0x418b3d
0x418b3d    or [rax], al
0x418b3f    add [rax-0x7d], cl
0x418b42    ret 0x4910

------> offset: 0x418b5f
0x418b5f    xchg [rax+rcx+0x0], bl
0x418b63    add [rax-0x7d], cl
0x418b66    ret 0xeb10

------> offset: 0x418b60
0x418b60    pop rsp
0x418b61    or [rax], al
0x418b63    add [rax-0x7d], cl
0x418b66    ret 0xeb10

------> offset: 0x418b61
0x418b61    or [rax], al
0x418b63    add [rax-0x7d], cl
0x418b66    ret 0xeb10

------> offset: 0x418c2f
0x418c2f    xchg [rdi+rax-0x7cb80000], cl
0x418c36    ret 0xeb10

------> offset: 0x418cff
0x418cff    xchg [rsi+rax-0x7cb80000], bh
0x418d06    ret 0xeb10

------> offset: 0x418dcf
0x418dcf    xchg ah, ch
0x418dd1    add eax, 0xffffffff83480000
0x418dd6    ret 0xeb10

------> offset: 0x418dd0
0x418dd0    in al, dx
0x418dd1    add eax, 0xffffffff83480000
0x418dd6    ret 0xeb10

------> offset: 0x418dd1
0x418dd1    add eax, 0xffffffff83480000
0x418dd6    ret 0xeb10

------> offset: 0x418e7c
0x418e7c    add eax, 0xffffffff83480000
0x418e82    ret 0x4910

------> offset: 0x418e9f
0x418e9f    xchg [rax-0x7cb80000], bl
0x418ea6    ret 0xeb10

------> offset: 0x418f4d
0x418f4d    add al, 0x0
0x418f4f    add [rax-0x7d], cl
0x418f52    ret 0x4910

------> offset: 0x418f6f
0x418f6f    xchg [rsp+rax+0x0], cl
0x418f73    add [rax-0x7d], cl
0x418f76    ret 0xeb10

------> offset: 0x418f70
0x418f70    add al, 0x0
0x418f73    add [rax-0x7d], cl
0x418f76    ret 0xeb10

------> offset: 0x41901d
0x41901d    add eax, [rax]
0x41901f    add [rax-0x7d], cl
0x419022    ret 0x4910

------> offset: 0x41903f
0x41903f    xchg [rbx+rax+0x0], bh
0x419043    add [rax-0x7d], cl
0x419046    ret 0xeb10

------> offset: 0x419041
0x419041    add eax, [rax]
0x419043    add [rax-0x7d], cl
0x419046    ret 0xeb10

------> offset: 0x4190eb
0x4190eb    xchg al, dl
0x4190ed    add al, [rax]
0x4190ef    add [rax-0x7d], cl
0x4190f2    ret 0x4910

------> offset: 0x4190ed
0x4190ed    add al, [rax]
0x4190ef    add [rax-0x7d], cl
0x4190f2    ret 0x4910

------> offset: 0x41910f
0x41910f    xchg [rdx+rax-0x7cb80000], ch
0x419116    ret 0xeb10

------> offset: 0x419110
0x419110    lodsb
0x419111    add al, [rax]
0x419113    add [rax-0x7d], cl
0x419116    ret 0xeb10

------> offset: 0x419111
0x419111    add al, [rax]
0x419113    add [rax-0x7d], cl
0x419116    ret 0xeb10

------> offset: 0x4191bb
0x4191bb    xchg [rax], al
0x4191bd    add al, [rax]
0x4191bf    add [rax-0x7d], cl
0x4191c2    ret 0x4910

------> offset: 0x4191df
0x4191df    xchg ah, bl
0x4191e1    add [rax], eax
0x4191e3    add [rax-0x7d], cl
0x4191e6    ret 0xeb10

------> offset: 0x4191e1
0x4191e1    add [rax], eax
0x4191e3    add [rax-0x7d], cl
0x4191e6    ret 0xeb10

------> offset: 0x41928b
0x41928b    xchg [rax], dh
0x41928d    add [rax], eax
0x41928f    add [rax-0x7d], cl
0x419292    ret 0x4910

------> offset: 0x41928d
0x41928d    add [rax], eax
0x41928f    add [rax-0x7d], cl
0x419292    ret 0x4910

------> offset: 0x4193c4
0x4193c4    retf 0x8d4a

------> offset: 0x4193d2
0x4193d2    test r8d, r8d
0x4193d5    jz 0x4193d8
0x4193d7    xchg edx, eax
0x4193d8    sub eax, edx
0x4193da    ret

------> offset: 0x4193d3
0x4193d3    test eax, eax
0x4193d5    jz 0x4193d8
0x4193d7    xchg edx, eax
0x4193d8    sub eax, edx
0x4193da    ret

------> offset: 0x4193d5
0x4193d5    jz 0x4193d8
0x4193d7    xchg edx, eax
0x4193d8    sub eax, edx
0x4193da    ret

------> offset: 0x4193d7
0x4193d7    xchg edx, eax
0x4193d8    sub eax, edx
0x4193da    ret

------> offset: 0x41942a
0x41942a    ret 0x1f4

------> offset: 0x419452
0x419452    jz 0x41945b
0x419454    lea rax, [rip+0x13d25]
0x41945b    ret

------> offset: 0x419454
0x419454    lea rax, [rip+0x13d25]
0x41945b    ret

------> offset: 0x419455
0x419455    lea eax, [rip+0x13d25]
0x41945b    ret

------> offset: 0x419456
0x419456    add eax, 0x13d25
0x41945b    ret

------> offset: 0x419481
0x419481    ret 0xc9ff

------> offset: 0x4194b0
0x4194b0    add cl, [rax-0x7d]
0x4194b3    ret 0x4808

------> offset: 0x4194b3
0x4194b3    ret 0x4808

------> offset: 0x4194ef
0x4194ef    xor [rax-0x77], cl
0x4194f2    add cl, [rax-0x7d]
0x4194f5    ret 0x4808

------> offset: 0x419513
0x419513    add cl, [rax-0x7d]
0x419516    ret 0xe908

------> offset: 0x419516
0x419516    ret 0xe908

------> offset: 0x419521
0x419521    add al, [rax+rax*8-0xb7ed8c]
0x419528    ret 0x2288

------> offset: 0x419523
0x419523    sal byte [rdx+rdx+0x48], 0xff
0x419528    ret 0x2288

------> offset: 0x419525
0x419525    adc cl, [rax-0x1]
0x419528    ret 0x2288

------> offset: 0x419528
0x419528    ret 0x2288

------> offset: 0x41952a
0x41952a    and al, [rsp-0xb7f68c]
0x419531    ret 0xc148

------> offset: 0x41952c
0x41952c    in al, 0x74
0x41952e    or [rax-0x1], ecx
0x419531    ret 0xc148

------> offset: 0x41952e
0x41952e    or [rax-0x1], ecx
0x419531    ret 0xc148

------> offset: 0x419532
0x419532    shr rax, 0x10
0x419536    jmp 0x419520
0x419538    mov rax, rdi
0x41953b    ret

------> offset: 0x419533
0x419533    shr eax, 0x10
0x419536    jmp 0x419520
0x419538    mov rax, rdi
0x41953b    ret

------> offset: 0x419534
0x419534    call 0x492a8049
0x419539    mov eax, edi
0x41953b    ret

------> offset: 0x419536
0x419536    jmp 0x419520
0x419538    mov rax, rdi
0x41953b    ret

------> offset: 0x419578
0x419578    add rsp, 0x8
0x41957c    xor eax, eax
0x41957e    pop rbx
0x41957f    pop rbp
0x419580    ret

------> offset: 0x419579
0x419579    add esp, 0x8
0x41957c    xor eax, eax
0x41957e    pop rbx
0x41957f    pop rbp
0x419580    ret

------> offset: 0x41957c
0x41957c    xor eax, eax
0x41957e    pop rbx
0x41957f    pop rbp
0x419580    ret

------> offset: 0x4195b0
0x4195b0    add [rax-0x7f], cl
0x4195b3    stc
0x4195b4    iret

------> offset: 0x4195b3
0x4195b3    stc
0x4195b4    iret

------> offset: 0x4195c9
0x4195c9    test edx, edx
0x4195cb    jz 0x4195d1
0x4195cd    bsf eax, edx
0x4195d0    ret

------> offset: 0x4195cb
0x4195cb    jz 0x4195d1
0x4195cd    bsf eax, edx
0x4195d0    ret

------> offset: 0x4195cd
0x4195cd    bsf eax, edx
0x4195d0    ret

------> offset: 0x4195cf
0x4195cf    ret 0x48c3

------> offset: 0x4195ef
0x4195ef    xlat byte [rbx+al]
0x4195f0    ret 0x4166

------> offset: 0x4195f0
0x4195f0    ret 0x4166

------> offset: 0x419600
0x419600    ror dword [rax-0x3f], 0xe1
0x419604    and [rax+0x9], cl
0x419607    retf 0x8948

------> offset: 0x419604
0x419604    and [rax+0x9], cl
0x419607    retf 0x8948

------> offset: 0x419615
0x419615    test rdx, rdx
0x419618    jz 0x419690
0x41961a    bsf rax, rdx
0x41961e    ret

------> offset: 0x419616
0x419616    test edx, edx
0x419618    jz 0x419690
0x41961a    bsf rax, rdx
0x41961e    ret

------> offset: 0x419617
0x419617    sal [rsi+rsi*2+0x48], cl
0x41961b    bsf eax, edx
0x41961e    ret

------> offset: 0x419618
0x419618    jz 0x419690
0x41961a    bsf rax, rdx
0x41961e    ret

------> offset: 0x419619
0x419619    jbe 0x419663
0x41961b    bsf eax, edx
0x41961e    ret

------> offset: 0x41961a
0x41961a    bsf rax, rdx
0x41961e    ret

------> offset: 0x419671
0x419671    test rdx, rdx
0x419674    jz 0x419680
0x419676    bsf rax, rdx
0x41967a    ret

------> offset: 0x419672
0x419672    test edx, edx
0x419674    jz 0x419680
0x419676    bsf rax, rdx
0x41967a    ret

------> offset: 0x419673
0x419673    sal [rdx+rcx+0x48], cl
0x419677    bsf eax, edx
0x41967a    ret

------> offset: 0x419674
0x419674    jz 0x419680
0x419676    bsf rax, rdx
0x41967a    ret

------> offset: 0x419679
0x419679    ret 0xfc3

------> offset: 0x419731
0x419731    ror dword [rax-0x3f], 0xe1
0x419735    and [rax+0x9], cl
0x419738    retf 0xf48

------> offset: 0x419735
0x419735    and [rax+0x9], cl
0x419738    retf 0xf48

------> offset: 0x419738
0x419738    retf 0xf48

------> offset: 0x41973a
0x41973a    bsf edx, edx
0x41973d    add rax, rdx
0x419740    sub rax, rdi
0x419743    ret

------> offset: 0x41973b
0x41973b    mov esp, 0xffffffffd00148d2
0x419740    sub rax, rdi
0x419743    ret

------> offset: 0x41973c
0x41973c    ror [rax+0x1], cl
0x41973f    ror byte [rax+0x29], 0x1
0x419742    clc
0x419743    ret

------> offset: 0x41973d
0x41973d    add rax, rdx
0x419740    sub rax, rdi
0x419743    ret

------> offset: 0x41973e
0x41973e    add eax, edx
0x419740    sub rax, rdi
0x419743    ret

------> offset: 0x41973f
0x41973f    ror byte [rax+0x29], 0x1
0x419742    clc
0x419743    ret

------> offset: 0x419740
0x419740    sub rax, rdi
0x419743    ret

------> offset: 0x419741
0x419741    sub eax, edi
0x419743    ret

------> offset: 0x4197aa
0x4197aa    ret 0x17

------> offset: 0x4197ee
0x4197ee    retf 0x7

------> offset: 0x41983d
0x41983d    add [rbp-0x77], cl
0x419840    retf

------> offset: 0x419882
0x419882    retf 0x16

------> offset: 0x419917
0x419917    imul edx, [rsi], 0xffffffff894d0000
0x41991d    retf

------> offset: 0x419a96
0x419a96    test cl, ch
0x419a98    adc al, 0x0
0x419a9a    add [rbp-0x77], cl
0x419a9d    retf

------> offset: 0x419a98
0x419a98    adc al, 0x0
0x419a9a    add [rbp-0x77], cl
0x419a9d    retf

------> offset: 0x419c17
0x419c17    imul edx, [rbx], 0xffffffff894d0000
0x419c1d    retf

------> offset: 0x419c18
0x419c18    adc eax, [rax]
0x419c1a    add [rbp-0x77], cl
0x419c1d    retf

------> offset: 0x419d96
0x419d96    test cl, ch
0x419d98    adc [rax], eax
0x419d9a    add [rbp-0x77], cl
0x419d9d    retf

------> offset: 0x419d98
0x419d98    adc [rax], eax
0x419d9a    add [rbp-0x77], cl
0x419d9d    retf

------> offset: 0x419f17
0x419f17    imul edx, [rax], 0xffffffff894d0000
0x419f1d    retf

------> offset: 0x419f18
0x419f18    adc [rax], al
0x419f1a    add [rbp-0x77], cl
0x419f1d    retf

------> offset: 0x41a218
0x41a218    or eax, 0xffffffff894d0000
0x41a21d    retf

------> offset: 0x41a396
0x41a396    test cl, ch
0x41a398    or eax, [rax]
0x41a39a    add [rbp-0x77], cl
0x41a39d    retf

------> offset: 0x41a398
0x41a398    or eax, [rax]
0x41a39a    add [rbp-0x77], cl
0x41a39d    retf

------> offset: 0x41a517
0x41a517    imul ecx, [rdx], 0xffffffff894d0000
0x41a51d    retf

------> offset: 0x41a518
0x41a518    or al, [rax]
0x41a51a    add [rbp-0x77], cl
0x41a51d    retf

------> offset: 0x41a696
0x41a696    test cl, ch
0x41a698    or [rax], al
0x41a69a    add [rbp-0x77], cl
0x41a69d    retf

------> offset: 0x41a698
0x41a698    or [rax], al
0x41a69a    add [rbp-0x77], cl
0x41a69d    retf

------> offset: 0x41a817
0x41a817    imul eax, [rdi], 0xffffffff894d0000
0x41a81d    retf

------> offset: 0x41a996
0x41a996    test cl, ch
0x41a998    add eax, 0xffffffff894d0000
0x41a99d    retf

------> offset: 0x41a998
0x41a998    add eax, 0xffffffff894d0000
0x41a99d    retf

------> offset: 0x41ab18
0x41ab18    add al, 0x0
0x41ab1a    add [rbp-0x77], cl
0x41ab1d    retf

------> offset: 0x41ac96
0x41ac96    test cl, ch
0x41ac98    add al, [rax]
0x41ac9a    add [rbp-0x77], cl
0x41ac9d    retf

------> offset: 0x41ac98
0x41ac98    add al, [rax]
0x41ac9a    add [rbp-0x77], cl
0x41ac9d    retf

------> offset: 0x41ae17
0x41ae17    imul eax, [rcx], 0xffffffff894d0000
0x41ae1d    retf

------> offset: 0x41ae18
0x41ae18    add [rax], eax
0x41ae1a    add [rbp-0x77], cl
0x41ae1d    retf

------> offset: 0x41b007
0x41b007    jl 0x41b02d
0x41b009    or [rax+0x39], cl
0x41b00c    ret

------> offset: 0x41b009
0x41b009    or [rax+0x39], cl
0x41b00c    ret

------> offset: 0x41b02b
0x41b02b    adc [rax+0x39], ecx
0x41b02e    ret

------> offset: 0x41b2de
0x41b2de    test [rcx+rax-0x7cb80000], dl
0x41b2e5    ret 0xe901

------> offset: 0x41b2df
0x41b2df    xchg esp, eax
0x41b2e0    add [rax], eax
0x41b2e2    add [rax-0x7d], cl
0x41b2e5    ret 0xe901

------> offset: 0x41b2e0
0x41b2e0    add [rax], eax
0x41b2e2    add [rax-0x7d], cl
0x41b2e5    ret 0xe901

------> offset: 0x41b2e2
0x41b2e2    add [rax-0x7d], cl
0x41b2e5    ret 0xe901

------> offset: 0x41b488
0x41b488    adc cl, ch
0x41b48a    ret 0xfffd

------> offset: 0x41b4e8
0x41b4e8    add [rax], edi
0x41b4ea    retf 0xf41

------> offset: 0x41b4ea
0x41b4ea    retf 0xf41

------> offset: 0x41b621
0x41b621    add [rax], al
0x41b623    add [rcx-0x77], cl
0x41b626    ret 0x8d48

------> offset: 0x41b80d
0x41b80d    push rcx
0x41b80e    add [rax], eax
0x41b810    add [rax-0x7d], cl
0x41b813    ret 0xe901

------> offset: 0x41b825
0x41b825    add [rax], r8d
0x41b828    add [rax-0x7d], cl
0x41b82b    ret 0xe901

------> offset: 0x41b9fd
0x41b9fd    lahf
0x41b9fe    add [rax], al
0x41ba00    add [rax-0x77], cl
0x41ba03    ret 0xc031

------> offset: 0x41b9fe
0x41b9fe    add [rax], al
0x41ba00    add [rax-0x77], cl
0x41ba03    ret 0xc031

------> offset: 0x41ba00
0x41ba00    add [rax-0x77], cl
0x41ba03    ret 0xc031

------> offset: 0x41ba7c
0x41ba7c    mov ah, 0x41
0x41ba7e    add [rax+0xf], cl
0x41ba81    ret 0x8348

------> offset: 0x41ba7d
0x41ba7d    add [r8+0xf], cl
0x41ba81    ret 0x8348

------> offset: 0x41ba7e
0x41ba7e    add [rax+0xf], cl
0x41ba81    ret 0x8348

------> offset: 0x41ba7f
0x41ba7f    cmovz rax, rdx
0x41ba83    add rsp, 0x8
0x41ba87    ret

------> offset: 0x41ba80
0x41ba80    cmovz eax, edx
0x41ba83    add rsp, 0x8
0x41ba87    ret

------> offset: 0x41baed
0x41baed    cmovs eax, [rbx+0x148f0e7]
0x41baf4    retf 0x8348

------> offset: 0x41bb33
0x41bb33    add al, [rax]
0x41bb35    add [rax+0x1], cl
0x41bb38    clc
0x41bb39    add rax, rcx
0x41bb3c    ret

------> offset: 0x41bb34
0x41bb34    add [rax], al
0x41bb36    add rax, rdi
0x41bb39    add rax, rcx
0x41bb3c    ret

------> offset: 0x41bb35
0x41bb35    add [rax+0x1], cl
0x41bb38    clc
0x41bb39    add rax, rcx
0x41bb3c    ret

------> offset: 0x41bb36
0x41bb36    add rax, rdi
0x41bb39    add rax, rcx
0x41bb3c    ret

------> offset: 0x41bb37
0x41bb37    add eax, edi
0x41bb39    add rax, rcx
0x41bb3c    ret

------> offset: 0x41bb38
0x41bb38    clc
0x41bb39    add rax, rcx
0x41bb3c    ret

------> offset: 0x41bb39
0x41bb39    add rax, rcx
0x41bb3c    ret

------> offset: 0x41bb3a
0x41bb3a    add eax, ecx
0x41bb3c    ret

------> offset: 0x41bb3b
0x41bb3b    enter 0xfc3, 0x1f
0x41bb3f    add [rax+0x1], cl
0x41bb42    retf 0x8348

------> offset: 0x41bb3f
0x41bb3f    add [rax+0x1], cl
0x41bb42    retf 0x8348

------> offset: 0x41bb7c
0x41bb7c    shl dword [rsi+0xf], 0x1
0x41bb7f    xlat byte [rbx+al]
0x41bb80    ret 0xc085

------> offset: 0x41bb7f
0x41bb7f    xlat byte [rbx+al]
0x41bb80    ret 0xc085

------> offset: 0x41bb80
0x41bb80    ret 0xc085

------> offset: 0x41bb91
0x41bb91    fldenv [rsi+0xf]
0x41bb94    xlat byte [rbx+al]
0x41bb95    ret

------> offset: 0x41bc2e
0x41bc2e    retf 0x4890

------> offset: 0x41bc82
0x41bc82    add [rax], al
0x41bc84    add [rsi+0xf], ah
0x41bc87    xlat byte [rbx+al]
0x41bc88    ret 0xc085

------> offset: 0x41bc84
0x41bc84    add [rsi+0xf], ah
0x41bc87    xlat byte [rbx+al]
0x41bc88    ret 0xc085

------> offset: 0x41bc99
0x41bc99    fldenv [rsi+0xf]
0x41bc9c    jz 0x41bced
0x41bc9e    xor [rsi+0xf], ah
0x41bca1    xlat byte [rbx+al]
0x41bca2    ret

------> offset: 0x41bc9c
0x41bc9c    jz 0x41bced
0x41bc9e    xor [rsi+0xf], ah
0x41bca1    xlat byte [rbx+al]
0x41bca2    ret

------> offset: 0x41bc9d
0x41bc9d    xor [r14+0xf], r12b
0x41bca1    xlat byte [rbx+al]
0x41bca2    ret

------> offset: 0x41bc9e
0x41bc9e    xor [rsi+0xf], ah
0x41bca1    xlat byte [rbx+al]
0x41bca2    ret

------> offset: 0x41bcaf
0x41bcaf    bsf eax, eax
0x41bcb2    lea rax, [rdi+rax+0x30]
0x41bcb7    ret

------> offset: 0x41bcb2
0x41bcb2    lea rax, [rdi+rax+0x30]
0x41bcb7    ret

------> offset: 0x41bcb3
0x41bcb3    lea eax, [rdi+rax+0x30]
0x41bcb7    ret

------> offset: 0x41bcbb
0x41bcbb    add [rax], al
0x41bcbd    add [rax], al
0x41bcbf    add [rax-0x7d], cl
0x41bcc2    ret 0x7e20

------> offset: 0x41bcbd
0x41bcbd    add [rax], al
0x41bcbf    add [rax-0x7d], cl
0x41bcc2    ret 0x7e20

------> offset: 0x41bcbf
0x41bcbf    add [rax-0x7d], cl
0x41bcc2    ret 0x7e20

------> offset: 0x41bcc2
0x41bcc2    ret 0x7e20

------> offset: 0x41bd19
0x41bd19    jnz 0x41bdd0
0x41bd1f    xor rax, rax
0x41bd22    ret

------> offset: 0x41bd1a
0x41bd1a    test [rcx+0x48000000], esi
0x41bd20    xor eax, eax
0x41bd22    ret

------> offset: 0x41bd1b
0x41bd1b    mov cl, 0x0
0x41bd1d    add [rax], al
0x41bd1f    xor rax, rax
0x41bd22    ret

------> offset: 0x41bd1d
0x41bd1d    add [rax], al
0x41bd1f    xor rax, rax
0x41bd22    ret

------> offset: 0x41bd1f
0x41bd1f    xor rax, rax
0x41bd22    ret

------> offset: 0x41bd2b
0x41bd2b    add [rax], al
0x41bd2d    add [rax], al
0x41bd2f    add [rax-0x7d], cl
0x41bd32    ret 0x6620

------> offset: 0x41bd2d
0x41bd2d    add [rax], al
0x41bd2f    add [rax-0x7d], cl
0x41bd32    ret 0x6620

------> offset: 0x41bd2f
0x41bd2f    add [rax-0x7d], cl
0x41bd32    ret 0x6620

------> offset: 0x41bd32
0x41bd32    ret 0x6620

------> offset: 0x41bd57
0x41bd57    test eax, eax
0x41bd59    jnz 0x41bdb0
0x41bd5b    xor rax, rax
0x41bd5e    ret

------> offset: 0x41bd58
0x41bd58    sal byte [rbp+0x55], 0x48
0x41bd5c    xor eax, eax
0x41bd5e    ret

------> offset: 0x41bd59
0x41bd59    jnz 0x41bdb0
0x41bd5b    xor rax, rax
0x41bd5e    ret

------> offset: 0x41bd5a
0x41bd5a    push rbp
0x41bd5b    xor rax, rax
0x41bd5e    ret

------> offset: 0x41bd5f
0x41bd5f    nop
0x41bd60    bsf eax, eax
0x41bd63    lea rax, [rax+rdi-0x10]
0x41bd68    ret

------> offset: 0x41bd60
0x41bd60    bsf eax, eax
0x41bd63    lea rax, [rax+rdi-0x10]
0x41bd68    ret

------> offset: 0x41bd61
0x41bd61    mov esp, 0x448d48c0
0x41bd66    cmp al, dh
0x41bd68    ret

------> offset: 0x41bd62
0x41bd62    ror byte [rax-0x73], 0x44
0x41bd66    cmp al, dh
0x41bd68    ret

------> offset: 0x41bd63
0x41bd63    lea rax, [rax+rdi-0x10]
0x41bd68    ret

------> offset: 0x41bd64
0x41bd64    lea eax, [rax+rdi-0x10]
0x41bd68    ret

------> offset: 0x41bd65
0x41bd65    cmp al, r14b
0x41bd68    ret

------> offset: 0x41bd66
0x41bd66    cmp al, dh
0x41bd68    ret

------> offset: 0x41bd6d
0x41bd6d    add [rax], al
0x41bd6f    add [rdi], cl
0x41bd71    mov esp, 0xfffffffff80148c0
0x41bd76    ret

------> offset: 0x41bd6e
0x41bd6e    add [rax], al
0x41bd70    bsf eax, eax
0x41bd73    add rax, rdi
0x41bd76    ret

------> offset: 0x41bd6f
0x41bd6f    add [rdi], cl
0x41bd71    mov esp, 0xfffffffff80148c0
0x41bd76    ret

------> offset: 0x41bd70
0x41bd70    bsf eax, eax
0x41bd73    add rax, rdi
0x41bd76    ret

------> offset: 0x41bd71
0x41bd71    mov esp, 0xfffffffff80148c0
0x41bd76    ret

------> offset: 0x41bd72
0x41bd72    ror byte [rax+0x1], 0xf8
0x41bd76    ret

------> offset: 0x41bd73
0x41bd73    add rax, rdi
0x41bd76    ret

------> offset: 0x41bd74
0x41bd74    add eax, edi
0x41bd76    ret

------> offset: 0x41bd7f
0x41bd7f    add [rdi], cl
0x41bd81    mov esp, 0x448d48c0
0x41bd86    cmp [rax], dl
0x41bd88    ret

------> offset: 0x41bd80
0x41bd80    bsf eax, eax
0x41bd83    lea rax, [rax+rdi+0x10]
0x41bd88    ret

------> offset: 0x41bd81
0x41bd81    mov esp, 0x448d48c0
0x41bd86    cmp [rax], dl
0x41bd88    ret

------> offset: 0x41bd82
0x41bd82    ror byte [rax-0x73], 0x44
0x41bd86    cmp [rax], dl
0x41bd88    ret

------> offset: 0x41bd83
0x41bd83    lea rax, [rax+rdi+0x10]
0x41bd88    ret

------> offset: 0x41bd84
0x41bd84    lea eax, [rax+rdi+0x10]
0x41bd88    ret

------> offset: 0x41bd85
0x41bd85    cmp [rax], r10b
0x41bd88    ret

------> offset: 0x41bd86
0x41bd86    cmp [rax], dl
0x41bd88    ret

------> offset: 0x41bd8f
0x41bd8f    add [rdi], cl
0x41bd91    mov esp, 0x448d48c0
0x41bd96    cmp [rax], ah
0x41bd98    ret

------> offset: 0x41bd90
0x41bd90    bsf eax, eax
0x41bd93    lea rax, [rax+rdi+0x20]
0x41bd98    ret

------> offset: 0x41bd91
0x41bd91    mov esp, 0x448d48c0
0x41bd96    cmp [rax], ah
0x41bd98    ret

------> offset: 0x41bd92
0x41bd92    ror byte [rax-0x73], 0x44
0x41bd96    cmp [rax], ah
0x41bd98    ret

------> offset: 0x41bd93
0x41bd93    lea rax, [rax+rdi+0x20]
0x41bd98    ret

------> offset: 0x41bd94
0x41bd94    lea eax, [rax+rdi+0x20]
0x41bd98    ret

------> offset: 0x41bd95
0x41bd95    cmp [rax], r12b
0x41bd98    ret

------> offset: 0x41bd96
0x41bd96    cmp [rax], ah
0x41bd98    ret

------> offset: 0x41bda2
0x41bda2    ror byte [rax+0x29], 0xc2
0x41bda6    jbe 0x41bde0
0x41bda8    add rax, rdi
0x41bdab    ret

------> offset: 0x41bda3
0x41bda3    sub rdx, rax
0x41bda6    jbe 0x41bde0
0x41bda8    add rax, rdi
0x41bdab    ret

------> offset: 0x41bda4
0x41bda4    sub edx, eax
0x41bda6    jbe 0x41bde0
0x41bda8    add rax, rdi
0x41bdab    ret

------> offset: 0x41bda5
0x41bda5    ret 0x3876

------> offset: 0x41bda6
0x41bda6    jbe 0x41bde0
0x41bda8    add rax, rdi
0x41bdab    ret

------> offset: 0x41bda7
0x41bda7    cmp [rax+0x1], cl
0x41bdaa    clc
0x41bdab    ret

------> offset: 0x41bdb4
0x41bdb4    sub edx, eax
0x41bdb6    jbe 0x41bde0
0x41bdb8    lea rax, [rdi+rax+0x10]
0x41bdbd    ret

------> offset: 0x41bdb5
0x41bdb5    ret 0x2876

------> offset: 0x41bdb6
0x41bdb6    jbe 0x41bde0
0x41bdb8    lea rax, [rdi+rax+0x10]
0x41bdbd    ret

------> offset: 0x41bdb8
0x41bdb8    lea rax, [rdi+rax+0x10]
0x41bdbd    ret

------> offset: 0x41bdb9
0x41bdb9    lea eax, [rdi+rax+0x10]
0x41bdbd    ret

------> offset: 0x41bdc4
0x41bdc4    sub edx, eax
0x41bdc6    jbe 0x41bde0
0x41bdc8    lea rax, [rdi+rax+0x20]
0x41bdcd    ret

------> offset: 0x41bdc5
0x41bdc5    ret 0x1876

------> offset: 0x41bdc6
0x41bdc6    jbe 0x41bde0
0x41bdc8    lea rax, [rdi+rax+0x20]
0x41bdcd    ret

------> offset: 0x41bdc8
0x41bdc8    lea rax, [rdi+rax+0x20]
0x41bdcd    ret

------> offset: 0x41bdc9
0x41bdc9    lea eax, [rdi+rax+0x20]
0x41bdcd    ret

------> offset: 0x41bdd4
0x41bdd4    sub edx, eax
0x41bdd6    jbe 0x41bde0
0x41bdd8    lea rax, [rdi+rax+0x30]
0x41bddd    ret

------> offset: 0x41bdd5
0x41bdd5    ret 0x876

------> offset: 0x41bdd6
0x41bdd6    jbe 0x41bde0
0x41bdd8    lea rax, [rdi+rax+0x30]
0x41bddd    ret

------> offset: 0x41bddc
0x41bddc    xor bl, al
0x41bdde    nop
0x41bde0    xor rax, rax
0x41bde3    ret

------> offset: 0x41bdde
0x41bdde    nop
0x41bde0    xor rax, rax
0x41bde3    ret

------> offset: 0x41be08
0x41be08    jnz 0x41be12
0x41be0a    lea rax, [rip+0x1f]
0x41be11    ret

------> offset: 0x41be09
0x41be09    or [rax-0x73], cl
0x41be0c    add eax, 0x1f
0x41be11    ret

------> offset: 0x41be0a
0x41be0a    lea rax, [rip+0x1f]
0x41be11    ret

------> offset: 0x41be0b
0x41be0b    lea eax, [rip+0x1f]
0x41be11    ret

------> offset: 0x41be0c
0x41be0c    add eax, 0x1f
0x41be11    ret

------> offset: 0x41be1c
0x41be1c    jz 0x41be26
0x41be1e    lea rax, [rip+0x852b]
0x41be25    ret

------> offset: 0x41be1d
0x41be1d    or [rax-0x73], cl
0x41be20    add eax, 0x852b
0x41be25    ret

------> offset: 0x41be1e
0x41be1e    lea rax, [rip+0x852b]
0x41be25    ret

------> offset: 0x41be1f
0x41be1f    lea eax, [rip+0x852b]
0x41be25    ret

------> offset: 0x41be20
0x41be20    add eax, 0x852b
0x41be25    ret

------> offset: 0x41be24
0x41be24    add bl, al
0x41be26    lea rax, [rip+0x15313]
0x41be2d    ret

------> offset: 0x41be26
0x41be26    lea rax, [rip+0x15313]
0x41be2d    ret

------> offset: 0x41be27
0x41be27    lea eax, [rip+0x15313]
0x41be2d    ret

------> offset: 0x41be28
0x41be28    add eax, 0x15313
0x41be2d    ret

------> offset: 0x41be2a
0x41be2a    push rbx
0x41be2b    add [rax], eax
0x41be2d    ret

------> offset: 0x41be50
0x41be50    add [rax], al
0x41be52    add [rcx-0x9], cl
0x41be55    ret 0x1

------> offset: 0x41be52
0x41be52    add [rcx-0x9], cl
0x41be55    ret 0x1

------> offset: 0x41be76
0x41be76    add [rax], al
0x41be78    add [rcx-0x9], cl
0x41be7b    ret 0x2

------> offset: 0x41be78
0x41be78    add [rcx-0x9], cl
0x41be7b    ret 0x2

------> offset: 0x41be99
0x41be99    ret 0x4

------> offset: 0x41beb5
0x41beb5    ret 0x8

------> offset: 0x41beff
0x41beff    add [rdi], cl
0x41bf01    mov dh, 0x7
0x41bf03    movzx edx, byte [rsi]
0x41bf06    sub eax, edx
0x41bf08    ret

------> offset: 0x41bf00
0x41bf00    movzx eax, byte [rdi]
0x41bf03    movzx edx, byte [rsi]
0x41bf06    sub eax, edx
0x41bf08    ret

------> offset: 0x41bf01
0x41bf01    mov dh, 0x7
0x41bf03    movzx edx, byte [rsi]
0x41bf06    sub eax, edx
0x41bf08    ret

------> offset: 0x41bf03
0x41bf03    movzx edx, byte [rsi]
0x41bf06    sub eax, edx
0x41bf08    ret

------> offset: 0x41bf04
0x41bf04    mov dh, 0x16
0x41bf06    sub eax, edx
0x41bf08    ret

------> offset: 0x41bf0d
0x41bf0d    and cl, [rcx-0x77]
0x41bf10    ret

------> offset: 0x41bf25
0x41bf25    ror byte [rax-0x2d], 0xfa
0x41bf29    movzx edx, dl
0x41bf2c    sub eax, edx
0x41bf2e    ret

------> offset: 0x41bf26
0x41bf26    sar rdx, cl
0x41bf29    movzx edx, dl
0x41bf2c    sub eax, edx
0x41bf2e    ret

------> offset: 0x41bf27
0x41bf27    sar edx, cl
0x41bf29    movzx edx, dl
0x41bf2c    sub eax, edx
0x41bf2e    ret

------> offset: 0x41bf28
0x41bf28    cli
0x41bf29    movzx edx, dl
0x41bf2c    sub eax, edx
0x41bf2e    ret

------> offset: 0x41bf29
0x41bf29    movzx edx, dl
0x41bf2c    sub eax, edx
0x41bf2e    ret

------> offset: 0x41bf2a
0x41bf2a    mov dh, 0xd2
0x41bf2c    sub eax, edx
0x41bf2e    ret

------> offset: 0x41bf2b
0x41bf2b    shr [rcx], cl
0x41bf2d    rol bl, 0x1
0x41bf2f    nop
0x41bf30    xor eax, eax
0x41bf32    ret

------> offset: 0x41bf2d
0x41bf2d    rol bl, 0x1
0x41bf2f    nop
0x41bf30    xor eax, eax
0x41bf32    ret

------> offset: 0x41bf2f
0x41bf2f    nop
0x41bf30    xor eax, eax
0x41bf32    ret

------> offset: 0x41c0c2
0x41c0c2    retf 0xb60f

------> offset: 0x41c25b
0x41c25b    fld dword [rbx+0x294807e1]
0x41c261    retf 0x8548

------> offset: 0x41c278
0x41c278    add [rax+0x39], ecx
0x41c27b    iret

------> offset: 0x41c2d6
0x41c2d6    add [rax+0x3948ff57], ecx
0x41c2dc    iret

------> offset: 0x41c2d8
0x41c2d8    push rdi
0x41c2d9    dec dword [rax+0x39]
0x41c2dc    iret

------> offset: 0x41c2d9
0x41c2d9    dec dword [rax+0x39]
0x41c2dc    iret

------> offset: 0x41c2de
0x41c2de    out dx, eax
0x41c2df    add rsp, 0x10
0x41c2e3    pop rbx
0x41c2e4    pop rbp
0x41c2e5    pop r12
0x41c2e7    ret

------> offset: 0x41c340
0x41c340    add esi, esi
0x41c342    ret

------> offset: 0x41c389
0x41c389    ret 0xc88

------> offset: 0x41c38e
0x41c38e    int1
0x41c38f    add rsp, 0x10
0x41c393    pop rbx
0x41c394    pop rbp
0x41c395    pop r12
0x41c397    ret

------> offset: 0x41c3d7
0x41c3d7    ret 0x41

------> offset: 0x41c3ea
0x41c3ea    pop rcx
0x41c3eb    add [rax+0xf], cl
0x41c3ef    ret 0x8348

------> offset: 0x41c472
0x41c472    movq [rdi+rdx-0x10], mm0
0x41c478    ja 0x41c480
0x41c47a    ret

------> offset: 0x41c477
0x41c477    ja 0x41c480
0x41c47a    ret

------> offset: 0x41c484
0x41c484    adc r11b, r14b
0x41c487    movq [rdi+rdx-0x20], mm0
0x41c48d    ret

------> offset: 0x41c485
0x41c485    adc bl, dh
0x41c487    movq [rdi+rdx-0x20], mm0
0x41c48d    ret

------> offset: 0x41c486
0x41c486    movdqu [rdi+rdx-0x20], xmm8
0x41c48d    ret

------> offset: 0x41c487
0x41c487    movq [rdi+rdx-0x20], mm0
0x41c48d    ret

------> offset: 0x41c4f6
0x41c4f6    xor [rax-0x7d], cl
0x41c4f9    rol dword [rax+0x48], 0x39
0x41c4fd    retf 0xe075

------> offset: 0x41c4f8
0x41c4f8    add ecx, 0x40
0x41c4fb    cmp rdx, rcx
0x41c4fe    jnz 0x41c4e0
0x41c500    ret

------> offset: 0x41c4f9
0x41c4f9    rol dword [rax+0x48], 0x39
0x41c4fd    retf 0xe075

------> offset: 0x41c4fa
0x41c4fa    cmp rdx, rcx
0x41c4fe    jnz 0x41c4e0
0x41c500    ret

------> offset: 0x41c4fc
0x41c4fc    cmp edx, ecx
0x41c4fe    jnz 0x41c4e0
0x41c500    ret

------> offset: 0x41c4fd
0x41c4fd    retf 0xe075

------> offset: 0x41c4fe
0x41c4fe    jnz 0x41c4e0
0x41c500    ret

------> offset: 0x41c4ff
0x41c4ff    loopnz 0x41c4f4
0x41c501    ret

------> offset: 0x41c508
0x41c508    ret 0x7518

------> offset: 0x41c50b
0x41c50b    and dh, dh
0x41c50d    ret 0x7504

------> offset: 0x41c50d
0x41c50d    ret 0x7504

------> offset: 0x41c512
0x41c512    ret 0x7401

------> offset: 0x41c520
0x41c520    jmp qword [rsi-0x77]
0x41c523    adc sil, r15b
0x41c526    ret

------> offset: 0x41c521
0x41c521    mov [rax+rdx-0x2], cx
0x41c526    ret

------> offset: 0x41c522
0x41c522    mov [rax+rdx-0x2], ecx
0x41c526    ret

------> offset: 0x41c523
0x41c523    adc sil, r15b
0x41c526    ret

------> offset: 0x41c524
0x41c524    adc dh, bh
0x41c526    ret

------> offset: 0x41c525
0x41c525    inc bl
0x41c527    mov [rdi], ecx
0x41c529    mov [rdi+rdx-0x4], ecx
0x41c52d    ret

------> offset: 0x41c527
0x41c527    mov [rdi], ecx
0x41c529    mov [rdi+rdx-0x4], ecx
0x41c52d    ret

------> offset: 0x41c529
0x41c529    mov [rdi+rdx-0x4], ecx
0x41c52d    ret

------> offset: 0x41c52c
0x41c52c    cld
0x41c52d    ret

------> offset: 0x41c52e
0x41c52e    mov [rdi], rcx
0x41c531    mov [rdi+rdx-0x8], rcx
0x41c536    ret

------> offset: 0x41c52f
0x41c52f    mov [rdi], ecx
0x41c531    mov [rdi+rdx-0x8], rcx
0x41c536    ret

------> offset: 0x41c531
0x41c531    mov [rdi+rdx-0x8], rcx
0x41c536    ret

------> offset: 0x41c532
0x41c532    mov [rdi+rdx-0x8], ecx
0x41c536    ret

------> offset: 0x41c545
0x41c545    jp 0x41c53d
0x41c547    ret 0x7401

------> offset: 0x41c568
0x41c568    add dh, dh
0x41c56a    ret 0x7404

------> offset: 0x41c579
0x41c579    add al, 0xf6
0x41c57b    ret 0x7408

------> offset: 0x41c57b
0x41c57b    ret 0x7408

------> offset: 0x41c5b5
0x41c5b5    lea rdi, [rdi+0x10]
0x41c5b9    jnz 0x41c5a0
0x41c5bb    mov rax, rdi
0x41c5be    ret

------> offset: 0x41c5b6
0x41c5b6    lea edi, [rdi+0x10]
0x41c5b9    jnz 0x41c5a0
0x41c5bb    mov rax, rdi
0x41c5be    ret

------> offset: 0x41c5b7
0x41c5b7    jg 0x41c5c9
0x41c5b9    jnz 0x41c5a0
0x41c5bb    mov rax, rdi
0x41c5be    ret

------> offset: 0x41c5b8
0x41c5b8    adc [rbp-0x1b], dh
0x41c5bb    mov rax, rdi
0x41c5be    ret

------> offset: 0x41c5b9
0x41c5b9    jnz 0x41c5a0
0x41c5bb    mov rax, rdi
0x41c5be    ret

------> offset: 0x41c5ba
0x41c5ba    in eax, 0x48
0x41c5bc    mov eax, edi
0x41c5be    ret

------> offset: 0x41c663
0x41c663    jnz 0x41c546
0x41c669    mov rax, rdi
0x41c66c    ret

------> offset: 0x41c668
0x41c668    dec dword [rax-0x77]
0x41c66b    clc
0x41c66c    ret

------> offset: 0x41c692
0x41c692    fimul dword [rax-0x9]
0x41c695    ret 0xfff8

------> offset: 0x41c6a0
0x41c6a0    test [rcx+0x48fffffe], esp
0x41c6a6    mov eax, edi
0x41c6a8    ret

------> offset: 0x41c6b6
0x41c6b6    add [rcx+0x39], cl
0x41c6b9    ror byte [rdi+rcx+0x47], 0x1
0x41c6bd    ret 0x894c

------> offset: 0x41c6b9
0x41c6b9    ror byte [rdi+rcx+0x47], 0x1
0x41c6bd    ret 0x894c

------> offset: 0x41c88a
0x41c88a    test [rdi+0x48fffffc], esi
0x41c890    mov eax, edi
0x41c892    ret

------> offset: 0x41c8ea
0x41c8ea    outs dx, byte [rsi]
0x41c8eb    xor [rbx+rcx*4+0x76], cl
0x41c8ef    cmp [rax+0xf], cl
0x41c8f2    ret

------> offset: 0x41c8eb
0x41c8eb    xor [rbx+rcx*4+0x76], cl
0x41c8ef    cmp [rax+0xf], cl
0x41c8f2    ret

------> offset: 0x41c8ef
0x41c8ef    cmp [rax+0xf], cl
0x41c8f2    ret

------> offset: 0x41c989
0x41c989    test [rax+0x48fffffb], edi
0x41c98f    mov eax, edi
0x41c991    ret

------> offset: 0x41c98a
0x41c98a    mov eax, 0x48fffffb
0x41c98f    mov eax, edi
0x41c991    ret

------> offset: 0x41cab2
0x41cab2    shr rax, 0x10
0x41cab6    jmp 0x41caa0
0x41cab8    mov rax, rdx
0x41cabb    ret

------> offset: 0x41cab3
0x41cab3    shr eax, 0x10
0x41cab6    jmp 0x41caa0
0x41cab8    mov rax, rdx
0x41cabb    ret

------> offset: 0x41cab4
0x41cab4    call 0x492ab5c9
0x41cab9    mov eax, edx
0x41cabb    ret

------> offset: 0x41cab6
0x41cab6    jmp 0x41caa0
0x41cab8    mov rax, rdx
0x41cabb    ret

------> offset: 0x41cafe
0x41cafe    jnz 0x41cb07
0x41cb00    lea rax, [rip+0x79]
0x41cb07    ret

------> offset: 0x41cb00
0x41cb00    lea rax, [rip+0x79]
0x41cb07    ret

------> offset: 0x41cb01
0x41cb01    lea eax, [rip+0x79]
0x41cb07    ret

------> offset: 0x41cb02
0x41cb02    add eax, 0x79
0x41cb07    ret

------> offset: 0x41cb03
0x41cb03    jns 0x41cb05
0x41cb05    add [rax], al
0x41cb07    ret

------> offset: 0x41cb61
0x41cb61    jnz 0x41cb6a
0x41cb63    lea rax, [rip+0x6]
0x41cb6a    ret

------> offset: 0x41cb63
0x41cb63    lea rax, [rip+0x6]
0x41cb6a    ret

------> offset: 0x41cb64
0x41cb64    lea eax, [rip+0x6]
0x41cb6a    ret

------> offset: 0x41cb65
0x41cb65    add eax, 0x6
0x41cb6a    ret

------> offset: 0x41cf3b
0x41cf3b    adc [rsi+0xf], ah
0x41cf3e    outs dx, dword [rsi]
0x41cf3f    fmul qword [rcx-0x7d]
0x41cf42    ret 0xf10

------> offset: 0x41cf3e
0x41cf3e    outs dx, dword [rsi]
0x41cf3f    fmul qword [rcx-0x7d]
0x41cf42    ret 0xf10

------> offset: 0x41cf3f
0x41cf3f    fmul qword [rcx-0x7d]
0x41cf42    ret 0xf10

------> offset: 0x41ed83
0x41ed83    mov ecx, [rdx+rcx*4]
0x41ed86    mov eax, [rdx+rax*4]
0x41ed89    sub eax, ecx
0x41ed8b    ret

------> offset: 0x41ed84
0x41ed84    or al, 0x8a
0x41ed86    mov eax, [rdx+rax*4]
0x41ed89    sub eax, ecx
0x41ed8b    ret

------> offset: 0x41ed85
0x41ed85    mov cl, [rbx-0x37d67dfc]
0x41ed8b    ret

------> offset: 0x41ed86
0x41ed86    mov eax, [rdx+rax*4]
0x41ed89    sub eax, ecx
0x41ed8b    ret

------> offset: 0x41ed87
0x41ed87    add al, 0x82
0x41ed89    sub eax, ecx
0x41ed8b    ret

------> offset: 0x41ee19
0x41ee19    outs dx, dword [rsi]
0x41ee1a    retf 0x4466

------> offset: 0x41ee1a
0x41ee1a    retf 0x4466

------> offset: 0x41ef44
0x41ef44    add [rax], al
0x41ef46    add [rax-0x77], cl
0x41ef49    retf 0xf66

------> offset: 0x41ef46
0x41ef46    add [rax-0x77], cl
0x41ef49    retf 0xf66

------> offset: 0x41f029
0x41f029    add [rbx+0x148b8104], cl
0x41f02f    xchg ecx, eax
0x41f030    sub eax, edx
0x41f032    ret

------> offset: 0x41f02a
0x41f02a    mov eax, [rcx+rax*4]
0x41f02d    mov edx, [rcx+rdx*4]
0x41f030    sub eax, edx
0x41f032    ret

------> offset: 0x41f02b
0x41f02b    add al, 0x81
0x41f02d    mov edx, [rcx+rdx*4]
0x41f030    sub eax, edx
0x41f032    ret

------> offset: 0x41f02d
0x41f02d    mov edx, [rcx+rdx*4]
0x41f030    sub eax, edx
0x41f032    ret

------> offset: 0x41f02e
0x41f02e    adc al, 0x91
0x41f030    sub eax, edx
0x41f032    ret

------> offset: 0x41f02f
0x41f02f    xchg ecx, eax
0x41f030    sub eax, edx
0x41f032    ret

------> offset: 0x41f0c2
0x41f0c2    adc [rax], al
0x41f0c4    add [rax-0x77], cl
0x41f0c7    retf 0x1f0f

------> offset: 0x41f0c4
0x41f0c4    add [rax-0x77], cl
0x41f0c7    retf 0x1f0f

------> offset: 0x41f0c7
0x41f0c7    retf 0x1f0f

------> offset: 0x41f1a3
0x41f1a3    add [rax-0x7d], cl
0x41f1a6    ret 0xe910

------> offset: 0x41f1a6
0x41f1a6    ret 0xe910

------> offset: 0x41f33f
0x41f33f    xchg [rbp+rdx-0x7cb80000], bl
0x41f346    ret 0xe910

------> offset: 0x41f340
0x41f340    pushf
0x41f341    adc eax, 0xffffffff83480000
0x41f346    ret 0xe910

------> offset: 0x41f341
0x41f341    adc eax, 0xffffffff83480000
0x41f346    ret 0xe910

------> offset: 0x41f46e
0x41f46e    outs dx, byte [rsi]
0x41f46f    adc al, 0x0
0x41f471    add [rax-0x7d], cl
0x41f474    ret 0x4910

------> offset: 0x41f46f
0x41f46f    adc al, 0x0
0x41f471    add [rax-0x7d], cl
0x41f474    ret 0x4910

------> offset: 0x41f615
0x41f615    xchg dh, al
0x41f617    adc al, [rax]
0x41f619    add [rax-0x7d], cl
0x41f61c    ret 0x4910

------> offset: 0x41f617
0x41f617    adc al, [rax]
0x41f619    add [rax-0x7d], cl
0x41f61c    ret 0x4910

------> offset: 0x41f67f
0x41f67f    xchg [rdx+rdx+0x0], bl
0x41f683    add [rax-0x7d], cl
0x41f686    ret 0xe910

------> offset: 0x41f680
0x41f680    pop rsp
0x41f681    adc al, [rax]
0x41f683    add [rax-0x7d], cl
0x41f686    ret 0xe910

------> offset: 0x41f681
0x41f681    adc al, [rax]
0x41f683    add [rax-0x7d], cl
0x41f686    ret 0xe910

------> offset: 0x41f7b5
0x41f7b5    xchg [rsi], ah
0x41f7b7    adc [rax], eax
0x41f7b9    add [rax-0x7d], cl
0x41f7bc    ret 0x4910

------> offset: 0x41f7b6
0x41f7b6    adc [rax], eax
0x41f7b9    add [rax-0x7d], cl
0x41f7bc    ret 0x4910

------> offset: 0x41f81f
0x41f81f    xchg [rax+rdx-0x7cb80000], bh
0x41f826    ret 0xe910

------> offset: 0x41f821
0x41f821    adc [rax], al
0x41f823    add [rax-0x7d], cl
0x41f826    ret 0xe910

------> offset: 0x41faf5
0x41faf5    xchg dh, ah
0x41faf7    or eax, 0xffffffff83480000
0x41fafc    ret 0x4910

------> offset: 0x41faf7
0x41faf7    or eax, 0xffffffff83480000
0x41fafc    ret 0x4910

------> offset: 0x41fb5f
0x41fb5f    xchg [rbp+rcx+0x0], bh
0x41fb63    add [rax-0x7d], cl
0x41fb66    ret 0xe910

------> offset: 0x41fb61
0x41fb61    or eax, 0xffffffff83480000
0x41fb66    ret 0xe910

------> offset: 0x41fc96
0x41fc96    or al, 0x0
0x41fc99    add [rax-0x7d], cl
0x41fc9c    ret 0x4910

------> offset: 0x41fcff
0x41fcff    xchg ah, bl
0x41fd01    or eax, [rax]
0x41fd03    add [rax-0x7d], cl
0x41fd06    ret 0xe910

------> offset: 0x41fd01
0x41fd01    or eax, [rax]
0x41fd03    add [rax-0x7d], cl
0x41fd06    ret 0xe910

------> offset: 0x41fe36
0x41fe36    cmpsb
0x41fe37    or al, [rax]
0x41fe39    add [rax-0x7d], cl
0x41fe3c    ret 0x4910

------> offset: 0x41fea1
0x41fea1    or al, [rax]
0x41fea3    add [rax-0x7d], cl
0x41fea6    ret 0xe910

------> offset: 0x41ffd5
0x41ffd5    xchg [rsi], al
0x41ffd7    or [rax], eax
0x41ffd9    add [rax-0x7d], cl
0x41ffdc    ret 0x4910

------> offset: 0x42003f
0x42003f    xchg [rax+rcx-0x7cb80000], bl
0x420046    ret 0xe910

------> offset: 0x420040
0x420040    pushf
0x420041    or [rax], al
0x420043    add [rax-0x7d], cl
0x420046    ret 0xe910

------> offset: 0x420041
0x420041    or [rax], al
0x420043    add [rax-0x7d], cl
0x420046    ret 0xe910

------> offset: 0x420315
0x420315    xchg dh, al
0x420317    add eax, 0xffffffff83480000
0x42031c    ret 0x4910

------> offset: 0x42037f
0x42037f    xchg [rbp+rax+0x0], bl
0x420383    add [rax-0x7d], cl
0x420386    ret 0xe910

------> offset: 0x420380
0x420380    pop rsp
0x420381    add eax, 0xffffffff83480000
0x420386    ret 0xe910

------> offset: 0x420381
0x420381    add eax, 0xffffffff83480000
0x420386    ret 0xe910

------> offset: 0x4204b5
0x4204b5    xchg [rsi], ah
0x4204b7    add al, 0x0
0x4204b9    add [rax-0x7d], cl
0x4204bc    ret 0x4910

------> offset: 0x42051f
0x42051f    xchg [rbx+rax-0x7cb80000], bh
0x420526    ret 0xe910

------> offset: 0x420521
0x420521    add eax, [rax]
0x420523    add [rax-0x7d], cl
0x420526    ret 0xe910

------> offset: 0x4206c1
0x4206c1    add al, [rax]
0x4206c3    add [rax-0x7d], cl
0x4206c6    ret 0xe910

------> offset: 0x4207f5
0x4207f5    xchg dh, ah
0x4207f7    add [rax], al
0x4207f9    add [rax-0x7d], cl
0x4207fc    ret 0x4910

------> offset: 0x4207f7
0x4207f7    add [rax], al
0x4207f9    add [rax-0x7d], cl
0x4207fc    ret 0x4910

------> offset: 0x42085f
0x42085f    xchg [rax+rax+0x0], bh
0x420863    add [rax-0x7d], cl
0x420866    ret 0xe910

------> offset: 0x420861
0x420861    add [rax], al
0x420863    add [rax-0x7d], cl
0x420866    ret 0xe910

------> offset: 0x4208ff
0x4208ff    mov edx, [rcx+rdx*4]
0x420902    mov eax, [rcx+rax*4]
0x420905    sub eax, edx
0x420907    ret

------> offset: 0x420900
0x420900    adc al, 0x91
0x420902    mov eax, [rcx+rax*4]
0x420905    sub eax, edx
0x420907    ret

------> offset: 0x420901
0x420901    xchg ecx, eax
0x420902    mov eax, [rcx+rax*4]
0x420905    sub eax, edx
0x420907    ret

------> offset: 0x420902
0x420902    mov eax, [rcx+rax*4]
0x420905    sub eax, edx
0x420907    ret

------> offset: 0x420903
0x420903    add al, 0x81
0x420905    sub eax, edx
0x420907    ret

------> offset: 0x4209ed
0x4209ed    retf 0xf1c5

------> offset: 0x420aba
0x420aba    add [rax], al
0x420abc    add [rax-0x77], cl
0x420abf    retf 0xf9c5

------> offset: 0x420abc
0x420abc    add [rax-0x77], cl
0x420abf    retf 0xf9c5

------> offset: 0x420abf
0x420abf    retf 0xf9c5

------> offset: 0x420ba3
0x420ba3    jmp 0x7a07dca0
0x420ba8    xlat byte [rbx+al]
0x420ba9    retf 0xead3

------> offset: 0x420ba4
0x420ba4    clc
0x420ba5    rol ch, 0x1
0x420ba7    jns 0x420b80
0x420ba9    retf 0xead3

------> offset: 0x420ba5
0x420ba5    rol ch, 0x1
0x420ba7    jns 0x420b80
0x420ba9    retf 0xead3

------> offset: 0x420ba7
0x420ba7    jns 0x420b80
0x420ba9    retf 0xead3

------> offset: 0x420bd8
0x420bd8    adc [rax], al
0x420bda    add [rax-0x77], cl
0x420bdd    retf 0x9066

------> offset: 0x420bda
0x420bda    add [rax-0x77], cl
0x420bdd    retf 0x9066

------> offset: 0x420bdd
0x420bdd    retf 0x9066

------> offset: 0x420c2c
0x420c2c    xchg [rdi], bl
0x420c2e    adc eax, [rax]
0x420c30    add [rax-0x7d], cl
0x420c33    ret 0x4910

------> offset: 0x420c2e
0x420c2e    adc eax, [rax]
0x420c30    add [rax-0x7d], cl
0x420c33    ret 0x4910

------> offset: 0x420c7d
0x420c7d    xchg dh, cl
0x420c7f    adc al, [rax]
0x420c81    add [rax-0x7d], cl
0x420c84    ret 0xe910

------> offset: 0x420cf3
0x420cf3    jmp 0x7a07ddf0
0x420cf8    xlat byte [rbx+al]
0x420cf9    retf 0xead3

------> offset: 0x420cf4
0x420cf4    clc
0x420cf5    rol ch, 0x1
0x420cf7    jns 0x420cd0
0x420cf9    retf 0xead3

------> offset: 0x420cf5
0x420cf5    rol ch, 0x1
0x420cf7    jns 0x420cd0
0x420cf9    retf 0xead3

------> offset: 0x420cf7
0x420cf7    jns 0x420cd0
0x420cf9    retf 0xead3

------> offset: 0x420d7c
0x420d7c    xchg bh, cl
0x420d7e    adc [rax], eax
0x420d80    add [rax-0x7d], cl
0x420d83    ret 0x4910

------> offset: 0x420dcf
0x420dcf    adc [rax], eax
0x420dd1    add [rax-0x7d], cl
0x420dd4    ret 0xe910

------> offset: 0x420e43
0x420e43    jmp 0x7a07df40
0x420e48    xlat byte [rbx+al]
0x420e49    retf 0xead3

------> offset: 0x420e44
0x420e44    clc
0x420e45    rol ch, 0x1
0x420e47    jns 0x420e20
0x420e49    retf 0xead3

------> offset: 0x420e45
0x420e45    rol ch, 0x1
0x420e47    jns 0x420e20
0x420e49    retf 0xead3

------> offset: 0x420e47
0x420e47    jns 0x420e20
0x420e49    retf 0xead3

------> offset: 0x420ecb
0x420ecb    adc dword [rax], 0xffffffff83480000
0x420ed1    ret 0x4910

------> offset: 0x420ecc
0x420ecc    adc [rax], al
0x420ece    add [rax-0x7d], cl
0x420ed1    ret 0x4910

------> offset: 0x420f1b
0x420f1b    xchg [rax], dh
0x420f1d    adc [rax], al
0x420f1f    add [rax-0x7d], cl
0x420f22    ret 0xe910

------> offset: 0x420f93
0x420f93    jmp 0x7a07e090
0x420f98    xlat byte [rbx+al]
0x420f99    retf 0xead3

------> offset: 0x420f94
0x420f94    clc
0x420f95    rol ch, 0x1
0x420f97    jns 0x420f70
0x420f99    retf 0xead3

------> offset: 0x420f95
0x420f95    rol ch, 0x1
0x420f97    jns 0x420f70
0x420f99    retf 0xead3

------> offset: 0x420f97
0x420f97    jns 0x420f70
0x420f99    retf 0xead3

------> offset: 0x4210e3
0x4210e3    jmp 0x7a07e1e0
0x4210e8    xlat byte [rbx+al]
0x4210e9    retf 0xead3

------> offset: 0x4210e4
0x4210e4    clc
0x4210e5    rol ch, 0x1
0x4210e7    jns 0x4210c0
0x4210e9    retf 0xead3

------> offset: 0x4210e5
0x4210e5    rol ch, 0x1
0x4210e7    jns 0x4210c0
0x4210e9    retf 0xead3

------> offset: 0x4210e7
0x4210e7    jns 0x4210c0
0x4210e9    retf 0xead3

------> offset: 0x42116c
0x42116c    xchg bh, bl
0x42116e    or eax, 0xffffffff83480000
0x421173    ret 0x4910

------> offset: 0x42116d
0x42116d    fisttp word [rip-0x7cb80000]
0x421173    ret 0x4910

------> offset: 0x421233
0x421233    jmp 0x7a07e330
0x421238    xlat byte [rbx+al]
0x421239    retf 0xead3

------> offset: 0x421234
0x421234    clc
0x421235    rol ch, 0x1
0x421237    jns 0x421210
0x421239    retf 0xead3

------> offset: 0x421235
0x421235    rol ch, 0x1
0x421237    jns 0x421210
0x421239    retf 0xead3

------> offset: 0x421237
0x421237    jns 0x421210
0x421239    retf 0xead3

------> offset: 0x42130d
0x42130d    xchg [rsi], bh
0x42130f    or al, 0x0
0x421311    add [rax-0x7d], cl
0x421314    ret 0xe910

------> offset: 0x42130e
0x42130e    or al, 0x0
0x421311    add [rax-0x7d], cl
0x421314    ret 0xe910

------> offset: 0x421383
0x421383    jmp 0x7a07e480
0x421388    xlat byte [rbx+al]
0x421389    retf 0xead3

------> offset: 0x421384
0x421384    clc
0x421385    rol ch, 0x1
0x421387    jns 0x421360
0x421389    retf 0xead3

------> offset: 0x421385
0x421385    rol ch, 0x1
0x421387    jns 0x421360
0x421389    retf 0xead3

------> offset: 0x421387
0x421387    jns 0x421360
0x421389    retf 0xead3

------> offset: 0x42140c
0x42140c    xchg [rdi], bh
0x42140e    or eax, [rax]
0x421410    add [rax-0x7d], cl
0x421413    ret 0x4910

------> offset: 0x42145d
0x42145d    xchg dh, ch
0x42145f    or al, [rax]
0x421461    add [rax-0x7d], cl
0x421464    ret 0xe910

------> offset: 0x42145e
0x42145e    out dx, al
0x42145f    or al, [rax]
0x421461    add [rax-0x7d], cl
0x421464    ret 0xe910

------> offset: 0x4214d3
0x4214d3    jmp 0x7a07e5d0
0x4214d8    xlat byte [rbx+al]
0x4214d9    retf 0xead3

------> offset: 0x4214d4
0x4214d4    clc
0x4214d5    rol ch, 0x1
0x4214d7    jns 0x4214b0
0x4214d9    retf 0xead3

------> offset: 0x4214d5
0x4214d5    rol ch, 0x1
0x4214d7    jns 0x4214b0
0x4214d9    retf 0xead3

------> offset: 0x4214d7
0x4214d7    jns 0x4214b0
0x4214d9    retf 0xead3

------> offset: 0x42155c
0x42155c    xchg bh, ch
0x42155e    or [rax], eax
0x421560    add [rax-0x7d], cl
0x421563    ret 0x4910

------> offset: 0x42155d
0x42155d    out dx, eax
0x42155e    or [rax], eax
0x421560    add [rax-0x7d], cl
0x421563    ret 0x4910

------> offset: 0x4215ae
0x4215ae    sahf
0x4215af    or [rax], eax
0x4215b1    add [rax-0x7d], cl
0x4215b4    ret 0xe910

------> offset: 0x4215af
0x4215af    or [rax], eax
0x4215b1    add [rax-0x7d], cl
0x4215b4    ret 0xe910

------> offset: 0x421623
0x421623    jmp 0x7a07e720
0x421628    xlat byte [rbx+al]
0x421629    retf 0xead3

------> offset: 0x421624
0x421624    clc
0x421625    rol ch, 0x1
0x421627    jns 0x421600
0x421629    retf 0xead3

------> offset: 0x421625
0x421625    rol ch, 0x1
0x421627    jns 0x421600
0x421629    retf 0xead3

------> offset: 0x421627
0x421627    jns 0x421600
0x421629    retf 0xead3

------> offset: 0x4216ad
0x4216ad    lahf
0x4216ae    or [rax], al
0x4216b0    add [rax-0x7d], cl
0x4216b3    ret 0x4910

------> offset: 0x4216fe
0x4216fe    or [rax], r8b
0x421701    add [rax-0x7d], cl
0x421704    ret 0xe910

------> offset: 0x421773
0x421773    jmp 0x7a07e870
0x421778    xlat byte [rbx+al]
0x421779    retf 0xead3

------> offset: 0x421774
0x421774    clc
0x421775    rol ch, 0x1
0x421777    jns 0x421750
0x421779    retf 0xead3

------> offset: 0x421775
0x421775    rol ch, 0x1
0x421777    jns 0x421750
0x421779    retf 0xead3

------> offset: 0x421777
0x421777    jns 0x421750
0x421779    retf 0xead3

------> offset: 0x4218c3
0x4218c3    jmp 0x7a07e9c0
0x4218c8    xlat byte [rbx+al]
0x4218c9    retf 0xead3

------> offset: 0x4218c4
0x4218c4    clc
0x4218c5    rol ch, 0x1
0x4218c7    jns 0x4218a0
0x4218c9    retf 0xead3

------> offset: 0x4218c5
0x4218c5    rol ch, 0x1
0x4218c7    jns 0x4218a0
0x4218c9    retf 0xead3

------> offset: 0x4218c7
0x4218c7    jns 0x4218a0
0x4218c9    retf 0xead3

------> offset: 0x42194c
0x42194c    xchg bh, bh
0x42194e    add eax, 0xffffffff83480000
0x421953    ret 0x4910

------> offset: 0x42194d
0x42194d    inc dword [rip-0x7cb80000]
0x421953    ret 0x4910

------> offset: 0x42199e
0x42199e    scasb
0x42199f    add eax, 0xffffffff83480000
0x4219a4    ret 0xe910

------> offset: 0x421a13
0x421a13    jmp 0x7a07eb10
0x421a18    xlat byte [rbx+al]
0x421a19    retf 0xead3

------> offset: 0x421a14
0x421a14    clc
0x421a15    rol ch, 0x1
0x421a17    jns 0x4219f0
0x421a19    retf 0xead3

------> offset: 0x421a15
0x421a15    rol ch, 0x1
0x421a17    jns 0x4219f0
0x421a19    retf 0xead3

------> offset: 0x421a17
0x421a17    jns 0x4219f0
0x421a19    retf 0xead3

------> offset: 0x421a9d
0x421a9d    scasd
0x421a9e    add al, 0x0
0x421aa0    add [rax-0x7d], cl
0x421aa3    ret 0x4910

------> offset: 0x421aee
0x421aee    pop rsi
0x421aef    add al, 0x0
0x421af1    add [rax-0x7d], cl
0x421af4    ret 0xe910

------> offset: 0x421aef
0x421aef    add al, 0x0
0x421af1    add [rax-0x7d], cl
0x421af4    ret 0xe910

------> offset: 0x421b63
0x421b63    jmp 0x7a07ec60
0x421b68    xlat byte [rbx+al]
0x421b69    retf 0xead3

------> offset: 0x421b64
0x421b64    clc
0x421b65    rol ch, 0x1
0x421b67    jns 0x421b40
0x421b69    retf 0xead3

------> offset: 0x421b65
0x421b65    rol ch, 0x1
0x421b67    jns 0x421b40
0x421b69    retf 0xead3

------> offset: 0x421b67
0x421b67    jns 0x421b40
0x421b69    retf 0xead3

------> offset: 0x421bed
0x421bed    pop rdi
0x421bee    add eax, [rax]
0x421bf0    add [rax-0x7d], cl
0x421bf3    ret 0x4910

------> offset: 0x421c3d
0x421c3d    xchg [rsi], cl
0x421c3f    add eax, [rax]
0x421c41    add [rax-0x7d], cl
0x421c44    ret 0xe910

------> offset: 0x421cb3
0x421cb3    jmp 0x7a07edb0
0x421cb8    xlat byte [rbx+al]
0x421cb9    retf 0xead3

------> offset: 0x421cb4
0x421cb4    clc
0x421cb5    rol ch, 0x1
0x421cb7    jns 0x421c90
0x421cb9    retf 0xead3

------> offset: 0x421cb5
0x421cb5    rol ch, 0x1
0x421cb7    jns 0x421c90
0x421cb9    retf 0xead3

------> offset: 0x421cb7
0x421cb7    jns 0x421c90
0x421cb9    retf 0xead3

------> offset: 0x421d3c
0x421d3c    xchg [rdi], cl
0x421d3e    add al, [rax]
0x421d40    add [rax-0x7d], cl
0x421d43    ret 0x4910

------> offset: 0x421d3d
0x421d3d    lar eax, [rax]
0x421d40    add [rax-0x7d], cl
0x421d43    ret 0x4910

------> offset: 0x421d8f
0x421d8f    add [rax], eax
0x421d91    add [rax-0x7d], cl
0x421d94    ret 0xe910

------> offset: 0x421e03
0x421e03    jmp 0x7a07ef00
0x421e08    xlat byte [rbx+al]
0x421e09    retf 0xead3

------> offset: 0x421e04
0x421e04    clc
0x421e05    rol ch, 0x1
0x421e07    jns 0x421de0
0x421e09    retf 0xead3

------> offset: 0x421e05
0x421e05    rol ch, 0x1
0x421e07    jns 0x421de0
0x421e09    retf 0xead3

------> offset: 0x421e07
0x421e07    jns 0x421de0
0x421e09    retf 0xead3

------> offset: 0x421fd8
0x421fd8    ja 0x421fd0
0x421fda    ret 0x7401

------> offset: 0x421ffe
0x421ffe    add sil, sil
0x422001    ret 0x7404

------> offset: 0x422043
0x422043    jbe 0x422055
0x422045    lea rdi, [rdi+0x10]
0x422049    jnz 0x422030
0x42204b    ret

------> offset: 0x422044
0x422044    adc [rax-0x73], cl
0x422047    jg 0x422059
0x422049    jnz 0x422030
0x42204b    ret

------> offset: 0x422045
0x422045    lea rdi, [rdi+0x10]
0x422049    jnz 0x422030
0x42204b    ret

------> offset: 0x422046
0x422046    lea edi, [rdi+0x10]
0x422049    jnz 0x422030
0x42204b    ret

------> offset: 0x422047
0x422047    jg 0x422059
0x422049    jnz 0x422030
0x42204b    ret

------> offset: 0x422048
0x422048    adc [rbp-0x1b], dh
0x42204b    ret

------> offset: 0x422049
0x422049    jnz 0x422030
0x42204b    ret

------> offset: 0x42204a
0x42204a    in eax, 0xf3
0x42204c    ret

------> offset: 0x422106
0x422106    and al, 0xf8
0x422108    jnz 0x421fd9
0x42210e    ret

------> offset: 0x422107
0x422107    clc
0x422108    jnz 0x421fd9
0x42210e    ret

------> offset: 0x422108
0x422108    jnz 0x421fd9
0x42210e    ret

------> offset: 0x422145
0x422145    test [rdi-0xc000002], ecx
0x42214b    ret

------> offset: 0x42232f
0x42232f    test [rbp-0xc000004], esp
0x422335    ret

------> offset: 0x42242e
0x42242e    test [rsi-0xc000005], esp
0x422434    ret

------> offset: 0x42245a
0x42245a    adc [rax-0x75], cl
0x42245d    sbb [rax-0x7d], r9b
0x422461    ret 0x4802

------> offset: 0x42245d
0x42245d    sbb [rax-0x7d], r9b
0x422461    ret 0x4802

------> offset: 0x42245e
0x42245e    sbb [rax-0x7d], cl
0x422461    ret 0x4802

------> offset: 0x422461
0x422461    ret 0x4802

------> offset: 0x4224f5
0x4224f5    ret 0x4806

------> offset: 0x42250d
0x42250d    ret 0x4805

------> offset: 0x422525
0x422525    ret 0x4804

------> offset: 0x42253d
0x42253d    ret 0x4803

------> offset: 0x422564
0x422564    nop dword [rax+0x0]
0x422568    mov [rdi], rcx
0x42256b    ret

------> offset: 0x422568
0x422568    mov [rdi], rcx
0x42256b    ret

------> offset: 0x422569
0x422569    mov [rdi], ecx
0x42256b    ret

------> offset: 0x4225e6
0x4225e6    or rax, r10
0x4225e9    mov [rdi], rax
0x4225ec    pop rbx
0x4225ed    pop rbp
0x4225ee    ret

------> offset: 0x4225e7
0x4225e7    or eax, edx
0x4225e9    mov [rdi], rax
0x4225ec    pop rbx
0x4225ed    pop rbp
0x4225ee    ret

------> offset: 0x4225e9
0x4225e9    mov [rdi], rax
0x4225ec    pop rbx
0x4225ed    pop rbp
0x4225ee    ret

------> offset: 0x4225ea
0x4225ea    mov [rdi], eax
0x4225ec    pop rbx
0x4225ed    pop rbp
0x4225ee    ret

------> offset: 0x4225f5
0x4225f5    pop rsi
0x4225f6    or [rax-0x7d], cl
0x4225f9    ret 0x4801

------> offset: 0x4225f6
0x4225f6    or [rax-0x7d], cl
0x4225f9    ret 0x4801

------> offset: 0x42267d
0x42267d    push rsi
0x42267e    or [rax-0x7d], cl
0x422681    ret 0x4802

------> offset: 0x42267e
0x42267e    or [rax-0x7d], cl
0x422681    ret 0x4802

------> offset: 0x4226c1
0x4226c1    ret 0x4c02

------> offset: 0x422795
0x422795    add [rax], r8b
0x422798    mov [rdi+0x38], r9
0x42279c    ret

------> offset: 0x422796
0x422796    add [rax], al
0x422798    mov [rdi+0x38], r9
0x42279c    ret

------> offset: 0x422797
0x422797    add [rcx+rcx*4+0x4f], cl
0x42279b    cmp bl, dh
0x42279d    ret

------> offset: 0x422798
0x422798    mov [rdi+0x38], r9
0x42279c    ret

------> offset: 0x422799
0x422799    mov [rdi+0x38], ecx
0x42279c    ret

------> offset: 0x42279a
0x42279a    cmp r11b, r14b
0x42279d    ret

------> offset: 0x42279b
0x42279b    cmp bl, dh
0x42279d    ret

------> offset: 0x4228aa
0x4228aa    mov [rdi+0x18], eax
0x4228ad    pop rbx
0x4228ae    pop rbp
0x4228af    pop r12
0x4228b1    pop r13
0x4228b3    ret

------> offset: 0x4228ab
0x4228ab    sbb [r11+0x5d], r11b
0x4228af    pop r12
0x4228b1    pop r13
0x4228b3    ret

------> offset: 0x4228c5
0x4228c5    out dx, eax
0x4228c6    adc [rax-0x7d], cl
0x4228c9    ret 0x4c01

------> offset: 0x4228c6
0x4228c6    adc [rax-0x7d], cl
0x4228c9    ret 0x4c01

------> offset: 0x4228c9
0x4228c9    ret 0x4c01

------> offset: 0x422961
0x422961    ret 0x4902

------> offset: 0x4229da
0x4229da    bsf eax, eax
0x4229dd    add rax, rdi
0x4229e0    add rax, rcx
0x4229e3    ret

------> offset: 0x4229dc
0x4229dc    ror byte [rax+0x1], 0xf8
0x4229e0    add rax, rcx
0x4229e3    ret

------> offset: 0x422b17
0x422b17    fldenv [rsi+0xf]
0x422b1a    jz 0x422b6b
0x422b1c    xor [rsi+0xf], ah
0x422b1f    xlat byte [rbx+al]
0x422b20    ret

------> offset: 0x422b1a
0x422b1a    jz 0x422b6b
0x422b1c    xor [rsi+0xf], ah
0x422b1f    xlat byte [rbx+al]
0x422b20    ret

------> offset: 0x422b3f
0x422b3f    add [rdi], cl
0x422b41    mov esp, 0x448d48c0
0x422b46    cmp al, dh
0x422b48    ret

------> offset: 0x422b7b
0x422b7b    add byte [rax], 0x0
0x422b7e    add [rax], al
0x422b80    xor rax, rax
0x422b83    ret

------> offset: 0x422b7c
0x422b7c    add [rax], al
0x422b7e    add [rax], al
0x422b80    xor rax, rax
0x422b83    ret

------> offset: 0x422bd1
0x422bd1    jz 0x422be0
0x422bd3    bsf eax, eax
0x422bd6    lea rax, [rdi+rax]
0x422bda    ret

------> offset: 0x422bd2
0x422bd2    or eax, 0x48c0bc0f
0x422bd7    lea eax, [rdi+rax]
0x422bda    ret

------> offset: 0x422bd3
0x422bd3    bsf eax, eax
0x422bd6    lea rax, [rdi+rax]
0x422bda    ret

------> offset: 0x422bd6
0x422bd6    lea rax, [rdi+rax]
0x422bda    ret

------> offset: 0x422bd7
0x422bd7    lea eax, [rdi+rax]
0x422bda    ret

------> offset: 0x422bd8
0x422bd8    add al, 0x7
0x422bda    ret

------> offset: 0x422cf0
0x422cf0    bsf rax, rax
0x422cf4    lea rax, [rdi+rax]
0x422cf8    ret

------> offset: 0x422dd6
0x422dd6    jnz 0x422db8
0x422dd8    pop rbx
0x422dd9    pop rbp
0x422dda    mov rax, r12
0x422ddd    pop r12
0x422ddf    ret

------> offset: 0x422dd7
0x422dd7    loopnz 0x422e34
0x422dd9    pop rbp
0x422dda    mov rax, r12
0x422ddd    pop r12
0x422ddf    ret

------> offset: 0x422dd8
0x422dd8    pop rbx
0x422dd9    pop rbp
0x422dda    mov rax, r12
0x422ddd    pop r12
0x422ddf    ret

------> offset: 0x422dd9
0x422dd9    pop rbp
0x422dda    mov rax, r12
0x422ddd    pop r12
0x422ddf    ret

------> offset: 0x422dda
0x422dda    mov rax, r12
0x422ddd    pop r12
0x422ddf    ret

------> offset: 0x422ddc
0x422ddc    loopnz 0x422e1f
0x422dde    pop rsp
0x422ddf    ret

------> offset: 0x422e2a
0x422e2a    cmp eax, 0x1
0x422e2d    ja 0x422e08
0x422e2f    pop rbx
0x422e30    pop rbp
0x422e31    pop r12
0x422e33    ret

------> offset: 0x422e2b
0x422e2b    clc
0x422e2c    add [rdi-0x27], esi
0x422e2f    pop rbx
0x422e30    pop rbp
0x422e31    pop r12
0x422e33    ret

------> offset: 0x422e2c
0x422e2c    add [rdi-0x27], esi
0x422e2f    pop rbx
0x422e30    pop rbp
0x422e31    pop r12
0x422e33    ret

------> offset: 0x422e2d
0x422e2d    ja 0x422e08
0x422e2f    pop rbx
0x422e30    pop rbp
0x422e31    pop r12
0x422e33    ret

------> offset: 0x422e2e
0x422e2e    fstp dword [rbx+0x5d]
0x422e31    pop r12
0x422e33    ret

------> offset: 0x423482
0x423482    retf 0xb

------> offset: 0x4240e1
0x4240e1    add al, 0x17
0x4240e3    movzx edx, byte [rsi+rdx]
0x4240e7    sub eax, edx
0x4240e9    ret

------> offset: 0x4240e3
0x4240e3    movzx edx, byte [rsi+rdx]
0x4240e7    sub eax, edx
0x4240e9    ret

------> offset: 0x4240e5
0x4240e5    adc al, 0x16
0x4240e7    sub eax, edx
0x4240e9    ret

------> offset: 0x42414b
0x42414b    retf 0xc148

------> offset: 0x42418f
0x42418f    add [rax-0x7d], cl
0x424192    rol byte [rax+0x48], 0x83
0x424196    ret 0x4840

------> offset: 0x424192
0x424192    rol byte [rax+0x48], 0x83
0x424196    ret 0x4840

------> offset: 0x424196
0x424196    ret 0x4840

------> offset: 0x4241ba
0x4241ba    ret 0xff3

------> offset: 0x42424f
0x42424f    add al, 0x8
0x424251    movzx edx, byte [rdx+rcx]
0x424255    sub eax, edx
0x424257    ret

------> offset: 0x424251
0x424251    movzx edx, byte [rdx+rcx]
0x424255    sub eax, edx
0x424257    ret

------> offset: 0x424253
0x424253    adc al, 0xa
0x424255    sub eax, edx
0x424257    ret

------> offset: 0x42426c
0x42426c    retf 0x4266

------> offset: 0x42428a
0x42428a    ret 0x4266

------> offset: 0x42433a
0x42433a    test al, al
0x42433c    jnz 0x424320
0x42433e    xor eax, eax
0x424340    sub eax, ecx
0x424342    ret

------> offset: 0x42433b
0x42433b    sal byte [rbp-0x1e], 0x31
0x42433f    shr byte [rcx], 0xc8
0x424342    ret

------> offset: 0x42433c
0x42433c    jnz 0x424320
0x42433e    xor eax, eax
0x424340    sub eax, ecx
0x424342    ret

------> offset: 0x42433d
0x42433d    loop 0x424370
0x42433f    shr byte [rcx], 0xc8
0x424342    ret

------> offset: 0x42433e
0x42433e    xor eax, eax
0x424340    sub eax, ecx
0x424342    ret

------> offset: 0x42433f
0x42433f    shr byte [rcx], 0xc8
0x424342    ret

------> offset: 0x42437f
0x42437f    add [rdi], cl
0x424381    mov dh, 0x7
0x424383    movzx ecx, byte [rsi]
0x424386    sub eax, ecx
0x424388    ret

------> offset: 0x424380
0x424380    movzx eax, byte [rdi]
0x424383    movzx ecx, byte [rsi]
0x424386    sub eax, ecx
0x424388    ret

------> offset: 0x424381
0x424381    mov dh, 0x7
0x424383    movzx ecx, byte [rsi]
0x424386    sub eax, ecx
0x424388    ret

------> offset: 0x424383
0x424383    movzx ecx, byte [rsi]
0x424386    sub eax, ecx
0x424388    ret

------> offset: 0x424384
0x424384    mov dh, 0xe
0x424386    sub eax, ecx
0x424388    ret

------> offset: 0x42439a
0x42439a    out dx, eax
0x42439b    shl dword [rsi+0xf], 0x1
0x42439e    cmp [rdi], dl
0x4243a0    ret 0x830f

------> offset: 0x42439b
0x42439b    shl dword [rsi+0xf], 0x1
0x42439e    cmp [rdi], dl
0x4243a0    ret 0x830f

------> offset: 0x42439e
0x42439e    cmp [rdi], dl
0x4243a0    ret 0x830f

------> offset: 0x4243ba
0x4243ba    retf 0xf748

------> offset: 0x4243f3
0x4243f3    out dx, eax
0x4243f4    push rsi
0x4243f5    adc [rsi+0xf], ah
0x4243f8    cmp [rdi], dl
0x4243fa    ret 0x830f

------> offset: 0x4243f4
0x4243f4    push rsi
0x4243f5    adc [rsi+0xf], ah
0x4243f8    cmp [rdi], dl
0x4243fa    ret 0x830f

------> offset: 0x4243f5
0x4243f5    adc [rsi+0xf], ah
0x4243f8    cmp [rdi], dl
0x4243fa    ret 0x830f

------> offset: 0x424408
0x424408    out dx, eax
0x424409    push rsi
0x42440a    and [rsi+0xf], ah
0x42440d    cmp [rdi], dl
0x42440f    ret 0x830f

------> offset: 0x424409
0x424409    push rsi
0x42440a    and [rsi+0xf], ah
0x42440d    cmp [rdi], dl
0x42440f    ret 0x830f

------> offset: 0x42440a
0x42440a    and [rsi+0xf], ah
0x42440d    cmp [rdi], dl
0x42440f    ret 0x830f

------> offset: 0x42441d
0x42441d    out dx, eax
0x42441e    push rsi
0x42441f    xor [rsi+0xf], ah
0x424422    cmp [rdi], dl
0x424424    ret 0x830f

------> offset: 0x42441e
0x42441e    push rsi
0x42441f    xor [rsi+0xf], ah
0x424422    cmp [rdi], dl
0x424424    ret 0x830f

------> offset: 0x42441f
0x42441f    xor [rsi+0xf], ah
0x424422    cmp [rdi], dl
0x424424    ret 0x830f

------> offset: 0x42450b
0x42450b    retf 0x9

------> offset: 0x424672
0x424672    add [rax], al
0x424674    add [rsi+0xf], ah
0x424677    cmp [rdi], dl
0x424679    ret 0x830f

------> offset: 0x424674
0x424674    add [rsi+0xf], ah
0x424677    cmp [rdi], dl
0x424679    ret 0x830f

------> offset: 0x4247d2
0x4247d2    ret 0x7677

------> offset: 0x4247ea
0x4247ea    outs dx, dword [rsi]
0x4247eb    retf 0xff3

------> offset: 0x4247eb
0x4247eb    retf 0xff3

------> offset: 0x424cfa
0x424cfa    outs dx, dword [rsi]
0x424cfb    retf 0xf66

------> offset: 0x424dfa
0x424dfa    adc [rsi+0xf], ah
0x424dfd    cmp [rdi], dl
0x424dff    ret

------> offset: 0x424dfd
0x424dfd    cmp [rdi], dl
0x424dff    ret

------> offset: 0x424f20
0x424f20    ror dword [rdi], 0x85
0x424f23    sub al, 0xa
0x424f25    add [rax], al
0x424f27    xor eax, eax
0x424f29    ret

------> offset: 0x424f21
0x424f21    jnz 0x425953
0x424f27    xor eax, eax
0x424f29    ret

------> offset: 0x424f22
0x424f22    test [rdx+rcx], ebp
0x424f25    add [rax], al
0x424f27    xor eax, eax
0x424f29    ret

------> offset: 0x424f23
0x424f23    sub al, 0xa
0x424f25    add [rax], al
0x424f27    xor eax, eax
0x424f29    ret

------> offset: 0x424f48
0x424f48    ror dword [rdi], 0x85
0x424f4b    adc [rdx], cl
0x424f4d    add [rax], al
0x424f4f    xor eax, eax
0x424f51    ret

------> offset: 0x424f49
0x424f49    jnz 0x42595f
0x424f4f    xor eax, eax
0x424f51    ret

------> offset: 0x424f4b
0x424f4b    adc [rdx], cl
0x424f4d    add [rax], al
0x424f4f    xor eax, eax
0x424f51    ret

------> offset: 0x424f76
0x424f76    cmp dword [rbp-0xcfffff7], 0xf
0x424f7d    outs dx, dword [rsi]
0x424f7e    iret

------> offset: 0x424f7d
0x424f7d    outs dx, dword [rsi]
0x424f7e    iret

------> offset: 0x424f82
0x424f82    outs dx, dword [rsi]
0x424f83    push rsi
0x424f84    iret

------> offset: 0x424f83
0x424f83    push rsi
0x424f84    iret

------> offset: 0x424ffd
0x424ffd    test [rcx+0x9], edx
0x425000    add [rax], al
0x425002    xor eax, eax
0x425004    ret

------> offset: 0x425022
0x425022    movzx edx, byte [rsi-0x1]
0x425026    sub eax, edx
0x425028    ret

------> offset: 0x4250b8
0x4250b8    and ecx, 0xffff
0x4250be    sub eax, ecx
0x4250c0    ret

------> offset: 0x4250bc
0x4250bc    add [rax], al
0x4250be    sub eax, ecx
0x4250c0    ret

------> offset: 0x4250ed
0x4250ed    test [rcx+0x8], esp
0x4250f0    add [rax], al
0x4250f2    xor eax, eax
0x4250f4    ret

------> offset: 0x4251dd
0x4251dd    test [rcx+0x7], esi
0x4251e0    add [rax], al
0x4251e2    xor eax, eax
0x4251e4    ret

------> offset: 0x4251de
0x4251de    jno 0x4251e7
0x4251e0    add [rax], al
0x4251e2    xor eax, eax
0x4251e4    ret

------> offset: 0x425207
0x425207    test [rbx+0x7], edx
0x42520a    add [rax], al
0x42520c    xor eax, eax
0x42520e    ret

------> offset: 0x425224
0x425224    movzx ecx, byte [rsi-0x1]
0x425228    sub eax, ecx
0x42522a    ret

------> offset: 0x4252a3
0x4252a3    ror dword [rdi], 0x85
0x4252a6    mov ch, 0x6
0x4252a8    add [rax], al
0x4252aa    xor eax, eax
0x4252ac    ret

------> offset: 0x4252a6
0x4252a6    mov ch, 0x6
0x4252a8    add [rax], al
0x4252aa    xor eax, eax
0x4252ac    ret

------> offset: 0x4252cd
0x4252cd    outs dx, dword [rsi]
0x4252ce    retf

------> offset: 0x4252d2
0x4252d2    outs dx, dword [rsi]
0x4252d3    push rdi
0x4252d4    retf

------> offset: 0x4252d3
0x4252d3    push rdi
0x4252d4    retf

------> offset: 0x425348
0x425348    add eax, 0xff30000
0x42534d    outs dx, dword [rsi]
0x42534e    retf 0xff3

------> offset: 0x425352
0x425352    outs dx, dword [rsi]
0x425353    push rdi
0x425354    retf 0xcab2

------> offset: 0x425353
0x425353    push rdi
0x425354    retf 0xcab2

------> offset: 0x425354
0x425354    retf 0xcab2

------> offset: 0x4253a6
0x4253a6    ror dword [rdi], 0x85
0x4253a9    cmpsb
0x4253aa    add eax, 0xffffffffc0310000
0x4253af    ret

------> offset: 0x4253a9
0x4253a9    cmpsb
0x4253aa    add eax, 0xffffffffc0310000
0x4253af    ret

------> offset: 0x4253aa
0x4253aa    add eax, 0xffffffffc0310000
0x4253af    ret

------> offset: 0x425426
0x425426    ror dword [rdi], 0x85
0x425429    add eax, 0xffffffffc0310000
0x42542f    ret

------> offset: 0x425428
0x425428    test [rsi], esp
0x42542a    add eax, 0xffffffffc0310000
0x42542f    ret

------> offset: 0x425572
0x425572    ret 0x3

------> offset: 0x425654
0x425654    ror dword [rdi], 0x85
0x425657    add al, 0x3
0x425659    add [rax], al
0x42565b    xor eax, eax
0x42565d    ret

------> offset: 0x425656
0x425656    test [rbx+rax], eax
0x425659    add [rax], al
0x42565b    xor eax, eax
0x42565d    ret

------> offset: 0x425657
0x425657    add al, 0x3
0x425659    add [rax], al
0x42565b    xor eax, eax
0x42565d    ret

------> offset: 0x4256e4
0x4256e4    ror dword [rdi], 0x85
0x4256e7    jz 0x4256eb
0x4256e9    add [rax], al
0x4256eb    xor eax, eax
0x4256ed    ret

------> offset: 0x4256e7
0x4256e7    jz 0x4256eb
0x4256e9    add [rax], al
0x4256eb    xor eax, eax
0x4256ed    ret

------> offset: 0x425706
0x425706    sub dword [rip-0xcfffffe], 0xf
0x42570d    outs dx, dword [rsi]
0x42570e    push rdi
0x42570f    ret

------> offset: 0x42570d
0x42570d    outs dx, dword [rsi]
0x42570e    push rdi
0x42570f    ret

------> offset: 0x42570e
0x42570e    push rdi
0x42570f    ret

------> offset: 0x425712
0x425712    outs dx, dword [rsi]
0x425713    ret

------> offset: 0x4257ad
0x4257ad    outs dx, dword [rsi]
0x4257ae    push rdi
0x4257af    ret 0xff3

------> offset: 0x4257ae
0x4257ae    push rdi
0x4257af    ret 0xff3

------> offset: 0x4257b2
0x4257b2    outs dx, dword [rsi]
0x4257b3    ret 0xc2b2

------> offset: 0x4257b3
0x4257b3    ret 0xc2b2

------> offset: 0x4258de
0x4258de    out dx, eax
0x4258df    shl dword [rsi+0xf], 0x1
0x4258e2    cmp [rdi], dl
0x4258e4    ret 0x5173

------> offset: 0x4258df
0x4258df    shl dword [rsi+0xf], 0x1
0x4258e2    cmp [rdi], dl
0x4258e4    ret 0x5173

------> offset: 0x4258e2
0x4258e2    cmp [rdi], dl
0x4258e4    ret 0x5173

------> offset: 0x4258e4
0x4258e4    ret 0x5173

------> offset: 0x4258f5
0x4258f5    out dx, eax
0x4258f6    shl dword [rsi+0xf], 0x1
0x4258f9    cmp [rdi], dl
0x4258fb    ret 0x3a73

------> offset: 0x4258f6
0x4258f6    shl dword [rsi+0xf], 0x1
0x4258f9    cmp [rdi], dl
0x4258fb    ret 0x3a73

------> offset: 0x4258f9
0x4258f9    cmp [rdi], dl
0x4258fb    ret 0x3a73

------> offset: 0x4258fb
0x4258fb    ret 0x3a73

------> offset: 0x42590c
0x42590c    out dx, eax
0x42590d    shl dword [rsi+0xf], 0x1
0x425910    cmp [rdi], dl
0x425912    ret 0x2373

------> offset: 0x42590d
0x42590d    shl dword [rsi+0xf], 0x1
0x425910    cmp [rdi], dl
0x425912    ret 0x2373

------> offset: 0x425910
0x425910    cmp [rdi], dl
0x425912    ret 0x2373

------> offset: 0x425912
0x425912    ret 0x2373

------> offset: 0x425928
0x425928    clc
0x42592a    cmp rcx, rax
0x42592d    jnz 0x425953
0x42592f    xor eax, eax
0x425931    ret

------> offset: 0x42592a
0x42592a    cmp rcx, rax
0x42592d    jnz 0x425953
0x42592f    xor eax, eax
0x425931    ret

------> offset: 0x42592b
0x42592b    cmp ecx, eax
0x42592d    jnz 0x425953
0x42592f    xor eax, eax
0x425931    ret

------> offset: 0x425985
0x425985    and ecx, 0xff
0x42598b    sub eax, ecx
0x42598d    ret

------> offset: 0x425987
0x425987    inc dword [rax]
0x425989    add [rax], al
0x42598b    sub eax, ecx
0x42598d    ret

------> offset: 0x4259fe
0x4259fe    mov bh, 0x29
0x425a01    add [rax+0x39], cl
0x425a04    retf 0x8949

------> offset: 0x425a01
0x425a01    add [rax+0x39], cl
0x425a04    retf 0x8949

------> offset: 0x425a47
0x425a47    cmovs esi, [rcx]
0x425a4a    iret

------> offset: 0x425a54
0x425a54    fdiv dword [rsi+0x39480029]
0x425a5a    retf 0x8949

------> offset: 0x425a55
0x425a55    mov dh, 0x29
0x425a57    add [rax+0x39], cl
0x425a5a    retf 0x8949

------> offset: 0x425ed2
0x425ed2    mov [rdi], esp
0x425ed4    add [rax], al
0x425ed6    add [rax+0x39], cl
0x425ed9    retf 0x280f

------> offset: 0x425ed4
0x425ed4    add [rax], al
0x425ed6    add [rax+0x39], cl
0x425ed9    retf 0x280f

------> offset: 0x425ed6
0x425ed6    add [rax+0x39], cl
0x425ed9    retf 0x280f

------> offset: 0x425ed9
0x425ed9    retf 0x280f

------> offset: 0x425fc1
0x425fc1    cmp cl, [rdi]
0x425fc3    retf 0x6601

------> offset: 0x425fc3
0x425fc3    retf 0x6601

------> offset: 0x426111
0x426111    cmp cl, [rdi]
0x426113    retf 0x6602

------> offset: 0x426113
0x426113    retf 0x6602

------> offset: 0x426261
0x426261    cmp cl, [rdi]
0x426263    retf 0x6603

------> offset: 0x426263
0x426263    retf 0x6603

------> offset: 0x4263b1
0x4263b1    cmp cl, [rdi]
0x4263b3    retf 0x6604

------> offset: 0x4263b3
0x4263b3    retf 0x6604

------> offset: 0x426501
0x426501    cmp cl, [rdi]
0x426503    retf 0x6605

------> offset: 0x426503
0x426503    retf 0x6605

------> offset: 0x426651
0x426651    cmp cl, [rdi]
0x426653    retf 0x6606

------> offset: 0x426653
0x426653    retf 0x6606

------> offset: 0x4267a1
0x4267a1    cmp cl, [rdi]
0x4267a3    retf 0x6607

------> offset: 0x4267a3
0x4267a3    retf 0x6607

------> offset: 0x4268f1
0x4268f1    cmp cl, [rdi]
0x4268f3    retf 0x6608

------> offset: 0x4268f3
0x4268f3    retf 0x6608

------> offset: 0x426a41
0x426a41    cmp cl, [rdi]
0x426a43    retf 0x6609

------> offset: 0x426a43
0x426a43    retf 0x6609

------> offset: 0x426b91
0x426b91    cmp cl, [rdi]
0x426b93    retf 0x660a

------> offset: 0x426b93
0x426b93    retf 0x660a

------> offset: 0x426ce1
0x426ce1    cmp cl, [rdi]
0x426ce3    retf 0x660b

------> offset: 0x426ce3
0x426ce3    retf 0x660b

------> offset: 0x426e31
0x426e31    cmp cl, [rdi]
0x426e33    retf 0x660c

------> offset: 0x426e33
0x426e33    retf 0x660c

------> offset: 0x426f81
0x426f81    cmp cl, [rdi]
0x426f83    retf 0x660d

------> offset: 0x426f83
0x426f83    retf 0x660d

------> offset: 0x4270c5
0x4270c5    ret 0x280f

------> offset: 0x4270d1
0x4270d1    cmp cl, [rdi]
0x4270d3    retf 0x660e

------> offset: 0x4270d3
0x4270d3    retf 0x660e

------> offset: 0x427221
0x427221    cmp cl, [rdi]
0x427223    retf 0x660f

------> offset: 0x427223
0x427223    retf 0x660f

------> offset: 0x4272b3
0x4272b3    call 0xfffffffff0a1fc04
0x4272b8    mov [rdi-0x8], rcx
0x4272bc    ret

------> offset: 0x4272b4
0x4272b4    mov [rdi-0x10], r11
0x4272b8    mov [rdi-0x8], rcx
0x4272bc    ret

------> offset: 0x4272b5
0x4272b5    mov [rdi-0x10], ebx
0x4272b8    mov [rdi-0x8], rcx
0x4272bc    ret

------> offset: 0x4272b6
0x4272b6    pop rdi
0x4272b7    mov [rdi-0x8], rcx
0x4272bc    ret

------> offset: 0x4272b7
0x4272b7    mov [rdi-0x8], rcx
0x4272bc    ret

------> offset: 0x4272b9
0x4272b9    mov [rdi-0x8], ecx
0x4272bc    ret

------> offset: 0x4272f1
0x4272f1    call 0xfffffffff0a1fc42
0x4272f6    mov [rdi-0x8], rdx
0x4272fa    ret

------> offset: 0x4272f2
0x4272f2    mov [rdi-0x10], r11
0x4272f6    mov [rdi-0x8], rdx
0x4272fa    ret

------> offset: 0x4272f3
0x4272f3    mov [rdi-0x10], ebx
0x4272f6    mov [rdi-0x8], rdx
0x4272fa    ret

------> offset: 0x4272f4
0x4272f4    pop rdi
0x4272f5    mov [rdi-0x8], rdx
0x4272fa    ret

------> offset: 0x4272f5
0x4272f5    mov [rdi-0x8], rdx
0x4272fa    ret

------> offset: 0x4272f7
0x4272f7    mov [rdi-0x8], edx
0x4272fa    ret

------> offset: 0x4272f8
0x4272f8    push rdi
0x4272f9    clc
0x4272fa    ret

------> offset: 0x427329
0x427329    call 0xfffffffff0a1fc7a
0x42732e    mov [rdi-0x8], rcx
0x427332    ret

------> offset: 0x427367
0x427367    call 0xfffffffff0a1fcb8
0x42736c    mov [rdi-0x8], rdx
0x427370    ret

------> offset: 0x42739f
0x42739f    call 0xfffffffff0a1fcf0
0x4273a4    mov [rdi-0x8], rdx
0x4273a8    ret

------> offset: 0x4273c7
0x4273c7    call 0xfffffffff0a1fd18
0x4273cc    mov [rdi-0x8], rdx
0x4273d0    ret

------> offset: 0x4273ef
0x4273ef    call 0xfffffffff0a1fd40
0x4273f4    mov [rdi-0x8], rdx
0x4273f8    ret

------> offset: 0x427407
0x427407    clc
0x427408    mov [rdi-0x10], r11
0x42740c    mov [rdi-0x8], rdx
0x427410    ret

------> offset: 0x42741f
0x42741f    add [rax-0x75], cl
0x427422    push rsi
0x427423    clc
0x427424    mov [rdi-0x8], rdx
0x427428    ret

------> offset: 0x427420
0x427420    mov rdx, [rsi-0x8]
0x427424    mov [rdi-0x8], rdx
0x427428    ret

------> offset: 0x427421
0x427421    mov edx, [rsi-0x8]
0x427424    mov [rdi-0x8], rdx
0x427428    ret

------> offset: 0x427422
0x427422    push rsi
0x427423    clc
0x427424    mov [rdi-0x8], rdx
0x427428    ret

------> offset: 0x427423
0x427423    clc
0x427424    mov [rdi-0x8], rdx
0x427428    ret

------> offset: 0x427469
0x427469    pop rdi
0x42746a    out dx, eax
0x42746b    mov [rdi-0x9], r8
0x42746f    mov [rdi-0x4], edx
0x427472    ret

------> offset: 0x42746a
0x42746a    out dx, eax
0x42746b    mov [rdi-0x9], r8
0x42746f    mov [rdi-0x4], edx
0x427472    ret

------> offset: 0x42746b
0x42746b    mov [rdi-0x9], r8
0x42746f    mov [rdi-0x4], edx
0x427472    ret

------> offset: 0x42746c
0x42746c    mov [rdi-0x9], eax
0x42746f    mov [rdi-0x4], edx
0x427472    ret

------> offset: 0x42746f
0x42746f    mov [rdi-0x4], edx
0x427472    ret

------> offset: 0x427470
0x427470    push rdi
0x427471    cld
0x427472    ret

------> offset: 0x427482
0x427482    outs dx, dword [rsi]
0x427483    mov edi, 0x4e6f0ff3
0x427489    iret

------> offset: 0x427483
0x427483    mov edi, 0x4e6f0ff3
0x427489    iret

------> offset: 0x42749f
0x42749f    jg 0x4274e8
0x4274a1    mov edi, 0x4f7f0ff3
0x4274a6    iret

------> offset: 0x4274a0
0x4274a0    mov r15d, 0x4f7f0ff3
0x4274a6    iret

------> offset: 0x4274a1
0x4274a1    mov edi, 0x4f7f0ff3
0x4274a6    iret

------> offset: 0x4274a4
0x4274a4    jg 0x4274f5
0x4274a6    iret

------> offset: 0x4274b1
0x4274b1    pop rdi
0x4274b2    out dx, eax
0x4274b3    mov [rdi-0x9], rcx
0x4274b7    mov [rdi-0x4], edx
0x4274ba    ret

------> offset: 0x4274b2
0x4274b2    out dx, eax
0x4274b3    mov [rdi-0x9], rcx
0x4274b7    mov [rdi-0x4], edx
0x4274ba    ret

------> offset: 0x4274b3
0x4274b3    mov [rdi-0x9], rcx
0x4274b7    mov [rdi-0x4], edx
0x4274ba    ret

------> offset: 0x4274b4
0x4274b4    mov [rdi-0x9], ecx
0x4274b7    mov [rdi-0x4], edx
0x4274ba    ret

------> offset: 0x42751a
0x42751a    jg 0x427563
0x42751c    iret

------> offset: 0x427565
0x427565    pop rdi
0x427566    out dx, eax
0x427567    mov [rdi-0x9], rcx
0x42756b    mov [rdi-0x1], dl
0x42756e    ret

------> offset: 0x427566
0x427566    out dx, eax
0x427567    mov [rdi-0x9], rcx
0x42756b    mov [rdi-0x1], dl
0x42756e    ret

------> offset: 0x427567
0x427567    mov [rdi-0x9], rcx
0x42756b    mov [rdi-0x1], dl
0x42756e    ret

------> offset: 0x427568
0x427568    mov [rdi-0x9], ecx
0x42756b    mov [rdi-0x1], dl
0x42756e    ret

------> offset: 0x42756b
0x42756b    mov [rdi-0x1], dl
0x42756e    ret

------> offset: 0x4275e5
0x4275e5    push rsi
0x4275e6    cld
0x4275e7    mov [rdi-0x9], rcx
0x4275eb    mov [rdi-0x4], edx
0x4275ee    ret

------> offset: 0x4275e6
0x4275e6    cld
0x4275e7    mov [rdi-0x9], rcx
0x4275eb    mov [rdi-0x4], edx
0x4275ee    ret

------> offset: 0x4275ef
0x4275ef    nop
0x4275f0    mov dl, [rsi-0x1]
0x4275f3    mov [rdi-0x1], dl
0x4275f6    ret

------> offset: 0x4275f0
0x4275f0    mov dl, [rsi-0x1]
0x4275f3    mov [rdi-0x1], dl
0x4275f6    ret

------> offset: 0x427639
0x427639    pop rdi
0x42763a    out dx, al
0x42763b    mov [rdi-0xa], rcx
0x42763f    mov [rdi-0x4], edx
0x427642    ret

------> offset: 0x42763a
0x42763a    out dx, al
0x42763b    mov [rdi-0xa], rcx
0x42763f    mov [rdi-0x4], edx
0x427642    ret

------> offset: 0x42763b
0x42763b    mov [rdi-0xa], rcx
0x42763f    mov [rdi-0x4], edx
0x427642    ret

------> offset: 0x42763c
0x42763c    mov [rdi-0xa], ecx
0x42763f    mov [rdi-0x4], edx
0x427642    ret

------> offset: 0x4277c5
0x4277c5    push rsi
0x4277c6    cld
0x4277c7    mov [rdi-0xa], rcx
0x4277cb    mov [rdi-0x4], edx
0x4277ce    ret

------> offset: 0x4277c6
0x4277c6    cld
0x4277c7    mov [rdi-0xa], rcx
0x4277cb    mov [rdi-0x4], edx
0x4277ce    ret

------> offset: 0x4277cf
0x4277cf    nop
0x4277d0    mov dx, [rsi-0x2]
0x4277d4    mov [rdi-0x2], dx
0x4277d8    ret

------> offset: 0x4277d0
0x4277d0    mov dx, [rsi-0x2]
0x4277d4    mov [rdi-0x2], dx
0x4277d8    ret

------> offset: 0x4277d1
0x4277d1    mov edx, [rsi-0x2]
0x4277d4    mov [rdi-0x2], dx
0x4277d8    ret

------> offset: 0x4277d4
0x4277d4    mov [rdi-0x2], dx
0x4277d8    ret

------> offset: 0x4277d5
0x4277d5    mov [rdi-0x2], edx
0x4277d8    ret

------> offset: 0x427819
0x427819    pop rdi
0x42781a    in eax, dx
0x42781b    mov [rdi-0xb], rcx
0x42781f    mov [rdi-0x4], edx
0x427822    ret

------> offset: 0x42781a
0x42781a    in eax, dx
0x42781b    mov [rdi-0xb], rcx
0x42781f    mov [rdi-0x4], edx
0x427822    ret

------> offset: 0x42781b
0x42781b    mov [rdi-0xb], rcx
0x42781f    mov [rdi-0x4], edx
0x427822    ret

------> offset: 0x42781c
0x42781c    mov [rdi-0xb], ecx
0x42781f    mov [rdi-0x4], edx
0x427822    ret

------> offset: 0x42781d
0x42781d    cmc
0x42781f    mov [rdi-0x4], edx
0x427822    ret

------> offset: 0x4279a5
0x4279a5    push rsi
0x4279a6    cld
0x4279a7    mov [rdi-0xb], rcx
0x4279ab    mov [rdi-0x4], edx
0x4279ae    ret

------> offset: 0x4279a6
0x4279a6    cld
0x4279a7    mov [rdi-0xb], rcx
0x4279ab    mov [rdi-0x4], edx
0x4279ae    ret

------> offset: 0x4279b8
0x4279b8    mov [rdi-0x3], dx
0x4279bc    mov [rdi-0x2], cx
0x4279c0    ret

------> offset: 0x4279b9
0x4279b9    mov [rdi-0x3], edx
0x4279bc    mov [rdi-0x2], cx
0x4279c0    ret

------> offset: 0x4279ba
0x4279ba    push rdi
0x4279bb    std
0x4279bc    mov [rdi-0x2], cx
0x4279c0    ret

------> offset: 0x4279bb
0x4279bb    std
0x4279bc    mov [rdi-0x2], cx
0x4279c0    ret

------> offset: 0x4279bc
0x4279bc    mov [rdi-0x2], cx
0x4279c0    ret

------> offset: 0x4279bd
0x4279bd    mov [rdi-0x2], ecx
0x4279c0    ret

------> offset: 0x427a09
0x427a09    pop rdi
0x427a0a    in al, dx
0x427a0b    mov [rdi-0xc], rcx
0x427a0f    mov [rdi-0x4], edx
0x427a12    ret

------> offset: 0x427a0a
0x427a0a    in al, dx
0x427a0b    mov [rdi-0xc], rcx
0x427a0f    mov [rdi-0x4], edx
0x427a12    ret

------> offset: 0x427a0b
0x427a0b    mov [rdi-0xc], rcx
0x427a0f    mov [rdi-0x4], edx
0x427a12    ret

------> offset: 0x427a0c
0x427a0c    mov [rdi-0xc], ecx
0x427a0f    mov [rdi-0x4], edx
0x427a12    ret

------> offset: 0x427a0d
0x427a0d    hlt
0x427a0f    mov [rdi-0x4], edx
0x427a12    ret

------> offset: 0x427b85
0x427b85    push rsi
0x427b86    cld
0x427b87    mov [rdi-0xc], rcx
0x427b8b    mov [rdi-0x4], edx
0x427b8e    ret

------> offset: 0x427b86
0x427b86    cld
0x427b87    mov [rdi-0xc], rcx
0x427b8b    mov [rdi-0x4], edx
0x427b8e    ret

------> offset: 0x427b8f
0x427b8f    nop
0x427b90    mov edx, [rsi-0x4]
0x427b93    mov [rdi-0x4], edx
0x427b96    ret

------> offset: 0x427b90
0x427b90    mov edx, [rsi-0x4]
0x427b93    mov [rdi-0x4], edx
0x427b96    ret

------> offset: 0x427b91
0x427b91    push rsi
0x427b92    cld
0x427b93    mov [rdi-0x4], edx
0x427b96    ret

------> offset: 0x427b92
0x427b92    cld
0x427b93    mov [rdi-0x4], edx
0x427b96    ret

------> offset: 0x427bc9
0x427bc9    jg 0x427c1a
0x427bcb    ret

------> offset: 0x427bdc
0x427bdc    mov [rdi-0xd], rcx
0x427be0    mov [rdi-0x8], rdx
0x427be4    ret

------> offset: 0x427bdd
0x427bdd    mov [rdi-0xd], ecx
0x427be0    mov [rdi-0x8], rdx
0x427be4    ret

------> offset: 0x427bf2
0x427bf2    outs dx, dword [rsi]
0x427bf3    mov ebx, 0x4e6f0ff3
0x427bf9    retf

------> offset: 0x427bf3
0x427bf3    mov ebx, 0x4e6f0ff3
0x427bf9    retf

------> offset: 0x427c10
0x427c10    jg 0x427c59
0x427c12    mov ebx, 0x4f7f0ff3
0x427c17    retf

------> offset: 0x427c11
0x427c11    mov r11d, 0x4f7f0ff3
0x427c17    retf

------> offset: 0x427c12
0x427c12    mov ebx, 0x4f7f0ff3
0x427c17    retf

------> offset: 0x427c15
0x427c15    jg 0x427c66
0x427c17    retf

------> offset: 0x427c23
0x427c23    jmp 0x427c6d
0x427c25    mov [rdi-0xd], ecx
0x427c28    mov [rdi-0x8], rdx
0x427c2c    ret

------> offset: 0x427c4f
0x427c4f    jg 0x427c98
0x427c51    ret

------> offset: 0x427c61
0x427c61    jmp 0x427cab
0x427c63    mov [rdi-0xd], ecx
0x427c66    mov [rdi-0x8], rdx
0x427c6a    ret

------> offset: 0x427c8f
0x427c8f    jg 0x427cd8
0x427c91    retf

------> offset: 0x427c9d
0x427c9d    jmp 0x427ce7
0x427c9f    mov [rdi-0xd], ecx
0x427ca2    mov [rdi-0x8], rdx
0x427ca6    ret

------> offset: 0x427cd7
0x427cd7    jmp 0x427d21
0x427cd9    mov [rdi-0xd], ecx
0x427cdc    mov [rdi-0x8], rdx
0x427ce0    ret

------> offset: 0x427d0f
0x427d0f    jmp 0x427d59
0x427d11    mov [rdi-0xd], ecx
0x427d14    mov [rdi-0x8], rdx
0x427d18    ret

------> offset: 0x427d37
0x427d37    jmp 0x427d81
0x427d39    mov [rdi-0xd], ecx
0x427d3c    mov [rdi-0x8], rdx
0x427d40    ret

------> offset: 0x427d5f
0x427d5f    jmp 0x427da9
0x427d61    mov [rdi-0xd], ecx
0x427d64    mov [rdi-0x8], rdx
0x427d68    ret

------> offset: 0x427d77
0x427d77    clc
0x427d78    mov [rdi-0xd], rcx
0x427d7c    mov [rdi-0x8], rdx
0x427d80    ret

------> offset: 0x427d93
0x427d93    mov ecx, [rsi-0x4]
0x427d96    mov [rdi-0x5], edx
0x427d99    mov [rdi-0x4], ecx
0x427d9c    ret

------> offset: 0x427d94
0x427d94    cld
0x427d96    mov [rdi-0x5], edx
0x427d99    mov [rdi-0x4], ecx
0x427d9c    ret

------> offset: 0x427d96
0x427d96    mov [rdi-0x5], edx
0x427d99    mov [rdi-0x4], ecx
0x427d9c    ret

------> offset: 0x427d97
0x427d97    push rdi
0x427d98    sti
0x427d99    mov [rdi-0x4], ecx
0x427d9c    ret

------> offset: 0x427d98
0x427d98    sti
0x427d99    mov [rdi-0x4], ecx
0x427d9c    ret

------> offset: 0x427d99
0x427d99    mov [rdi-0x4], ecx
0x427d9c    ret

------> offset: 0x427da7
0x427da7    outs dx, dword [rsi]
0x427da8    ret 0x8b4c

------> offset: 0x427dc9
0x427dc9    jg 0x427e1a
0x427dcb    ret 0x894c

------> offset: 0x427ddc
0x427ddc    mov [rdi-0xe], rcx
0x427de0    mov [rdi-0x8], rdx
0x427de4    ret

------> offset: 0x427ddd
0x427ddd    mov [rdi-0xe], ecx
0x427de0    mov [rdi-0x8], rdx
0x427de4    ret

------> offset: 0x427df2
0x427df2    outs dx, dword [rsi]
0x427df3    mov edx, 0x4e6f0ff3
0x427df9    retf 0x8b4c

------> offset: 0x427df3
0x427df3    mov edx, 0x4e6f0ff3
0x427df9    retf 0x8b4c

------> offset: 0x427df7
0x427df7    outs dx, dword [rsi]
0x427df8    retf 0x8b4c

------> offset: 0x427df8
0x427df8    retf 0x8b4c

------> offset: 0x427e10
0x427e10    jg 0x427e59
0x427e12    mov edx, 0x4f7f0ff3
0x427e17    retf 0x894c

------> offset: 0x427e11
0x427e11    mov r10d, 0x4f7f0ff3
0x427e17    retf 0x894c

------> offset: 0x427e12
0x427e12    mov edx, 0x4f7f0ff3
0x427e17    retf 0x894c

------> offset: 0x427e15
0x427e15    jg 0x427e66
0x427e17    retf 0x894c

------> offset: 0x427e16
0x427e16    retf 0x894c

------> offset: 0x427e4f
0x427e4f    jg 0x427e98
0x427e51    ret 0x894c

------> offset: 0x427e8b
0x427e8b    jg 0x427ed4
0x427e8d    retf 0x894c

------> offset: 0x427f77
0x427f77    clc
0x427f78    mov [rdi-0xe], rcx
0x427f7c    mov [rdi-0x8], rdx
0x427f80    ret

------> offset: 0x427f93
0x427f93    mov ecx, [rsi-0x4]
0x427f96    mov [rdi-0x6], edx
0x427f99    mov [rdi-0x4], ecx
0x427f9c    ret

------> offset: 0x427f94
0x427f94    cld
0x427f96    mov [rdi-0x6], edx
0x427f99    mov [rdi-0x4], ecx
0x427f9c    ret

------> offset: 0x427f96
0x427f96    mov [rdi-0x6], edx
0x427f99    mov [rdi-0x4], ecx
0x427f9c    ret

------> offset: 0x427f97
0x427f97    push rdi
0x427f98    cli
0x427f99    mov [rdi-0x4], ecx
0x427f9c    ret

------> offset: 0x427f98
0x427f98    cli
0x427f99    mov [rdi-0x4], ecx
0x427f9c    ret

------> offset: 0x427fdc
0x427fdc    mov [rdi-0xf], rcx
0x427fe0    mov [rdi-0x8], rdx
0x427fe4    ret

------> offset: 0x427fdd
0x427fdd    mov [rdi-0xf], ecx
0x427fe0    mov [rdi-0x8], rdx
0x427fe4    ret

------> offset: 0x427fde
0x427fde    int1
0x427fe0    mov [rdi-0x8], rdx
0x427fe4    ret

------> offset: 0x428023
0x428023    jmp 0xfffffffff1920970
0x428028    mov [rdi-0x8], rdx
0x42802c    ret

------> offset: 0x428061
0x428061    jmp 0xfffffffff19209ae
0x428066    mov [rdi-0x8], rdx
0x42806a    ret

------> offset: 0x428099
0x428099    jmp 0xfffffffff19209e6
0x42809e    mov [rdi-0x8], rdx
0x4280a2    ret

------> offset: 0x4280d7
0x4280d7    jmp 0xfffffffff1920a24
0x4280dc    mov [rdi-0x8], rdx
0x4280e0    ret

------> offset: 0x42810f
0x42810f    jmp 0xfffffffff1920a5c
0x428114    mov [rdi-0x8], rdx
0x428118    ret

------> offset: 0x428137
0x428137    jmp 0xfffffffff1920a84
0x42813c    mov [rdi-0x8], rdx
0x428140    ret

------> offset: 0x42815f
0x42815f    jmp 0xfffffffff1920aac
0x428164    mov [rdi-0x8], rdx
0x428168    ret

------> offset: 0x428177
0x428177    clc
0x428178    mov [rdi-0xf], rcx
0x42817c    mov [rdi-0x8], rdx
0x428180    ret

------> offset: 0x428193
0x428193    mov ecx, [rsi-0x4]
0x428196    mov [rdi-0x7], edx
0x428199    mov [rdi-0x4], ecx
0x42819c    ret

------> offset: 0x428194
0x428194    cld
0x428196    mov [rdi-0x7], edx
0x428199    mov [rdi-0x4], ecx
0x42819c    ret

------> offset: 0x428196
0x428196    mov [rdi-0x7], edx
0x428199    mov [rdi-0x4], ecx
0x42819c    ret

------> offset: 0x428197
0x428197    push rdi
0x428198    stc
0x428199    mov [rdi-0x4], ecx
0x42819c    ret

------> offset: 0x428198
0x428198    stc
0x428199    mov [rdi-0x4], ecx
0x42819c    ret

------> offset: 0x4281ca
0x4281ca    add cl, [rax+0x39]
0x4281cd    retf 0x820f

------> offset: 0x4281cd
0x4281cd    retf 0x820f

------> offset: 0x428587
0x428587    retf 0x14c

------> offset: 0x42859c
0x42859c    mov ebp, [rcx]
0x42859e    add [rax+0x39], cl
0x4285a1    retf 0x830f

------> offset: 0x42859e
0x42859e    add [rax+0x39], cl
0x4285a1    retf 0x830f

------> offset: 0x4285dc
0x4285dc    retf 0x870f

------> offset: 0x4285f8
0x4285f8    cmovl esi, [rcx]
0x4285fb    iret

------> offset: 0x4286ab
0x4286ab    add [rax-0x7f], cl
0x4286ae    ret 0x80

------> offset: 0x4286ae
0x4286ae    ret 0x80

------> offset: 0x42881a
0x42881a    cmp cl, [rdi]
0x42881c    retf 0xf01

------> offset: 0x42881c
0x42881c    retf 0xf01

------> offset: 0x42899a
0x42899a    cmp cl, [rdi]
0x42899c    retf 0xf02

------> offset: 0x42899c
0x42899c    retf 0xf02

------> offset: 0x428b1a
0x428b1a    cmp cl, [rdi]
0x428b1c    retf 0xf03

------> offset: 0x428b1c
0x428b1c    retf 0xf03

------> offset: 0x428c9a
0x428c9a    cmp cl, [rdi]
0x428c9c    retf 0xf04

------> offset: 0x428c9c
0x428c9c    retf 0xf04

------> offset: 0x428e1a
0x428e1a    cmp cl, [rdi]
0x428e1c    retf 0xf05

------> offset: 0x428e1c
0x428e1c    retf 0xf05

------> offset: 0x428f9a
0x428f9a    cmp cl, [rdi]
0x428f9c    retf 0xf06

------> offset: 0x428f9c
0x428f9c    retf 0xf06

------> offset: 0x429116
0x429116    push rsi
0x429117    jmp 0xf7ca082
0x42911c    retf 0xf07

------> offset: 0x429117
0x429117    jmp 0xf7ca082
0x42911c    retf 0xf07

------> offset: 0x42911a
0x42911a    cmp cl, [rdi]
0x42911c    retf 0xf07

------> offset: 0x42911c
0x42911c    retf 0xf07

------> offset: 0x429296
0x429296    push rsi
0x429297    call 0xf7ca202
0x42929c    retf 0xf08

------> offset: 0x429297
0x429297    call 0xf7ca202
0x42929c    retf 0xf08

------> offset: 0x42929a
0x42929a    cmp cl, [rdi]
0x42929c    retf 0xf08

------> offset: 0x42929c
0x42929c    retf 0xf08

------> offset: 0x42941a
0x42941a    cmp cl, [rdi]
0x42941c    retf 0xf09

------> offset: 0x42941c
0x42941c    retf 0xf09

------> offset: 0x42959a
0x42959a    cmp cl, [rdi]
0x42959c    retf 0xf0a

------> offset: 0x42959c
0x42959c    retf 0xf0a

------> offset: 0x42971a
0x42971a    cmp cl, [rdi]
0x42971c    retf 0xf0b

------> offset: 0x42971c
0x42971c    retf 0xf0b

------> offset: 0x42987a
0x42987a    ret 0x6d0

------> offset: 0x42989a
0x42989a    cmp cl, [rdi]
0x42989c    retf 0xf0c

------> offset: 0x42989c
0x42989c    retf 0xf0c

------> offset: 0x429a1a
0x429a1a    cmp cl, [rdi]
0x429a1c    retf 0xf0d

------> offset: 0x429a1c
0x429a1c    retf 0xf0d

------> offset: 0x429b9a
0x429b9a    cmp cl, [rdi]
0x429b9c    retf 0xf0e

------> offset: 0x429b9c
0x429b9c    retf 0xf0e

------> offset: 0x429c37
0x429c37    retf 0x6

------> offset: 0x429d1a
0x429d1a    cmp cl, [rdi]
0x429d1c    retf 0xf0f

------> offset: 0x429d1c
0x429d1c    retf 0xf0f

------> offset: 0x429dff
0x429dff    xchg cl, al
0x429e01    add [rax], al
0x429e03    add [rax+0x39], cl
0x429e06    retf 0x377

------> offset: 0x429e00
0x429e00    rol dword [rax], 0x0
0x429e03    add [rax+0x39], cl
0x429e06    retf 0x377

------> offset: 0x429e01
0x429e01    add [rax], al
0x429e03    add [rax+0x39], cl
0x429e06    retf 0x377

------> offset: 0x429e03
0x429e03    add [rax+0x39], cl
0x429e06    retf 0x377

------> offset: 0x429e06
0x429e06    retf 0x377

------> offset: 0x429e08
0x429e08    add ecx, [rax-0x77]
0x429e0b    ror dword [rax+0x29], 0x1
0x429e0e    retf 0x8148

------> offset: 0x429e0b
0x429e0b    ror dword [rax+0x29], 0x1
0x429e0e    retf 0x8148

------> offset: 0x429e0e
0x429e0e    retf 0x8148

------> offset: 0x429e25
0x429e25    retf 0x676

------> offset: 0x429e2a
0x429e2a    retf 0x3148

------> offset: 0x429eb7
0x429eb7    xchg esi, eax
0x429eb8    add [rax], al
0x429eba    add [rax-0x7f], cl
0x429ebd    ret 0x80

------> offset: 0x429eb8
0x429eb8    add [rax], al
0x429eba    add [rax-0x7f], cl
0x429ebd    ret 0x80

------> offset: 0x429ebe
0x429ebe    add byte [rax], 0x0
0x429ec1    add [rax+0x1], cl
0x429ec4    retf 0x8148

------> offset: 0x429ebf
0x429ebf    add [rax], al
0x429ec1    add [rax+0x1], cl
0x429ec4    retf 0x8148

------> offset: 0x429ec1
0x429ec1    add [rax+0x1], cl
0x429ec4    retf 0x8148

------> offset: 0x429f4c
0x429f4c    cmp dword [rbx-0x1], -0x1
0x429f50    dec dword [rax-0x7f]
0x429f53    ret 0x80

------> offset: 0x429f50
0x429f50    dec dword [rax-0x7f]
0x429f53    ret 0x80

------> offset: 0x429f9e
0x429f9e    retf 0x8b48

------> offset: 0x42a06b
0x42a06b    nop
0x42a06c    add [rax], al
0x42a06e    add [rax-0x7f], cl
0x42a071    ret 0x80

------> offset: 0x42a178
0x42a178    movdqu [rdi-0x10], xmm8
0x42a180    ret

------> offset: 0x42a17a
0x42a17a    movdqu [rdi-0x10], xmm0
0x42a180    ret

------> offset: 0x42a17c
0x42a17c    movq [rdi-0x10], mm0
0x42a180    ret

------> offset: 0x42a17d
0x42a17d    jg 0x42a1c6
0x42a17f    ret

------> offset: 0x42a1e7
0x42a1e7    movq [rdi-0x1f], mm0
0x42a1eb    movdqu [rdi-0x10], xmm1
0x42a1f0    ret

------> offset: 0x42a1e8
0x42a1e8    jg 0x42a231
0x42a1ea    loopz 0x42a1df
0x42a1ec    movq [rdi-0x10], mm1
0x42a1f0    ret

------> offset: 0x42a1e9
0x42a1e9    loopz 0x42a1df
0x42a1ec    movq [rdi-0x10], mm1
0x42a1f0    ret

------> offset: 0x42a1eb
0x42a1eb    movdqu [rdi-0x10], xmm1
0x42a1f0    ret

------> offset: 0x42a1ec
0x42a1ec    movq [rdi-0x10], mm1
0x42a1f0    ret

------> offset: 0x42a1ed
0x42a1ed    jg 0x42a23e
0x42a1ef    ret

------> offset: 0x42a207
0x42a207    clc
0x42a208    mov [rdi-0xf], rdx
0x42a20c    mov [rdi-0x8], rcx
0x42a210    ret

------> offset: 0x42a208
0x42a208    mov [rdi-0xf], rdx
0x42a20c    mov [rdi-0x8], rcx
0x42a210    ret

------> offset: 0x42a209
0x42a209    mov [rdi-0xf], edx
0x42a20c    mov [rdi-0x8], rcx
0x42a210    ret

------> offset: 0x42a20a
0x42a20a    push rdi
0x42a20b    int1
0x42a20c    mov [rdi-0x8], rcx
0x42a210    ret

------> offset: 0x42a20b
0x42a20b    int1
0x42a20c    mov [rdi-0x8], rcx
0x42a210    ret

------> offset: 0x42a25f
0x42a25f    jg 0x42a2a8
0x42a261    ret 0xff2

------> offset: 0x42a260
0x42a260    ret 0xff2

------> offset: 0x42a277
0x42a277    movq [rdi-0x1e], mm0
0x42a27b    movdqu [rdi-0x10], xmm1
0x42a280    ret

------> offset: 0x42a278
0x42a278    jg 0x42a2c1
0x42a27a    loop 0x42a26f
0x42a27c    movq [rdi-0x10], mm1
0x42a280    ret

------> offset: 0x42a279
0x42a279    loop 0x42a26f
0x42a27c    movq [rdi-0x10], mm1
0x42a280    ret

------> offset: 0x42a27d
0x42a27d    jg 0x42a2ce
0x42a27f    ret

------> offset: 0x42a297
0x42a297    clc
0x42a298    mov [rdi-0xe], rdx
0x42a29c    mov [rdi-0x8], rcx
0x42a2a0    ret

------> offset: 0x42a298
0x42a298    mov [rdi-0xe], rdx
0x42a29c    mov [rdi-0x8], rcx
0x42a2a0    ret

------> offset: 0x42a299
0x42a299    mov [rdi-0xe], edx
0x42a29c    mov [rdi-0x8], rcx
0x42a2a0    ret

------> offset: 0x42a29a
0x42a29a    push rdi
0x42a29b    mov [rdi-0x8], rcx
0x42a2a0    ret

------> offset: 0x42a2ef
0x42a2ef    jg 0x42a338
0x42a2f1    ret

------> offset: 0x42a307
0x42a307    movq [rdi-0x1d], mm0
0x42a30b    movdqu [rdi-0x10], xmm1
0x42a310    ret

------> offset: 0x42a308
0x42a308    jg 0x42a351
0x42a30a    jrcxz 0x42a2ff
0x42a30c    movq [rdi-0x10], mm1
0x42a310    ret

------> offset: 0x42a309
0x42a309    jrcxz 0x42a2ff
0x42a30c    movq [rdi-0x10], mm1
0x42a310    ret

------> offset: 0x42a30d
0x42a30d    jg 0x42a35e
0x42a30f    ret

------> offset: 0x42a327
0x42a327    clc
0x42a328    mov [rdi-0xd], rdx
0x42a32c    mov [rdi-0x8], rcx
0x42a330    ret

------> offset: 0x42a328
0x42a328    mov [rdi-0xd], rdx
0x42a32c    mov [rdi-0x8], rcx
0x42a330    ret

------> offset: 0x42a329
0x42a329    mov [rdi-0xd], edx
0x42a32c    mov [rdi-0x8], rcx
0x42a330    ret

------> offset: 0x42a397
0x42a397    movq [rdi-0x1c], mm0
0x42a39b    movdqu [rdi-0x10], xmm1
0x42a3a0    ret

------> offset: 0x42a398
0x42a398    jg 0x42a3e1
0x42a39a    in al, 0xf3
0x42a39c    movq [rdi-0x10], mm1
0x42a3a0    ret

------> offset: 0x42a399
0x42a399    in al, 0xf3
0x42a39c    movq [rdi-0x10], mm1
0x42a3a0    ret

------> offset: 0x42a39d
0x42a39d    jg 0x42a3ee
0x42a39f    ret

------> offset: 0x42a3b5
0x42a3b5    cld
0x42a3b7    mov [rdi-0xc], rdx
0x42a3bb    mov [rdi-0x4], ecx
0x42a3be    ret

------> offset: 0x42a3b7
0x42a3b7    mov [rdi-0xc], rdx
0x42a3bb    mov [rdi-0x4], ecx
0x42a3be    ret

------> offset: 0x42a3b8
0x42a3b8    mov [rdi-0xc], edx
0x42a3bb    mov [rdi-0x4], ecx
0x42a3be    ret

------> offset: 0x42a3b9
0x42a3b9    push rdi
0x42a3ba    hlt
0x42a3bb    mov [rdi-0x4], ecx
0x42a3be    ret

------> offset: 0x42a3ba
0x42a3ba    hlt
0x42a3bb    mov [rdi-0x4], ecx
0x42a3be    ret

------> offset: 0x42a417
0x42a417    movq [rdi-0x1b], mm0
0x42a41b    movdqu [rdi-0x10], xmm1
0x42a420    ret

------> offset: 0x42a418
0x42a418    jg 0x42a461
0x42a41a    in eax, 0xf3
0x42a41c    movq [rdi-0x10], mm1
0x42a420    ret

------> offset: 0x42a419
0x42a419    in eax, 0xf3
0x42a41c    movq [rdi-0x10], mm1
0x42a420    ret

------> offset: 0x42a41d
0x42a41d    jg 0x42a46e
0x42a41f    ret

------> offset: 0x42a435
0x42a435    cld
0x42a437    mov [rdi-0xb], rdx
0x42a43b    mov [rdi-0x4], ecx
0x42a43e    ret

------> offset: 0x42a437
0x42a437    mov [rdi-0xb], rdx
0x42a43b    mov [rdi-0x4], ecx
0x42a43e    ret

------> offset: 0x42a438
0x42a438    mov [rdi-0xb], edx
0x42a43b    mov [rdi-0x4], ecx
0x42a43e    ret

------> offset: 0x42a439
0x42a439    push rdi
0x42a43a    cmc
0x42a43b    mov [rdi-0x4], ecx
0x42a43e    ret

------> offset: 0x42a43a
0x42a43a    cmc
0x42a43b    mov [rdi-0x4], ecx
0x42a43e    ret

------> offset: 0x42a497
0x42a497    movq [rdi-0x1a], mm0
0x42a49b    movdqu [rdi-0x10], xmm1
0x42a4a0    ret

------> offset: 0x42a498
0x42a498    jg 0x42a4e1
0x42a49a    out 0xf3, al
0x42a49c    movq [rdi-0x10], mm1
0x42a4a0    ret

------> offset: 0x42a499
0x42a499    out 0xf3, al
0x42a49c    movq [rdi-0x10], mm1
0x42a4a0    ret

------> offset: 0x42a49d
0x42a49d    jg 0x42a4ee
0x42a49f    ret

------> offset: 0x42a4b5
0x42a4b5    cld
0x42a4b7    mov [rdi-0xa], rdx
0x42a4bb    mov [rdi-0x4], ecx
0x42a4be    ret

------> offset: 0x42a4b7
0x42a4b7    mov [rdi-0xa], rdx
0x42a4bb    mov [rdi-0x4], ecx
0x42a4be    ret

------> offset: 0x42a4b8
0x42a4b8    mov [rdi-0xa], edx
0x42a4bb    mov [rdi-0x4], ecx
0x42a4be    ret

------> offset: 0x42a517
0x42a517    movq [rdi-0x19], mm0
0x42a51b    movdqu [rdi-0x10], xmm1
0x42a520    ret

------> offset: 0x42a518
0x42a518    jg 0x42a561
0x42a51a    out 0xf3, eax
0x42a51c    movq [rdi-0x10], mm1
0x42a520    ret

------> offset: 0x42a519
0x42a519    out 0xf3, eax
0x42a51c    movq [rdi-0x10], mm1
0x42a520    ret

------> offset: 0x42a51d
0x42a51d    jg 0x42a56e
0x42a51f    ret

------> offset: 0x42a535
0x42a535    cld
0x42a537    mov [rdi-0x9], rdx
0x42a53b    mov [rdi-0x4], ecx
0x42a53e    ret

------> offset: 0x42a537
0x42a537    mov [rdi-0x9], rdx
0x42a53b    mov [rdi-0x4], ecx
0x42a53e    ret

------> offset: 0x42a538
0x42a538    mov [rdi-0x9], edx
0x42a53b    mov [rdi-0x4], ecx
0x42a53e    ret

------> offset: 0x42a597
0x42a597    movq [rdi-0x18], mm0
0x42a59b    movdqu [rdi-0x10], xmm1
0x42a5a0    ret

------> offset: 0x42a598
0x42a598    jg 0x42a5e1
0x42a59a    call 0x4fc1b592
0x42a59f    ret

------> offset: 0x42a599
0x42a599    call 0x4fc1b592
0x42a59f    ret

------> offset: 0x42a59d
0x42a59d    jg 0x42a5ee
0x42a59f    ret

------> offset: 0x42a617
0x42a617    movq [rdi-0x17], mm0
0x42a61b    movdqu [rdi-0x10], xmm1
0x42a620    ret

------> offset: 0x42a618
0x42a618    jg 0x42a661
0x42a61a    jmp 0x4fc1b612
0x42a61f    ret

------> offset: 0x42a619
0x42a619    jmp 0x4fc1b612
0x42a61f    ret

------> offset: 0x42a61d
0x42a61d    jg 0x42a66e
0x42a61f    ret

------> offset: 0x42a675
0x42a675    jg 0x42a6be
0x42a677    mov edx, 0x46f00ff2
0x42a67c    retf 0xff3

------> offset: 0x42a676
0x42a676    mov r10d, 0x46f00ff2
0x42a67c    retf 0xff3

------> offset: 0x42a677
0x42a677    mov edx, 0x46f00ff2
0x42a67c    retf 0xff3

------> offset: 0x42a67f
0x42a67f    jg 0x42a6c8
0x42a681    retf 0xff2

------> offset: 0x42a680
0x42a680    retf 0xff2

------> offset: 0x42a697
0x42a697    movq [rdi-0x16], mm0
0x42a69b    movdqu [rdi-0x10], xmm1
0x42a6a0    ret

------> offset: 0x42a69d
0x42a69d    jg 0x42a6ee
0x42a69f    ret

------> offset: 0x42a6f5
0x42a6f5    jg 0x42a73e
0x42a6f7    mov ebx, 0x46f00ff2
0x42a6fc    retf

------> offset: 0x42a6f6
0x42a6f6    mov r11d, 0x46f00ff2
0x42a6fc    retf

------> offset: 0x42a6f7
0x42a6f7    mov ebx, 0x46f00ff2
0x42a6fc    retf

------> offset: 0x42a6ff
0x42a6ff    jg 0x42a748
0x42a701    retf

------> offset: 0x42a717
0x42a717    movq [rdi-0x15], mm0
0x42a71b    movdqu [rdi-0x10], xmm1
0x42a720    ret

------> offset: 0x42a718
0x42a718    jg 0x42a761
0x42a71a    jmp 0x42a70f
0x42a71c    movq [rdi-0x10], mm1
0x42a720    ret

------> offset: 0x42a719
0x42a719    jmp 0x42a70f
0x42a71c    movq [rdi-0x10], mm1
0x42a720    ret

------> offset: 0x42a71d
0x42a71d    jg 0x42a76e
0x42a71f    ret

------> offset: 0x42a797
0x42a797    movq [rdi-0x14], mm0
0x42a79b    movdqu [rdi-0x10], xmm1
0x42a7a0    ret

------> offset: 0x42a798
0x42a798    jg 0x42a7e1
0x42a79a    in al, dx
0x42a79b    movdqu [rdi-0x10], xmm1
0x42a7a0    ret

------> offset: 0x42a799
0x42a799    in al, dx
0x42a79b    movdqu [rdi-0x10], xmm1
0x42a7a0    ret

------> offset: 0x42a79d
0x42a79d    jg 0x42a7ee
0x42a79f    ret

------> offset: 0x42a7ad
0x42a7ad    add [rax], al
0x42a7af    add [rbx+0x5789fc56], cl
0x42a7b5    cld
0x42a7b6    ret

------> offset: 0x42a7ae
0x42a7ae    add [rax], al
0x42a7b0    mov edx, [rsi-0x4]
0x42a7b3    mov [rdi-0x4], edx
0x42a7b6    ret

------> offset: 0x42a7af
0x42a7af    add [rbx+0x5789fc56], cl
0x42a7b5    cld
0x42a7b6    ret

------> offset: 0x42a817
0x42a817    movq [rdi-0x13], mm0
0x42a81b    movdqu [rdi-0x10], xmm1
0x42a820    ret

------> offset: 0x42a818
0x42a818    jg 0x42a861
0x42a81a    in eax, dx
0x42a81b    movdqu [rdi-0x10], xmm1
0x42a820    ret

------> offset: 0x42a819
0x42a819    in eax, dx
0x42a81b    movdqu [rdi-0x10], xmm1
0x42a820    ret

------> offset: 0x42a81d
0x42a81d    jg 0x42a86e
0x42a81f    ret

------> offset: 0x42a8a7
0x42a8a7    movq [rdi-0x12], mm0
0x42a8ab    movdqu [rdi-0x10], xmm1
0x42a8b0    ret

------> offset: 0x42a8a8
0x42a8a8    jg 0x42a8f1
0x42a8aa    out dx, al
0x42a8ab    movdqu [rdi-0x10], xmm1
0x42a8b0    ret

------> offset: 0x42a8a9
0x42a8a9    out dx, al
0x42a8ab    movdqu [rdi-0x10], xmm1
0x42a8b0    ret

------> offset: 0x42a8ad
0x42a8ad    jg 0x42a8fe
0x42a8af    ret

------> offset: 0x42a8c0
0x42a8c0    movzx edx, word [rsi-0x2]
0x42a8c4    mov [rdi-0x2], dx
0x42a8c8    ret

------> offset: 0x42a905
0x42a905    jg 0x42a94e
0x42a907    mov edi, 0x46f00ff2
0x42a90c    iret

------> offset: 0x42a906
0x42a906    mov r15d, 0x46f00ff2
0x42a90c    iret

------> offset: 0x42a907
0x42a907    mov edi, 0x46f00ff2
0x42a90c    iret

------> offset: 0x42a90f
0x42a90f    jg 0x42a958
0x42a911    iret

------> offset: 0x42a927
0x42a927    movq [rdi-0x11], mm0
0x42a92b    movdqu [rdi-0x10], xmm1
0x42a930    ret

------> offset: 0x42a928
0x42a928    jg 0x42a971
0x42a92a    out dx, eax
0x42a92b    movdqu [rdi-0x10], xmm1
0x42a930    ret

------> offset: 0x42a929
0x42a929    out dx, eax
0x42a92b    movdqu [rdi-0x10], xmm1
0x42a930    ret

------> offset: 0x42a92d
0x42a92d    jg 0x42a97e
0x42a92f    ret

------> offset: 0x42a93e
0x42a93e    add [rax], al
0x42a940    movzx edx, byte [rsi-0x1]
0x42a944    mov [rdi-0x1], dl
0x42a947    ret

------> offset: 0x42a940
0x42a940    movzx edx, byte [rsi-0x1]
0x42a944    mov [rdi-0x1], dl
0x42a947    ret

------> offset: 0x42a996
0x42a996    lddqu xmm0, [rsi]
0x42a99a    movdqu [rdi], xmm0
0x42a99e    ret

------> offset: 0x42a99a
0x42a99a    movdqu [rdi], xmm0
0x42a99e    ret

------> offset: 0x42a99b
0x42a99b    movq [rdi], mm0
0x42a99e    ret

------> offset: 0x42a99c
0x42a99c    jg 0x42a9a5
0x42a99e    ret

------> offset: 0x42a9ef
0x42a9ef    movdqu [rdi+0xf], xmm0
0x42a9f4    movdqu [rdi], xmm1
0x42a9f8    ret

------> offset: 0x42a9f0
0x42a9f0    movq [rdi+0xf], mm0
0x42a9f4    movdqu [rdi], xmm1
0x42a9f8    ret

------> offset: 0x42a9f1
0x42a9f1    jg 0x42aa3a
0x42a9f3    psllq mm1, [rdi]
0x42a9f6    jg 0x42aa07
0x42a9f8    ret

------> offset: 0x42a9f2
0x42a9f2    psllq mm1, [r15]
0x42a9f6    jg 0x42aa07
0x42a9f8    ret

------> offset: 0x42a9f3
0x42a9f3    psllq mm1, [rdi]
0x42a9f6    jg 0x42aa07
0x42a9f8    ret

------> offset: 0x42a9f4
0x42a9f4    movdqu [rdi], xmm1
0x42a9f8    ret

------> offset: 0x42a9f5
0x42a9f5    movq [rdi], mm1
0x42a9f8    ret

------> offset: 0x42a9f6
0x42a9f6    jg 0x42aa07
0x42a9f8    ret

------> offset: 0x42aa05
0x42aa05    mov ecx, [rsi]
0x42aa07    mov [rdi+0x7], rdx
0x42aa0b    mov [rdi], rcx
0x42aa0e    ret

------> offset: 0x42aa07
0x42aa07    mov [rdi+0x7], rdx
0x42aa0b    mov [rdi], rcx
0x42aa0e    ret

------> offset: 0x42aa08
0x42aa08    mov [rdi+0x7], edx
0x42aa0b    mov [rdi], rcx
0x42aa0e    ret

------> offset: 0x42aa5f
0x42aa5f    movdqu [rdi+0xe], xmm0
0x42aa64    movdqu [rdi], xmm1
0x42aa68    ret

------> offset: 0x42aa60
0x42aa60    movq [rdi+0xe], mm0
0x42aa64    movdqu [rdi], xmm1
0x42aa68    ret

------> offset: 0x42aa66
0x42aa66    jg 0x42aa77
0x42aa68    ret

------> offset: 0x42aa75
0x42aa75    mov ecx, [rsi]
0x42aa77    mov [rdi+0x6], rdx
0x42aa7b    mov [rdi], rcx
0x42aa7e    ret

------> offset: 0x42aa77
0x42aa77    mov [rdi+0x6], rdx
0x42aa7b    mov [rdi], rcx
0x42aa7e    ret

------> offset: 0x42aa78
0x42aa78    mov [rdi+0x6], edx
0x42aa7b    mov [rdi], rcx
0x42aa7e    ret

------> offset: 0x42aacf
0x42aacf    movdqu [rdi+0xd], xmm0
0x42aad4    movdqu [rdi], xmm1
0x42aad8    ret

------> offset: 0x42aad0
0x42aad0    movq [rdi+0xd], mm0
0x42aad4    movdqu [rdi], xmm1
0x42aad8    ret

------> offset: 0x42aad1
0x42aad1    jg 0x42ab1a
0x42aad3    or eax, 0xf7f0ff3
0x42aad8    ret

------> offset: 0x42aad2
0x42aad2    or eax, 0xf7f0ff3
0x42aad8    ret

------> offset: 0x42aad6
0x42aad6    jg 0x42aae7
0x42aad8    ret

------> offset: 0x42aae5
0x42aae5    mov ecx, [rsi]
0x42aae7    mov [rdi+0x5], rdx
0x42aaeb    mov [rdi], rcx
0x42aaee    ret

------> offset: 0x42aae7
0x42aae7    mov [rdi+0x5], rdx
0x42aaeb    mov [rdi], rcx
0x42aaee    ret

------> offset: 0x42aae8
0x42aae8    mov [rdi+0x5], edx
0x42aaeb    mov [rdi], rcx
0x42aaee    ret

------> offset: 0x42ab3f
0x42ab3f    movdqu [rdi+0xc], xmm0
0x42ab44    movdqu [rdi], xmm1
0x42ab48    ret

------> offset: 0x42ab40
0x42ab40    movq [rdi+0xc], mm0
0x42ab44    movdqu [rdi], xmm1
0x42ab48    ret

------> offset: 0x42ab41
0x42ab41    jg 0x42ab8a
0x42ab43    or al, 0xf3
0x42ab45    movq [rdi], mm1
0x42ab48    ret

------> offset: 0x42ab42
0x42ab42    or al, 0xf3
0x42ab45    movq [rdi], mm1
0x42ab48    ret

------> offset: 0x42ab46
0x42ab46    jg 0x42ab57
0x42ab48    ret

------> offset: 0x42ab55
0x42ab55    mov ecx, [rsi]
0x42ab57    mov [rdi+0x4], rdx
0x42ab5b    mov [rdi], rcx
0x42ab5e    ret

------> offset: 0x42ab57
0x42ab57    mov [rdi+0x4], rdx
0x42ab5b    mov [rdi], rcx
0x42ab5e    ret

------> offset: 0x42ab58
0x42ab58    mov [rdi+0x4], edx
0x42ab5b    mov [rdi], rcx
0x42ab5e    ret

------> offset: 0x42ab59
0x42ab59    push rdi
0x42ab5a    add al, 0x48
0x42ab5c    mov [rdi], ecx
0x42ab5e    ret

------> offset: 0x42ab5a
0x42ab5a    add al, 0x48
0x42ab5c    mov [rdi], ecx
0x42ab5e    ret

------> offset: 0x42abaf
0x42abaf    movdqu [rdi+0xb], xmm0
0x42abb4    movdqu [rdi], xmm1
0x42abb8    ret

------> offset: 0x42abb0
0x42abb0    movq [rdi+0xb], mm0
0x42abb4    movdqu [rdi], xmm1
0x42abb8    ret

------> offset: 0x42abb1
0x42abb1    jg 0x42abfa
0x42abb3    or esi, ebx
0x42abb5    movq [rdi], mm1
0x42abb8    ret

------> offset: 0x42abb2
0x42abb2    or r14d, r11d
0x42abb5    movq [rdi], mm1
0x42abb8    ret

------> offset: 0x42abb3
0x42abb3    or esi, ebx
0x42abb5    movq [rdi], mm1
0x42abb8    ret

------> offset: 0x42abb6
0x42abb6    jg 0x42abc7
0x42abb8    ret

------> offset: 0x42abc5
0x42abc5    mov ecx, [rsi]
0x42abc7    mov [rdi+0x3], rdx
0x42abcb    mov [rdi], rcx
0x42abce    ret

------> offset: 0x42abc7
0x42abc7    mov [rdi+0x3], rdx
0x42abcb    mov [rdi], rcx
0x42abce    ret

------> offset: 0x42abc8
0x42abc8    mov [rdi+0x3], edx
0x42abcb    mov [rdi], rcx
0x42abce    ret

------> offset: 0x42ac1f
0x42ac1f    movdqu [rdi+0xa], xmm0
0x42ac24    movdqu [rdi], xmm1
0x42ac28    ret

------> offset: 0x42ac20
0x42ac20    movq [rdi+0xa], mm0
0x42ac24    movdqu [rdi], xmm1
0x42ac28    ret

------> offset: 0x42ac21
0x42ac21    jg 0x42ac6a
0x42ac23    or dh, bl
0x42ac25    movq [rdi], mm1
0x42ac28    ret

------> offset: 0x42ac22
0x42ac22    or r14b, r11b
0x42ac25    movq [rdi], mm1
0x42ac28    ret

------> offset: 0x42ac23
0x42ac23    or dh, bl
0x42ac25    movq [rdi], mm1
0x42ac28    ret

------> offset: 0x42ac26
0x42ac26    jg 0x42ac37
0x42ac28    ret

------> offset: 0x42ac35
0x42ac35    mov ecx, [rsi]
0x42ac37    mov [rdi+0x2], rdx
0x42ac3b    mov [rdi], rcx
0x42ac3e    ret

------> offset: 0x42ac37
0x42ac37    mov [rdi+0x2], rdx
0x42ac3b    mov [rdi], rcx
0x42ac3e    ret

------> offset: 0x42ac38
0x42ac38    mov [rdi+0x2], edx
0x42ac3b    mov [rdi], rcx
0x42ac3e    ret

------> offset: 0x42ac8f
0x42ac8f    movdqu [rdi+0x9], xmm0
0x42ac94    movdqu [rdi], xmm1
0x42ac98    ret

------> offset: 0x42ac90
0x42ac90    movq [rdi+0x9], mm0
0x42ac94    movdqu [rdi], xmm1
0x42ac98    ret

------> offset: 0x42ac91
0x42ac91    jg 0x42acda
0x42ac93    or ebx, esi
0x42ac95    movq [rdi], mm1
0x42ac98    ret

------> offset: 0x42ac92
0x42ac92    or r11d, r14d
0x42ac95    movq [rdi], mm1
0x42ac98    ret

------> offset: 0x42ac93
0x42ac93    or ebx, esi
0x42ac95    movq [rdi], mm1
0x42ac98    ret

------> offset: 0x42ac96
0x42ac96    jg 0x42aca7
0x42ac98    ret

------> offset: 0x42aca5
0x42aca5    mov ecx, [rsi]
0x42aca7    mov [rdi+0x1], rdx
0x42acab    mov [rdi], rcx
0x42acae    ret

------> offset: 0x42aca7
0x42aca7    mov [rdi+0x1], rdx
0x42acab    mov [rdi], rcx
0x42acae    ret

------> offset: 0x42aca8
0x42aca8    mov [rdi+0x1], edx
0x42acab    mov [rdi], rcx
0x42acae    ret

------> offset: 0x42acff
0x42acff    movdqu [rdi+0x8], xmm0
0x42ad04    movdqu [rdi], xmm1
0x42ad08    ret

------> offset: 0x42ad00
0x42ad00    movq [rdi+0x8], mm0
0x42ad04    movdqu [rdi], xmm1
0x42ad08    ret

------> offset: 0x42ad01
0x42ad01    jg 0x42ad4a
0x42ad03    or bl, dh
0x42ad05    movq [rdi], mm1
0x42ad08    ret

------> offset: 0x42ad02
0x42ad02    or r11b, r14b
0x42ad05    movq [rdi], mm1
0x42ad08    ret

------> offset: 0x42ad03
0x42ad03    or bl, dh
0x42ad05    movq [rdi], mm1
0x42ad08    ret

------> offset: 0x42ad06
0x42ad06    jg 0x42ad17
0x42ad08    ret

------> offset: 0x42ad0e
0x42ad0e    add [rax], al
0x42ad10    mov rdx, [rsi]
0x42ad13    mov [rdi], rdx
0x42ad16    ret

------> offset: 0x42ad10
0x42ad10    mov rdx, [rsi]
0x42ad13    mov [rdi], rdx
0x42ad16    ret

------> offset: 0x42ad11
0x42ad11    mov edx, [rsi]
0x42ad13    mov [rdi], rdx
0x42ad16    ret

------> offset: 0x42ad6f
0x42ad6f    movdqu [rdi+0x7], xmm0
0x42ad74    movdqu [rdi], xmm1
0x42ad78    ret

------> offset: 0x42ad70
0x42ad70    movq [rdi+0x7], mm0
0x42ad74    movdqu [rdi], xmm1
0x42ad78    ret

------> offset: 0x42ad76
0x42ad76    jg 0x42ad87
0x42ad78    ret

------> offset: 0x42ad81
0x42ad81    push rsi
0x42ad82    add ecx, [rbx+0x357890e]
0x42ad88    mov [rdi], ecx
0x42ad8a    ret

------> offset: 0x42ad82
0x42ad82    add ecx, [rbx+0x357890e]
0x42ad88    mov [rdi], ecx
0x42ad8a    ret

------> offset: 0x42ad83
0x42ad83    mov ecx, [rsi]
0x42ad85    mov [rdi+0x3], edx
0x42ad88    mov [rdi], ecx
0x42ad8a    ret

------> offset: 0x42ad85
0x42ad85    mov [rdi+0x3], edx
0x42ad88    mov [rdi], ecx
0x42ad8a    ret

------> offset: 0x42addf
0x42addf    movdqu [rdi+0x6], xmm0
0x42ade4    movdqu [rdi], xmm1
0x42ade8    ret

------> offset: 0x42ade0
0x42ade0    movq [rdi+0x6], mm0
0x42ade4    movdqu [rdi], xmm1
0x42ade8    ret

------> offset: 0x42ade6
0x42ade6    jg 0x42adf7
0x42ade8    ret

------> offset: 0x42adf1
0x42adf1    push rsi
0x42adf2    add cl, [rbx+0x257890e]
0x42adf8    mov [rdi], ecx
0x42adfa    ret

------> offset: 0x42adf2
0x42adf2    add cl, [rbx+0x257890e]
0x42adf8    mov [rdi], ecx
0x42adfa    ret

------> offset: 0x42adf3
0x42adf3    mov ecx, [rsi]
0x42adf5    mov [rdi+0x2], edx
0x42adf8    mov [rdi], ecx
0x42adfa    ret

------> offset: 0x42adf5
0x42adf5    mov [rdi+0x2], edx
0x42adf8    mov [rdi], ecx
0x42adfa    ret

------> offset: 0x42ae4f
0x42ae4f    movdqu [rdi+0x5], xmm0
0x42ae54    movdqu [rdi], xmm1
0x42ae58    ret

------> offset: 0x42ae50
0x42ae50    movq [rdi+0x5], mm0
0x42ae54    movdqu [rdi], xmm1
0x42ae58    ret

------> offset: 0x42ae51
0x42ae51    jg 0x42ae9a
0x42ae53    add eax, 0xf7f0ff3
0x42ae58    ret

------> offset: 0x42ae52
0x42ae52    add eax, 0xf7f0ff3
0x42ae58    ret

------> offset: 0x42ae56
0x42ae56    jg 0x42ae67
0x42ae58    ret

------> offset: 0x42ae61
0x42ae61    push rsi
0x42ae62    add [rbx+0x157890e], ecx
0x42ae68    mov [rdi], ecx
0x42ae6a    ret

------> offset: 0x42ae62
0x42ae62    add [rbx+0x157890e], ecx
0x42ae68    mov [rdi], ecx
0x42ae6a    ret

------> offset: 0x42ae63
0x42ae63    mov ecx, [rsi]
0x42ae65    mov [rdi+0x1], edx
0x42ae68    mov [rdi], ecx
0x42ae6a    ret

------> offset: 0x42ae65
0x42ae65    mov [rdi+0x1], edx
0x42ae68    mov [rdi], ecx
0x42ae6a    ret

------> offset: 0x42aebf
0x42aebf    movdqu [rdi+0x4], xmm0
0x42aec4    movdqu [rdi], xmm1
0x42aec8    ret

------> offset: 0x42aec0
0x42aec0    movq [rdi+0x4], mm0
0x42aec4    movdqu [rdi], xmm1
0x42aec8    ret

------> offset: 0x42aec1
0x42aec1    jg 0x42af0a
0x42aec3    add al, 0xf3
0x42aec5    movq [rdi], mm1
0x42aec8    ret

------> offset: 0x42aec2
0x42aec2    add al, 0xf3
0x42aec5    movq [rdi], mm1
0x42aec8    ret

------> offset: 0x42aec6
0x42aec6    jg 0x42aed7
0x42aec8    ret

------> offset: 0x42aecb
0x42aecb    add byte [rax], 0x0
0x42aece    add [rax], al
0x42aed0    mov edx, [rsi]
0x42aed2    mov [rdi], edx
0x42aed4    ret

------> offset: 0x42aecc
0x42aecc    add [rax], al
0x42aece    add [rax], al
0x42aed0    mov edx, [rsi]
0x42aed2    mov [rdi], edx
0x42aed4    ret

------> offset: 0x42aece
0x42aece    add [rax], al
0x42aed0    mov edx, [rsi]
0x42aed2    mov [rdi], edx
0x42aed4    ret

------> offset: 0x42aed0
0x42aed0    mov edx, [rsi]
0x42aed2    mov [rdi], edx
0x42aed4    ret

------> offset: 0x42af2f
0x42af2f    movdqu [rdi+0x3], xmm0
0x42af34    movdqu [rdi], xmm1
0x42af38    ret

------> offset: 0x42af30
0x42af30    movq [rdi+0x3], mm0
0x42af34    movdqu [rdi], xmm1
0x42af38    ret

------> offset: 0x42af31
0x42af31    jg 0x42af7a
0x42af33    add esi, ebx
0x42af35    movq [rdi], mm1
0x42af38    ret

------> offset: 0x42af32
0x42af32    add r14d, r11d
0x42af35    movq [rdi], mm1
0x42af38    ret

------> offset: 0x42af33
0x42af33    add esi, ebx
0x42af35    movq [rdi], mm1
0x42af38    ret

------> offset: 0x42af36
0x42af36    jg 0x42af47
0x42af38    ret

------> offset: 0x42af45
0x42af45    mov ecx, [rsi]
0x42af47    mov [rdi+0x1], dx
0x42af4b    mov [rdi], cx
0x42af4e    ret

------> offset: 0x42af47
0x42af47    mov [rdi+0x1], dx
0x42af4b    mov [rdi], cx
0x42af4e    ret

------> offset: 0x42af48
0x42af48    mov [rdi+0x1], edx
0x42af4b    mov [rdi], cx
0x42af4e    ret

------> offset: 0x42af4b
0x42af4b    mov [rdi], cx
0x42af4e    ret

------> offset: 0x42af9f
0x42af9f    movdqu [rdi+0x2], xmm0
0x42afa4    movdqu [rdi], xmm1
0x42afa8    ret

------> offset: 0x42afa0
0x42afa0    movq [rdi+0x2], mm0
0x42afa4    movdqu [rdi], xmm1
0x42afa8    ret

------> offset: 0x42afa1
0x42afa1    jg 0x42afea
0x42afa3    add dh, bl
0x42afa5    movq [rdi], mm1
0x42afa8    ret

------> offset: 0x42afa2
0x42afa2    add r14b, r11b
0x42afa5    movq [rdi], mm1
0x42afa8    ret

------> offset: 0x42afa3
0x42afa3    add dh, bl
0x42afa5    movq [rdi], mm1
0x42afa8    ret

------> offset: 0x42afa6
0x42afa6    jg 0x42afb7
0x42afa8    ret

------> offset: 0x42afad
0x42afad    add [rax], al
0x42afaf    add [rdi], cl
0x42afb1    mov bh, 0x16
0x42afb3    mov [rdi], dx
0x42afb6    ret

------> offset: 0x42afae
0x42afae    add [rax], al
0x42afb0    movzx edx, word [rsi]
0x42afb3    mov [rdi], dx
0x42afb6    ret

------> offset: 0x42afaf
0x42afaf    add [rdi], cl
0x42afb1    mov bh, 0x16
0x42afb3    mov [rdi], dx
0x42afb6    ret

------> offset: 0x42afb0
0x42afb0    movzx edx, word [rsi]
0x42afb3    mov [rdi], dx
0x42afb6    ret

------> offset: 0x42afb1
0x42afb1    mov bh, 0x16
0x42afb3    mov [rdi], dx
0x42afb6    ret

------> offset: 0x42afb3
0x42afb3    mov [rdi], dx
0x42afb6    ret

------> offset: 0x42b00f
0x42b00f    movdqu [rdi+0x1], xmm0
0x42b014    movdqu [rdi], xmm1
0x42b018    ret

------> offset: 0x42b010
0x42b010    movq [rdi+0x1], mm0
0x42b014    movdqu [rdi], xmm1
0x42b018    ret

------> offset: 0x42b011
0x42b011    jg 0x42b05a
0x42b013    add ebx, esi
0x42b015    movq [rdi], mm1
0x42b018    ret

------> offset: 0x42b012
0x42b012    add r11d, r14d
0x42b015    movq [rdi], mm1
0x42b018    ret

------> offset: 0x42b013
0x42b013    add ebx, esi
0x42b015    movq [rdi], mm1
0x42b018    ret

------> offset: 0x42b016
0x42b016    jg 0x42b027
0x42b018    ret

------> offset: 0x42b01c
0x42b01c    add [rax], al
0x42b01e    add [rax], al
0x42b020    movzx edx, byte [rsi]
0x42b023    mov [rdi], dl
0x42b025    ret

------> offset: 0x42b01d
0x42b01d    add [rax], al
0x42b01f    add [rdi], cl
0x42b021    mov dh, 0x16
0x42b023    mov [rdi], dl
0x42b025    ret

------> offset: 0x42b01e
0x42b01e    add [rax], al
0x42b020    movzx edx, byte [rsi]
0x42b023    mov [rdi], dl
0x42b025    ret

------> offset: 0x42b01f
0x42b01f    add [rdi], cl
0x42b021    mov dh, 0x16
0x42b023    mov [rdi], dl
0x42b025    ret

------> offset: 0x42b020
0x42b020    movzx edx, byte [rsi]
0x42b023    mov [rdi], dl
0x42b025    ret

------> offset: 0x42b021
0x42b021    mov dh, 0x16
0x42b023    mov [rdi], dl
0x42b025    ret

------> offset: 0x42b023
0x42b023    mov [rdi], dl
0x42b025    ret

------> offset: 0x42b4a8
0x42b4a8    adc [rax], al
0x42b4aa    add cl, ch
0x42b4ac    retf 0xfffe

------> offset: 0x42d393
0x42d393    adc [rax-0x7b], cl
0x42d396    ror byte [rdi], 0x85
0x42d399    ret

------> offset: 0x42d396
0x42d396    ror byte [rdi], 0x85
0x42d399    ret

------> offset: 0x42d3d0
0x42d3d0    ret 0xc748

------> offset: 0x42d404
0x42d404    fsub dword [rsi+0xf]
0x42d407    xlat byte [rbx+al]
0x42d408    ret

------> offset: 0x42e58e
0x42e58e    enter 0x8d48, 0x49
0x42e592    dec byte [rax+0x29]
0x42e595    ret 0x280f

------> offset: 0x42e591
0x42e591    dec byte [r8+0x29]
0x42e595    ret 0x280f

------> offset: 0x42e592
0x42e592    dec byte [rax+0x29]
0x42e595    ret 0x280f

------> offset: 0x42e6ce
0x42e6ce    enter 0x8d48, 0x49
0x42e6d2    dec dword [rax+0x29]
0x42e6d5    ret 0x280f

------> offset: 0x42e6d1
0x42e6d1    dec qword [r8+0x29]
0x42e6d5    ret 0x280f

------> offset: 0x42e6d2
0x42e6d2    dec dword [rax+0x29]
0x42e6d5    ret 0x280f

------> offset: 0x42e7b0
0x42e7b0    mov rax, [rcx]
0x42e7b3    mov [rdx], rax
0x42e7b6    mov rax, rdi
0x42e7b9    ret

------> offset: 0x42e7b1
0x42e7b1    mov eax, [rcx]
0x42e7b3    mov [rdx], rax
0x42e7b6    mov rax, rdi
0x42e7b9    ret

------> offset: 0x42e7b2
0x42e7b2    add [rax-0x77], ecx
0x42e7b5    add cl, [rax-0x77]
0x42e7b8    clc
0x42e7b9    ret

------> offset: 0x42e7b3
0x42e7b3    mov [rdx], rax
0x42e7b6    mov rax, rdi
0x42e7b9    ret

------> offset: 0x42e7b4
0x42e7b4    mov [rdx], eax
0x42e7b6    mov rax, rdi
0x42e7b9    ret

------> offset: 0x42e7b5
0x42e7b5    add cl, [rax-0x77]
0x42e7b8    clc
0x42e7b9    ret

------> offset: 0x42e808
0x42e808    or [r8-0x77], cl
0x42e80c    or [rax-0x77], cl
0x42e810    clc
0x42e811    ret

------> offset: 0x42e809
0x42e809    or [rax-0x77], cl
0x42e80c    or [rax-0x77], cl
0x42e810    clc
0x42e811    ret

------> offset: 0x42e80a
0x42e80a    mov [rdx+0x8], rax
0x42e80e    mov rax, rdi
0x42e811    ret

------> offset: 0x42e80b
0x42e80b    mov [rdx+0x8], eax
0x42e80e    mov rax, rdi
0x42e811    ret

------> offset: 0x42e80c
0x42e80c    or [rax-0x77], cl
0x42e810    clc
0x42e811    ret

------> offset: 0x42e81e
0x42e81e    add [rax], al
0x42e820    mov al, [rcx]
0x42e822    mov [rdx], al
0x42e824    mov rax, rdi
0x42e827    ret

------> offset: 0x42e81f
0x42e81f    add [rdx+0x48028801], cl
0x42e825    mov eax, edi
0x42e827    ret

------> offset: 0x42e820
0x42e820    mov al, [rcx]
0x42e822    mov [rdx], al
0x42e824    mov rax, rdi
0x42e827    ret

------> offset: 0x42e821
0x42e821    add [rax-0x776b7fe], ecx
0x42e827    ret

------> offset: 0x42e822
0x42e822    mov [rdx], al
0x42e824    mov rax, rdi
0x42e827    ret

------> offset: 0x42e830
0x42e830    mov ax, [rcx]
0x42e833    mov [rdx], ax
0x42e836    mov rax, rdi
0x42e839    ret

------> offset: 0x42e831
0x42e831    mov eax, [rcx]
0x42e833    mov [rdx], ax
0x42e836    mov rax, rdi
0x42e839    ret

------> offset: 0x42e832
0x42e832    add [rsi-0x77], esp
0x42e835    add cl, [rax-0x77]
0x42e838    clc
0x42e839    ret

------> offset: 0x42e833
0x42e833    mov [rdx], ax
0x42e836    mov rax, rdi
0x42e839    ret

------> offset: 0x42e846
0x42e846    mov al, [rcx+0x2]
0x42e849    mov [rdx+0x2], al
0x42e84c    mov rax, rdi
0x42e84f    ret

------> offset: 0x42e847
0x42e847    add cl, [r8-0x76b7fdbe]
0x42e84e    clc
0x42e84f    ret

------> offset: 0x42e848
0x42e848    add cl, [rax-0x76b7fdbe]
0x42e84e    clc
0x42e84f    ret

------> offset: 0x42e849
0x42e849    mov [rdx+0x2], al
0x42e84c    mov rax, rdi
0x42e84f    ret

------> offset: 0x42e850
0x42e850    mov eax, [rcx]
0x42e852    mov [rdx], eax
0x42e854    mov rax, rdi
0x42e857    ret

------> offset: 0x42e851
0x42e851    add [rcx-0x776b7fe], ecx
0x42e857    ret

------> offset: 0x42e864
0x42e864    mov al, [rcx+0x4]
0x42e867    mov [rdx+0x4], al
0x42e86a    mov rax, rdi
0x42e86d    ret

------> offset: 0x42e865
0x42e865    add al, 0x88
0x42e868    add al, 0x48
0x42e86b    mov eax, edi
0x42e86d    ret

------> offset: 0x42e867
0x42e867    mov [rdx+0x4], al
0x42e86a    mov rax, rdi
0x42e86d    ret

------> offset: 0x42e868
0x42e868    add al, 0x48
0x42e86b    mov eax, edi
0x42e86d    ret

------> offset: 0x42e876
0x42e876    add al, 0x66
0x42e879    mov [rdx+0x4], eax
0x42e87c    mov rax, rdi
0x42e87f    ret

------> offset: 0x42e878
0x42e878    mov [rdx+0x4], ax
0x42e87c    mov rax, rdi
0x42e87f    ret

------> offset: 0x42e879
0x42e879    mov [rdx+0x4], eax
0x42e87c    mov rax, rdi
0x42e87f    ret

------> offset: 0x42e884
0x42e884    mov eax, [rcx+0x3]
0x42e887    mov [rdx+0x3], eax
0x42e88a    mov rax, rdi
0x42e88d    ret

------> offset: 0x42e885
0x42e885    add ecx, [r9-0x76b7fcbe]
0x42e88c    clc
0x42e88d    ret

------> offset: 0x42e886
0x42e886    add ecx, [rcx-0x76b7fcbe]
0x42e88c    clc
0x42e88d    ret

------> offset: 0x42e887
0x42e887    mov [rdx+0x3], eax
0x42e88a    mov rax, rdi
0x42e88d    ret

------> offset: 0x42e888
0x42e888    add ecx, [rax-0x77]
0x42e88c    clc
0x42e88d    ret

------> offset: 0x42e896
0x42e896    mov eax, [rcx+0x5]
0x42e899    mov [rdx+0x5], eax
0x42e89c    mov rax, rdi
0x42e89f    ret

------> offset: 0x42e897
0x42e897    add eax, 0x48054289
0x42e89d    mov eax, edi
0x42e89f    ret

------> offset: 0x42e899
0x42e899    mov [rdx+0x5], eax
0x42e89c    mov rax, rdi
0x42e89f    ret

------> offset: 0x42e8a6
0x42e8a6    mov eax, [rcx+0x6]
0x42e8a9    mov [rdx+0x6], eax
0x42e8ac    mov rax, rdi
0x42e8af    ret

------> offset: 0x42e8a9
0x42e8a9    mov [rdx+0x6], eax
0x42e8ac    mov rax, rdi
0x42e8af    ret

------> offset: 0x42e8b6
0x42e8b6    mov eax, [rcx+0x7]
0x42e8b9    mov [rdx+0x7], eax
0x42e8bc    mov rax, rdi
0x42e8bf    ret

------> offset: 0x42e8b9
0x42e8b9    mov [rdx+0x7], eax
0x42e8bc    mov rax, rdi
0x42e8bf    ret

------> offset: 0x42e8c6
0x42e8c6    mov eax, [rcx+0x8]
0x42e8c9    mov [rdx+0x8], eax
0x42e8cc    mov rax, rdi
0x42e8cf    ret

------> offset: 0x42e8c7
0x42e8c7    or [r9-0x76b7f7be], cl
0x42e8ce    clc
0x42e8cf    ret

------> offset: 0x42e8c8
0x42e8c8    or [rcx-0x76b7f7be], cl
0x42e8ce    clc
0x42e8cf    ret

------> offset: 0x42e8d8
0x42e8d8    add eax, 0x5428948
0x42e8de    mov rax, rdi
0x42e8e1    ret

------> offset: 0x42e8da
0x42e8da    mov [rdx+0x5], rax
0x42e8de    mov rax, rdi
0x42e8e1    ret

------> offset: 0x42e8fa
0x42e8fa    mov [rdx+0x6], rax
0x42e8fe    mov rax, rdi
0x42e901    ret

------> offset: 0x42e91a
0x42e91a    mov [rdx+0x7], rax
0x42e91e    mov rax, rdi
0x42e921    ret

------> offset: 0x42ff61
0x42ff61    mov eax, [rcx]
0x42ff63    mov [rdx], rax
0x42ff66    lea rax, [rdx+0x7]
0x42ff6a    ret

------> offset: 0x42ff63
0x42ff63    mov [rdx], rax
0x42ff66    lea rax, [rdx+0x7]
0x42ff6a    ret

------> offset: 0x42ff64
0x42ff64    mov [rdx], eax
0x42ff66    lea rax, [rdx+0x7]
0x42ff6a    ret

------> offset: 0x42ff66
0x42ff66    lea rax, [rdx+0x7]
0x42ff6a    ret

------> offset: 0x42ff67
0x42ff67    lea eax, [rdx+0x7]
0x42ff6a    ret

------> offset: 0x42ffba
0x42ffba    mov [rdx+0x8], rax
0x42ffbe    lea rax, [rdx+0xf]
0x42ffc2    ret

------> offset: 0x42ffbb
0x42ffbb    mov [rdx+0x8], eax
0x42ffbe    lea rax, [rdx+0xf]
0x42ffc2    ret

------> offset: 0x42ffbe
0x42ffbe    lea rax, [rdx+0xf]
0x42ffc2    ret

------> offset: 0x42ffbf
0x42ffbf    lea eax, [rdx+0xf]
0x42ffc2    ret

------> offset: 0x42ffce
0x42ffce    add [rax], al
0x42ffd0    mov al, [rcx]
0x42ffd2    mov [rdx], al
0x42ffd4    lea rax, [rdx]
0x42ffd7    ret

------> offset: 0x42ffcf
0x42ffcf    add [rdx+0x48028801], cl
0x42ffd5    lea eax, [rdx]
0x42ffd7    ret

------> offset: 0x42ffd0
0x42ffd0    mov al, [rcx]
0x42ffd2    mov [rdx], al
0x42ffd4    lea rax, [rdx]
0x42ffd7    ret

------> offset: 0x42ffd1
0x42ffd1    add [rax+0x28d4802], ecx
0x42ffd7    ret

------> offset: 0x42ffd2
0x42ffd2    mov [rdx], al
0x42ffd4    lea rax, [rdx]
0x42ffd7    ret

------> offset: 0x42ffd4
0x42ffd4    lea rax, [rdx]
0x42ffd7    ret

------> offset: 0x42ffd5
0x42ffd5    lea eax, [rdx]
0x42ffd7    ret

------> offset: 0x42ffe1
0x42ffe1    mov eax, [rcx]
0x42ffe3    mov [rdx], ax
0x42ffe6    lea rax, [rdx+0x1]
0x42ffea    ret

------> offset: 0x42ffe3
0x42ffe3    mov [rdx], ax
0x42ffe6    lea rax, [rdx+0x1]
0x42ffea    ret

------> offset: 0x42ffe4
0x42ffe4    mov [rdx], eax
0x42ffe6    lea rax, [rdx+0x1]
0x42ffea    ret

------> offset: 0x42ffe6
0x42ffe6    lea rax, [rdx+0x1]
0x42ffea    ret

------> offset: 0x42ffe7
0x42ffe7    lea eax, [rdx+0x1]
0x42ffea    ret

------> offset: 0x42fff9
0x42fff9    mov [rdx+0x2], al
0x42fffc    lea rax, [rdx+0x2]
0x430000    ret

------> offset: 0x42fffc
0x42fffc    lea rax, [rdx+0x2]
0x430000    ret

------> offset: 0x42fffd
0x42fffd    lea eax, [rdx+0x2]
0x430000    ret

------> offset: 0x43000f
0x43000f    add [rbx+0x48028901], cl
0x430015    lea eax, [rdx+0x3]
0x430018    ret

------> offset: 0x430010
0x430010    mov eax, [rcx]
0x430012    mov [rdx], eax
0x430014    lea rax, [rdx+0x3]
0x430018    ret

------> offset: 0x430012
0x430012    mov [rdx], eax
0x430014    lea rax, [rdx+0x3]
0x430018    ret

------> offset: 0x430014
0x430014    lea rax, [rdx+0x3]
0x430018    ret

------> offset: 0x430015
0x430015    lea eax, [rdx+0x3]
0x430018    ret

------> offset: 0x430025
0x430025    add al, 0x88
0x430028    add al, 0x48
0x43002b    lea eax, [rdx+0x4]
0x43002e    ret

------> offset: 0x430027
0x430027    mov [rdx+0x4], al
0x43002a    lea rax, [rdx+0x4]
0x43002e    ret

------> offset: 0x430028
0x430028    add al, 0x48
0x43002b    lea eax, [rdx+0x4]
0x43002e    ret

------> offset: 0x43002a
0x43002a    lea rax, [rdx+0x4]
0x43002e    ret

------> offset: 0x43002b
0x43002b    lea eax, [rdx+0x4]
0x43002e    ret

------> offset: 0x430037
0x430037    add al, 0x66
0x430039    mov [rdx+0x4], eax
0x43003c    lea rax, [rdx+0x5]
0x430040    ret

------> offset: 0x430038
0x430038    mov [rdx+0x4], ax
0x43003c    lea rax, [rdx+0x5]
0x430040    ret

------> offset: 0x430039
0x430039    mov [rdx+0x4], eax
0x43003c    lea rax, [rdx+0x5]
0x430040    ret

------> offset: 0x43003a
0x43003a    add al, 0x48
0x43003d    lea eax, [rdx+0x5]
0x430040    ret

------> offset: 0x43003c
0x43003c    lea rax, [rdx+0x5]
0x430040    ret

------> offset: 0x43003d
0x43003d    lea eax, [rdx+0x5]
0x430040    ret

------> offset: 0x430057
0x430057    mov [rdx+0x3], eax
0x43005a    lea rax, [rdx+0x6]
0x43005e    ret

------> offset: 0x43005a
0x43005a    lea rax, [rdx+0x6]
0x43005e    ret

------> offset: 0x43005b
0x43005b    lea eax, [rdx+0x6]
0x43005e    ret

------> offset: 0x430067
0x430067    add eax, 0x48054289
0x43006d    lea eax, [rdx+0x8]
0x430070    ret

------> offset: 0x430069
0x430069    mov [rdx+0x5], eax
0x43006c    lea rax, [rdx+0x8]
0x430070    ret

------> offset: 0x43006a
0x43006a    add eax, 0x8428d48
0x430070    ret

------> offset: 0x43006c
0x43006c    lea rax, [rdx+0x8]
0x430070    ret

------> offset: 0x43006d
0x43006d    lea eax, [rdx+0x8]
0x430070    ret

------> offset: 0x430089
0x430089    mov [rdx+0x6], eax
0x43008c    lea rax, [rdx+0x9]
0x430090    ret

------> offset: 0x43008c
0x43008c    lea rax, [rdx+0x9]
0x430090    ret

------> offset: 0x43008d
0x43008d    lea eax, [rdx+0x9]
0x430090    ret

------> offset: 0x4300a9
0x4300a9    mov [rdx+0x7], eax
0x4300ac    lea rax, [rdx+0xa]
0x4300b0    ret

------> offset: 0x4300ac
0x4300ac    lea rax, [rdx+0xa]
0x4300b0    ret

------> offset: 0x4300ad
0x4300ad    lea eax, [rdx+0xa]
0x4300b0    ret

------> offset: 0x4300c9
0x4300c9    mov [rdx+0x8], eax
0x4300cc    lea rax, [rdx+0xb]
0x4300d0    ret

------> offset: 0x4300cc
0x4300cc    lea rax, [rdx+0xb]
0x4300d0    ret

------> offset: 0x4300cd
0x4300cd    lea eax, [rdx+0xb]
0x4300d0    ret

------> offset: 0x4300e9
0x4300e9    add eax, 0x5428948
0x4300ee    lea rax, [rdx+0xc]
0x4300f2    ret

------> offset: 0x4300ea
0x4300ea    mov [rdx+0x5], rax
0x4300ee    lea rax, [rdx+0xc]
0x4300f2    ret

------> offset: 0x4300eb
0x4300eb    mov [rdx+0x5], eax
0x4300ee    lea rax, [rdx+0xc]
0x4300f2    ret

------> offset: 0x4300ec
0x4300ec    add eax, 0xc428d48
0x4300f2    ret

------> offset: 0x4300ee
0x4300ee    lea rax, [rdx+0xc]
0x4300f2    ret

------> offset: 0x4300ef
0x4300ef    lea eax, [rdx+0xc]
0x4300f2    ret

------> offset: 0x43010a
0x43010a    mov [rdx+0x6], rax
0x43010e    lea rax, [rdx+0xd]
0x430112    ret

------> offset: 0x43010b
0x43010b    mov [rdx+0x6], eax
0x43010e    lea rax, [rdx+0xd]
0x430112    ret

------> offset: 0x43010e
0x43010e    lea rax, [rdx+0xd]
0x430112    ret

------> offset: 0x43010f
0x43010f    lea eax, [rdx+0xd]
0x430112    ret

------> offset: 0x43012a
0x43012a    mov [rdx+0x7], rax
0x43012e    lea rax, [rdx+0xe]
0x430132    ret

------> offset: 0x43012b
0x43012b    mov [rdx+0x7], eax
0x43012e    lea rax, [rdx+0xe]
0x430132    ret

------> offset: 0x43012e
0x43012e    lea rax, [rdx+0xe]
0x430132    ret

------> offset: 0x43012f
0x43012f    lea eax, [rdx+0xe]
0x430132    ret

------> offset: 0x43019b
0x43019b    add [rax], al
0x43019d    add [rax], al
0x43019f    add [rax+0x29], cl
0x4301a2    iret

------> offset: 0x43019d
0x43019d    add [rax], al
0x43019f    add [rax+0x29], cl
0x4301a2    iret

------> offset: 0x43019f
0x43019f    add [rax+0x29], cl
0x4301a2    iret

------> offset: 0x43037c
0x43037c    imul esp, [rsi+0xf], 0x74
0x430380    ret 0xff3

------> offset: 0x43039f
0x43039f    add [rax+0x1], cl
0x4303a2    iret

------> offset: 0x43040a
0x43040a    adc [rax+0x29], cl
0x43040d    retf 0x8d4c

------> offset: 0x43040d
0x43040d    retf 0x8d4c

------> offset: 0x43049a
0x43049a    test [rax], al
0x43049c    add [rax], al
0x43049e    add [rax], al
0x4304a0    mov [rdi], dh
0x4304a2    ret

------> offset: 0x43049c
0x43049c    add [rax], al
0x43049e    add [rax], al
0x4304a0    mov [rdi], dh
0x4304a2    ret

------> offset: 0x43049e
0x43049e    add [rax], al
0x4304a0    mov [rdi], dh
0x4304a2    ret

------> offset: 0x4304a0
0x4304a0    mov [rdi], dh
0x4304a2    ret

------> offset: 0x4304ae
0x4304ae    add [rax], al
0x4304b0    mov dx, [rsi]
0x4304b3    mov [rdi], dx
0x4304b6    ret

------> offset: 0x4304b0
0x4304b0    mov dx, [rsi]
0x4304b3    mov [rdi], dx
0x4304b6    ret

------> offset: 0x4304b1
0x4304b1    mov edx, [rsi]
0x4304b3    mov [rdi], dx
0x4304b6    ret

------> offset: 0x4304c0
0x4304c0    mov cx, [rsi]
0x4304c3    mov [rdi], cx
0x4304c6    mov [rdi+0x2], dh
0x4304c9    ret

------> offset: 0x4304c1
0x4304c1    mov ecx, [rsi]
0x4304c3    mov [rdi], cx
0x4304c6    mov [rdi+0x2], dh
0x4304c9    ret

------> offset: 0x4304c3
0x4304c3    mov [rdi], cx
0x4304c6    mov [rdi+0x2], dh
0x4304c9    ret

------> offset: 0x4304c4
0x4304c4    mov [rdi], ecx
0x4304c6    mov [rdi+0x2], dh
0x4304c9    ret

------> offset: 0x4304c6
0x4304c6    mov [rdi+0x2], dh
0x4304c9    ret

------> offset: 0x4304c7
0x4304c7    ja 0x4304cb
0x4304c9    ret

------> offset: 0x4304cb
0x4304cb    nop dword [rax+rax+0x0]
0x4304d0    mov edx, [rsi]
0x4304d2    mov [rdi], edx
0x4304d4    ret

------> offset: 0x4304cd
0x4304cd    add [rax], r8b
0x4304d0    mov edx, [rsi]
0x4304d2    mov [rdi], edx
0x4304d4    ret

------> offset: 0x4304de
0x4304de    add [rax], al
0x4304e0    mov ecx, [rsi]
0x4304e2    mov [rdi+0x4], dh
0x4304e5    mov [rdi], ecx
0x4304e7    ret

------> offset: 0x4304df
0x4304df    add [rbx+0x477880e], cl
0x4304e5    mov [rdi], ecx
0x4304e7    ret

------> offset: 0x4304e0
0x4304e0    mov ecx, [rsi]
0x4304e2    mov [rdi+0x4], dh
0x4304e5    mov [rdi], ecx
0x4304e7    ret

------> offset: 0x4304e2
0x4304e2    mov [rdi+0x4], dh
0x4304e5    mov [rdi], ecx
0x4304e7    ret

------> offset: 0x4304e3
0x4304e3    ja 0x4304e9
0x4304e5    mov [rdi], ecx
0x4304e7    ret

------> offset: 0x4304f3
0x4304f3    mov edx, [rsi+0x4]
0x4304f6    mov [rdi], ecx
0x4304f8    mov [rdi+0x4], dx
0x4304fc    ret

------> offset: 0x4304f6
0x4304f6    mov [rdi], ecx
0x4304f8    mov [rdi+0x4], dx
0x4304fc    ret

------> offset: 0x4304f8
0x4304f8    mov [rdi+0x4], dx
0x4304fc    ret

------> offset: 0x4304f9
0x4304f9    mov [rdi+0x4], edx
0x4304fc    ret

------> offset: 0x430502
0x430502    mov edx, [rsi+0x3]
0x430505    mov [rdi], ecx
0x430507    mov [rdi+0x3], edx
0x43050a    ret

------> offset: 0x430503
0x430503    push rsi
0x430504    add ecx, [rcx+0x357890f]
0x43050a    ret

------> offset: 0x430504
0x430504    add ecx, [rcx+0x357890f]
0x43050a    ret

------> offset: 0x430505
0x430505    mov [rdi], ecx
0x430507    mov [rdi+0x3], edx
0x43050a    ret

------> offset: 0x430507
0x430507    mov [rdi+0x3], edx
0x43050a    ret

------> offset: 0x43050d
0x43050d    add [rax], r8b
0x430510    mov rdx, [rsi]
0x430513    mov [rdi], rdx
0x430516    ret

------> offset: 0x430520
0x430520    mov rcx, [rsi]
0x430523    mov [rdi+0x8], dh
0x430526    mov [rdi], rcx
0x430529    ret

------> offset: 0x430521
0x430521    mov ecx, [rsi]
0x430523    mov [rdi+0x8], dh
0x430526    mov [rdi], rcx
0x430529    ret

------> offset: 0x430523
0x430523    mov [rdi+0x8], dh
0x430526    mov [rdi], rcx
0x430529    ret

------> offset: 0x430524
0x430524    ja 0x43052e
0x430526    mov [rdi], rcx
0x430529    ret

------> offset: 0x430537
0x430537    mov [rdi], rcx
0x43053a    mov [rdi+0x8], dx
0x43053e    ret

------> offset: 0x430538
0x430538    mov [rdi], ecx
0x43053a    mov [rdi+0x8], dx
0x43053e    ret

------> offset: 0x43053a
0x43053a    mov [rdi+0x8], dx
0x43053e    ret

------> offset: 0x43053b
0x43053b    mov [rdi+0x8], edx
0x43053e    ret

------> offset: 0x430543
0x430543    mov edx, [rsi+0x7]
0x430546    mov [rdi], rcx
0x430549    mov [rdi+0x7], edx
0x43054c    ret

------> offset: 0x430546
0x430546    mov [rdi], rcx
0x430549    mov [rdi+0x7], edx
0x43054c    ret

------> offset: 0x430547
0x430547    mov [rdi], ecx
0x430549    mov [rdi+0x7], edx
0x43054c    ret

------> offset: 0x430549
0x430549    mov [rdi+0x7], edx
0x43054c    ret

------> offset: 0x430553
0x430553    mov edx, [rsi+0x8]
0x430556    mov [rdi], rcx
0x430559    mov [rdi+0x8], edx
0x43055c    ret

------> offset: 0x430556
0x430556    mov [rdi], rcx
0x430559    mov [rdi+0x8], edx
0x43055c    ret

------> offset: 0x430557
0x430557    mov [rdi], ecx
0x430559    mov [rdi+0x8], edx
0x43055c    ret

------> offset: 0x430565
0x430565    push rsi
0x430566    add eax, 0x480f8948
0x43056b    mov [rdi+0x5], edx
0x43056e    ret

------> offset: 0x430566
0x430566    add eax, 0x480f8948
0x43056b    mov [rdi+0x5], edx
0x43056e    ret

------> offset: 0x430567
0x430567    mov [rdi], rcx
0x43056a    mov [rdi+0x5], rdx
0x43056e    ret

------> offset: 0x430568
0x430568    mov [rdi], ecx
0x43056a    mov [rdi+0x5], rdx
0x43056e    ret

------> offset: 0x43056a
0x43056a    mov [rdi+0x5], rdx
0x43056e    ret

------> offset: 0x43056b
0x43056b    mov [rdi+0x5], edx
0x43056e    ret

------> offset: 0x430577
0x430577    mov [rdi], rcx
0x43057a    mov [rdi+0x6], rdx
0x43057e    ret

------> offset: 0x430578
0x430578    mov [rdi], ecx
0x43057a    mov [rdi+0x6], rdx
0x43057e    ret

------> offset: 0x43057a
0x43057a    mov [rdi+0x6], rdx
0x43057e    ret

------> offset: 0x43057b
0x43057b    mov [rdi+0x6], edx
0x43057e    ret

------> offset: 0x430587
0x430587    mov [rdi], rcx
0x43058a    mov [rdi+0x7], rdx
0x43058e    ret

------> offset: 0x430588
0x430588    mov [rdi], ecx
0x43058a    mov [rdi+0x7], rdx
0x43058e    ret

------> offset: 0x43058a
0x43058a    mov [rdi+0x7], rdx
0x43058e    ret

------> offset: 0x43058f
0x43058f    nop
0x430590    movdqu xmm0, [rsi]
0x430594    movdqu [rdi], xmm0
0x430598    ret

------> offset: 0x430590
0x430590    movdqu xmm0, [rsi]
0x430594    movdqu [rdi], xmm0
0x430598    ret

------> offset: 0x430591
0x430591    movq mm0, [rsi]
0x430594    movdqu [rdi], xmm0
0x430598    ret

------> offset: 0x430596
0x430596    jg 0x43059f
0x430598    ret

------> offset: 0x4305a4
0x4305a4    movdqu [rdi], xmm0
0x4305a8    mov [rdi+0x10], dh
0x4305ab    ret

------> offset: 0x4305a5
0x4305a5    movq [rdi], mm0
0x4305a8    mov [rdi+0x10], dh
0x4305ab    ret

------> offset: 0x4305a6
0x4305a6    jg 0x4305af
0x4305a8    mov [rdi+0x10], dh
0x4305ab    ret

------> offset: 0x4305a8
0x4305a8    mov [rdi+0x10], dh
0x4305ab    ret

------> offset: 0x4305a9
0x4305a9    ja 0x4305bb
0x4305ab    ret

------> offset: 0x4305b7
0x4305b7    adc bl, dh
0x4305b9    movq [rdi], mm0
0x4305bc    mov [rdi+0x10], cx
0x4305c0    ret

------> offset: 0x4305b8
0x4305b8    movdqu [rdi], xmm0
0x4305bc    mov [rdi+0x10], cx
0x4305c0    ret

------> offset: 0x4305b9
0x4305b9    movq [rdi], mm0
0x4305bc    mov [rdi+0x10], cx
0x4305c0    ret

------> offset: 0x4305ba
0x4305ba    jg 0x4305c3
0x4305bc    mov [rdi+0x10], cx
0x4305c0    ret

------> offset: 0x4305bc
0x4305bc    mov [rdi+0x10], cx
0x4305c0    ret

------> offset: 0x4305bd
0x4305bd    mov [rdi+0x10], ecx
0x4305c0    ret

------> offset: 0x4305e5
0x4305e5    adc bl, r14b
0x4305e8    movq [rdi], mm0
0x4305eb    mov [rdi+0x10], ecx
0x4305ee    ret

------> offset: 0x4305e6
0x4305e6    adc bl, dh
0x4305e8    movq [rdi], mm0
0x4305eb    mov [rdi+0x10], ecx
0x4305ee    ret

------> offset: 0x4305e7
0x4305e7    movdqu [rdi], xmm0
0x4305eb    mov [rdi+0x10], ecx
0x4305ee    ret

------> offset: 0x4305e8
0x4305e8    movq [rdi], mm0
0x4305eb    mov [rdi+0x10], ecx
0x4305ee    ret

------> offset: 0x4305e9
0x4305e9    jg 0x4305f2
0x4305eb    mov [rdi+0x10], ecx
0x4305ee    ret

------> offset: 0x4305f8
0x4305f8    movq [rdi], mm0
0x4305fb    mov [rdi+0x10], ecx
0x4305fe    mov [rdi+0x14], dh
0x430601    ret

------> offset: 0x4305f9
0x4305f9    jg 0x430602
0x4305fb    mov [rdi+0x10], ecx
0x4305fe    mov [rdi+0x14], dh
0x430601    ret

------> offset: 0x4305fb
0x4305fb    mov [rdi+0x10], ecx
0x4305fe    mov [rdi+0x14], dh
0x430601    ret

------> offset: 0x4305fe
0x4305fe    mov [rdi+0x14], dh
0x430601    ret

------> offset: 0x4305ff
0x4305ff    ja 0x430615
0x430601    ret

------> offset: 0x430618
0x430618    movdqu [rdi], xmm0
0x43061c    mov [rdi+0xe], rcx
0x430620    ret

------> offset: 0x430619
0x430619    movq [rdi], mm0
0x43061c    mov [rdi+0xe], rcx
0x430620    ret

------> offset: 0x43061a
0x43061a    jg 0x430623
0x43061c    mov [rdi+0xe], rcx
0x430620    ret

------> offset: 0x43061c
0x43061c    mov [rdi+0xe], rcx
0x430620    ret

------> offset: 0x43061d
0x43061d    mov [rdi+0xe], ecx
0x430620    ret

------> offset: 0x430637
0x430637    psllq mm1, [rdi]
0x43063a    jg 0x430643
0x43063c    mov [rdi+0xf], rcx
0x430640    ret

------> offset: 0x430638
0x430638    movdqu [rdi], xmm0
0x43063c    mov [rdi+0xf], rcx
0x430640    ret

------> offset: 0x430639
0x430639    movq [rdi], mm0
0x43063c    mov [rdi+0xf], rcx
0x430640    ret

------> offset: 0x43063a
0x43063a    jg 0x430643
0x43063c    mov [rdi+0xf], rcx
0x430640    ret

------> offset: 0x43063c
0x43063c    mov [rdi+0xf], rcx
0x430640    ret

------> offset: 0x43063d
0x43063d    mov [rdi+0xf], ecx
0x430640    ret

------> offset: 0x430657
0x430657    adc bl, dh
0x430659    movq [rdi], mm0
0x43065c    mov [rdi+0x10], rcx
0x430660    ret

------> offset: 0x430658
0x430658    movdqu [rdi], xmm0
0x43065c    mov [rdi+0x10], rcx
0x430660    ret

------> offset: 0x430659
0x430659    movq [rdi], mm0
0x43065c    mov [rdi+0x10], rcx
0x430660    ret

------> offset: 0x43065a
0x43065a    jg 0x430663
0x43065c    mov [rdi+0x10], rcx
0x430660    ret

------> offset: 0x43065c
0x43065c    mov [rdi+0x10], rcx
0x430660    ret

------> offset: 0x43067a
0x43067a    jg 0x430683
0x43067c    mov [rdi+0x10], rcx
0x430680    mov [rdi+0x18], dh
0x430683    ret

------> offset: 0x43067c
0x43067c    mov [rdi+0x10], rcx
0x430680    mov [rdi+0x18], dh
0x430683    ret

------> offset: 0x43067d
0x43067d    mov [rdi+0x10], ecx
0x430680    mov [rdi+0x18], dh
0x430683    ret

------> offset: 0x430680
0x430680    mov [rdi+0x18], dh
0x430683    ret

------> offset: 0x430681
0x430681    ja 0x43069b
0x430683    ret

------> offset: 0x4306a0
0x4306a0    mov [rdi+0x10], rdx
0x4306a4    mov [rdi+0x18], cx
0x4306a8    ret

------> offset: 0x4306a1
0x4306a1    mov [rdi+0x10], edx
0x4306a4    mov [rdi+0x18], cx
0x4306a8    ret

------> offset: 0x4306a4
0x4306a4    mov [rdi+0x18], cx
0x4306a8    ret

------> offset: 0x4306a5
0x4306a5    mov [rdi+0x18], ecx
0x4306a8    ret

------> offset: 0x4306bd
0x4306bd    jg 0x4306c6
0x4306bf    mov [rdi+0x10], rdx
0x4306c3    mov [rdi+0x17], ecx
0x4306c6    ret

------> offset: 0x4306bf
0x4306bf    mov [rdi+0x10], rdx
0x4306c3    mov [rdi+0x17], ecx
0x4306c6    ret

------> offset: 0x4306c0
0x4306c0    mov [rdi+0x10], edx
0x4306c3    mov [rdi+0x17], ecx
0x4306c6    ret

------> offset: 0x4306c3
0x4306c3    mov [rdi+0x17], ecx
0x4306c6    ret

------> offset: 0x4306dd
0x4306dd    jg 0x4306e6
0x4306df    mov [rdi+0x10], rdx
0x4306e3    mov [rdi+0x18], ecx
0x4306e6    ret

------> offset: 0x4306df
0x4306df    mov [rdi+0x10], rdx
0x4306e3    mov [rdi+0x18], ecx
0x4306e6    ret

------> offset: 0x4306e0
0x4306e0    mov [rdi+0x10], edx
0x4306e3    mov [rdi+0x18], ecx
0x4306e6    ret

------> offset: 0x4306f9
0x4306f9    movdqu [rdi], xmm0
0x4306fd    movdqu [rdi+0xd], xmm2
0x430702    ret

------> offset: 0x4306fa
0x4306fa    movq [rdi], mm0
0x4306fd    movdqu [rdi+0xd], xmm2
0x430702    ret

------> offset: 0x4306fb
0x4306fb    jg 0x430704
0x4306fd    movdqu [rdi+0xd], xmm2
0x430702    ret

------> offset: 0x4306fd
0x4306fd    movdqu [rdi+0xd], xmm2
0x430702    ret

------> offset: 0x4306fe
0x4306fe    movq [rdi+0xd], mm2
0x430702    ret

------> offset: 0x430719
0x430719    movdqu [rdi], xmm0
0x43071d    movdqu [rdi+0xe], xmm2
0x430722    ret

------> offset: 0x43071a
0x43071a    movq [rdi], mm0
0x43071d    movdqu [rdi+0xe], xmm2
0x430722    ret

------> offset: 0x43071b
0x43071b    jg 0x430724
0x43071d    movdqu [rdi+0xe], xmm2
0x430722    ret

------> offset: 0x43071d
0x43071d    movdqu [rdi+0xe], xmm2
0x430722    ret

------> offset: 0x43071e
0x43071e    movq [rdi+0xe], mm2
0x430722    ret

------> offset: 0x430739
0x430739    movdqu [rdi], xmm0
0x43073d    movdqu [rdi+0xf], xmm2
0x430742    ret

------> offset: 0x43073a
0x43073a    movq [rdi], mm0
0x43073d    movdqu [rdi+0xf], xmm2
0x430742    ret

------> offset: 0x43073b
0x43073b    jg 0x430744
0x43073d    movdqu [rdi+0xf], xmm2
0x430742    ret

------> offset: 0x43073d
0x43073d    movdqu [rdi+0xf], xmm2
0x430742    ret

------> offset: 0x43073e
0x43073e    movq [rdi+0xf], mm2
0x430742    ret

------> offset: 0x430759
0x430759    movdqu [rdi], xmm0
0x43075d    movdqu [rdi+0x10], xmm2
0x430762    ret

------> offset: 0x43075a
0x43075a    movq [rdi], mm0
0x43075d    movdqu [rdi+0x10], xmm2
0x430762    ret

------> offset: 0x43075b
0x43075b    jg 0x430764
0x43075d    movdqu [rdi+0x10], xmm2
0x430762    ret

------> offset: 0x43075d
0x43075d    movdqu [rdi+0x10], xmm2
0x430762    ret

------> offset: 0x43075e
0x43075e    movq [rdi+0x10], mm2
0x430762    ret

------> offset: 0x4307bf
0x4307bf    cmovs ebp, [rcx]
0x4307c2    iret

------> offset: 0x430abc
0x430abc    add [rax], al
0x430abe    add [rax], al
0x430ac0    mov [rdi], dh
0x430ac2    lea rax, [rdi]
0x430ac5    ret

------> offset: 0x430abd
0x430abd    add [rax], al
0x430abf    add [rax+0x78d4837], cl
0x430ac5    ret

------> offset: 0x430abe
0x430abe    add [rax], al
0x430ac0    mov [rdi], dh
0x430ac2    lea rax, [rdi]
0x430ac5    ret

------> offset: 0x430abf
0x430abf    add [rax+0x78d4837], cl
0x430ac5    ret

------> offset: 0x430ac0
0x430ac0    mov [rdi], dh
0x430ac2    lea rax, [rdi]
0x430ac5    ret

------> offset: 0x430ac2
0x430ac2    lea rax, [rdi]
0x430ac5    ret

------> offset: 0x430ac3
0x430ac3    lea eax, [rdi]
0x430ac5    ret

------> offset: 0x430ad1
0x430ad1    mov edx, [rsi]
0x430ad3    mov [rdi], dx
0x430ad6    lea rax, [rdi+0x1]
0x430ada    ret

------> offset: 0x430ad3
0x430ad3    mov [rdi], dx
0x430ad6    lea rax, [rdi+0x1]
0x430ada    ret

------> offset: 0x430ad4
0x430ad4    mov [rdi], edx
0x430ad6    lea rax, [rdi+0x1]
0x430ada    ret

------> offset: 0x430ad6
0x430ad6    lea rax, [rdi+0x1]
0x430ada    ret

------> offset: 0x430ad7
0x430ad7    lea eax, [rdi+0x1]
0x430ada    ret

------> offset: 0x430ae4
0x430ae4    mov [rdi], ecx
0x430ae6    mov [rdi+0x2], dh
0x430ae9    lea rax, [rdi+0x2]
0x430aed    ret

------> offset: 0x430ae6
0x430ae6    mov [rdi+0x2], dh
0x430ae9    lea rax, [rdi+0x2]
0x430aed    ret

------> offset: 0x430ae7
0x430ae7    ja 0x430aeb
0x430ae9    lea rax, [rdi+0x2]
0x430aed    ret

------> offset: 0x430ae9
0x430ae9    lea rax, [rdi+0x2]
0x430aed    ret

------> offset: 0x430aea
0x430aea    lea eax, [rdi+0x2]
0x430aed    ret

------> offset: 0x430aef
0x430aef    nop
0x430af0    mov edx, [rsi]
0x430af2    mov [rdi], edx
0x430af4    lea rax, [rdi+0x3]
0x430af8    ret

------> offset: 0x430af0
0x430af0    mov edx, [rsi]
0x430af2    mov [rdi], edx
0x430af4    lea rax, [rdi+0x3]
0x430af8    ret

------> offset: 0x430af2
0x430af2    mov [rdi], edx
0x430af4    lea rax, [rdi+0x3]
0x430af8    ret

------> offset: 0x430af4
0x430af4    lea rax, [rdi+0x3]
0x430af8    ret

------> offset: 0x430af5
0x430af5    lea eax, [rdi+0x3]
0x430af8    ret

------> offset: 0x430b02
0x430b02    mov [rdi+0x4], dh
0x430b05    mov [rdi], ecx
0x430b07    lea rax, [rdi+0x4]
0x430b0b    ret

------> offset: 0x430b03
0x430b03    ja 0x430b09
0x430b05    mov [rdi], ecx
0x430b07    lea rax, [rdi+0x4]
0x430b0b    ret

------> offset: 0x430b05
0x430b05    mov [rdi], ecx
0x430b07    lea rax, [rdi+0x4]
0x430b0b    ret

------> offset: 0x430b07
0x430b07    lea rax, [rdi+0x4]
0x430b0b    ret

------> offset: 0x430b08
0x430b08    lea eax, [rdi+0x4]
0x430b0b    ret

------> offset: 0x430b18
0x430b18    mov [rdi+0x4], dx
0x430b1c    lea rax, [rdi+0x5]
0x430b20    ret

------> offset: 0x430b19
0x430b19    mov [rdi+0x4], edx
0x430b1c    lea rax, [rdi+0x5]
0x430b20    ret

------> offset: 0x430b1a
0x430b1a    push rdi
0x430b1b    add al, 0x48
0x430b1d    lea eax, [rdi+0x5]
0x430b20    ret

------> offset: 0x430b1b
0x430b1b    add al, 0x48
0x430b1d    lea eax, [rdi+0x5]
0x430b20    ret

------> offset: 0x430b1c
0x430b1c    lea rax, [rdi+0x5]
0x430b20    ret

------> offset: 0x430b1d
0x430b1d    lea eax, [rdi+0x5]
0x430b20    ret

------> offset: 0x430b35
0x430b35    mov [rdi], ecx
0x430b37    mov [rdi+0x3], edx
0x430b3a    lea rax, [rdi+0x6]
0x430b3e    ret

------> offset: 0x430b37
0x430b37    mov [rdi+0x3], edx
0x430b3a    lea rax, [rdi+0x6]
0x430b3e    ret

------> offset: 0x430b3a
0x430b3a    lea rax, [rdi+0x6]
0x430b3e    ret

------> offset: 0x430b3b
0x430b3b    lea eax, [rdi+0x6]
0x430b3e    ret

------> offset: 0x430b41
0x430b41    mov edx, [rsi]
0x430b43    mov [rdi], rdx
0x430b46    lea rax, [rdi+0x7]
0x430b4a    ret

------> offset: 0x430b43
0x430b43    mov [rdi], rdx
0x430b46    lea rax, [rdi+0x7]
0x430b4a    ret

------> offset: 0x430b44
0x430b44    mov [rdi], edx
0x430b46    lea rax, [rdi+0x7]
0x430b4a    ret

------> offset: 0x430b46
0x430b46    lea rax, [rdi+0x7]
0x430b4a    ret

------> offset: 0x430b47
0x430b47    lea eax, [rdi+0x7]
0x430b4a    ret

------> offset: 0x430b54
0x430b54    ja 0x430b5e
0x430b56    mov [rdi], rcx
0x430b59    lea rax, [rdi+0x8]
0x430b5d    ret

------> offset: 0x430b56
0x430b56    mov [rdi], rcx
0x430b59    lea rax, [rdi+0x8]
0x430b5d    ret

------> offset: 0x430b57
0x430b57    mov [rdi], ecx
0x430b59    lea rax, [rdi+0x8]
0x430b5d    ret

------> offset: 0x430b59
0x430b59    lea rax, [rdi+0x8]
0x430b5d    ret

------> offset: 0x430b5a
0x430b5a    lea eax, [rdi+0x8]
0x430b5d    ret

------> offset: 0x430b6a
0x430b6a    mov [rdi+0x8], dx
0x430b6e    lea rax, [rdi+0x9]
0x430b72    ret

------> offset: 0x430b6b
0x430b6b    mov [rdi+0x8], edx
0x430b6e    lea rax, [rdi+0x9]
0x430b72    ret

------> offset: 0x430b6e
0x430b6e    lea rax, [rdi+0x9]
0x430b72    ret

------> offset: 0x430b6f
0x430b6f    lea eax, [rdi+0x9]
0x430b72    ret

------> offset: 0x430b87
0x430b87    mov [rdi], ecx
0x430b89    mov [rdi+0x7], edx
0x430b8c    lea rax, [rdi+0xa]
0x430b90    ret

------> offset: 0x430b89
0x430b89    mov [rdi+0x7], edx
0x430b8c    lea rax, [rdi+0xa]
0x430b90    ret

------> offset: 0x430b8c
0x430b8c    lea rax, [rdi+0xa]
0x430b90    ret

------> offset: 0x430b8d
0x430b8d    lea eax, [rdi+0xa]
0x430b90    ret

------> offset: 0x430ba7
0x430ba7    mov [rdi], ecx
0x430ba9    mov [rdi+0x8], edx
0x430bac    lea rax, [rdi+0xb]
0x430bb0    ret

------> offset: 0x430ba9
0x430ba9    mov [rdi+0x8], edx
0x430bac    lea rax, [rdi+0xb]
0x430bb0    ret

------> offset: 0x430bac
0x430bac    lea rax, [rdi+0xb]
0x430bb0    ret

------> offset: 0x430bad
0x430bad    lea eax, [rdi+0xb]
0x430bb0    ret

------> offset: 0x430bca
0x430bca    mov [rdi+0x5], rdx
0x430bce    lea rax, [rdi+0xc]
0x430bd2    ret

------> offset: 0x430bcb
0x430bcb    mov [rdi+0x5], edx
0x430bce    lea rax, [rdi+0xc]
0x430bd2    ret

------> offset: 0x430bcc
0x430bcc    push rdi
0x430bcd    add eax, 0xc478d48
0x430bd2    ret

------> offset: 0x430bcd
0x430bcd    add eax, 0xc478d48
0x430bd2    ret

------> offset: 0x430bce
0x430bce    lea rax, [rdi+0xc]
0x430bd2    ret

------> offset: 0x430bcf
0x430bcf    lea eax, [rdi+0xc]
0x430bd2    ret

------> offset: 0x430bea
0x430bea    mov [rdi+0x6], rdx
0x430bee    lea rax, [rdi+0xd]
0x430bf2    ret

------> offset: 0x430beb
0x430beb    mov [rdi+0x6], edx
0x430bee    lea rax, [rdi+0xd]
0x430bf2    ret

------> offset: 0x430bee
0x430bee    lea rax, [rdi+0xd]
0x430bf2    ret

------> offset: 0x430bef
0x430bef    lea eax, [rdi+0xd]
0x430bf2    ret

------> offset: 0x430c0a
0x430c0a    mov [rdi+0x7], rdx
0x430c0e    lea rax, [rdi+0xe]
0x430c12    ret

------> offset: 0x430c0b
0x430c0b    mov [rdi+0x7], edx
0x430c0e    lea rax, [rdi+0xe]
0x430c12    ret

------> offset: 0x430c0e
0x430c0e    lea rax, [rdi+0xe]
0x430c12    ret

------> offset: 0x430c0f
0x430c0f    lea eax, [rdi+0xe]
0x430c12    ret

------> offset: 0x430c24
0x430c24    movdqu [rdi], xmm0
0x430c28    lea rax, [rdi+0xf]
0x430c2c    ret

------> offset: 0x430c25
0x430c25    movq [rdi], mm0
0x430c28    lea rax, [rdi+0xf]
0x430c2c    ret

------> offset: 0x430c26
0x430c26    jg 0x430c2f
0x430c28    lea rax, [rdi+0xf]
0x430c2c    ret

------> offset: 0x430c28
0x430c28    lea rax, [rdi+0xf]
0x430c2c    ret

------> offset: 0x430c29
0x430c29    lea eax, [rdi+0xf]
0x430c2c    ret

------> offset: 0x430c36
0x430c36    jg 0x430c3f
0x430c38    mov [rdi+0x10], dh
0x430c3b    lea rax, [rdi+0x10]
0x430c3f    ret

------> offset: 0x430c38
0x430c38    mov [rdi+0x10], dh
0x430c3b    lea rax, [rdi+0x10]
0x430c3f    ret

------> offset: 0x430c39
0x430c39    ja 0x430c4b
0x430c3b    lea rax, [rdi+0x10]
0x430c3f    ret

------> offset: 0x430c3b
0x430c3b    lea rax, [rdi+0x10]
0x430c3f    ret

------> offset: 0x430c3c
0x430c3c    lea eax, [rdi+0x10]
0x430c3f    ret

------> offset: 0x430c4c
0x430c4c    mov [rdi+0x10], cx
0x430c50    lea rax, [rdi+0x11]
0x430c54    ret

------> offset: 0x430c4d
0x430c4d    mov [rdi+0x10], ecx
0x430c50    lea rax, [rdi+0x11]
0x430c54    ret

------> offset: 0x430c50
0x430c50    lea rax, [rdi+0x11]
0x430c54    ret

------> offset: 0x430c51
0x430c51    lea eax, [rdi+0x11]
0x430c54    ret

------> offset: 0x430c69
0x430c69    jg 0x430c72
0x430c6b    mov [rdi+0xf], ecx
0x430c6e    lea rax, [rdi+0x12]
0x430c72    ret

------> offset: 0x430c6b
0x430c6b    mov [rdi+0xf], ecx
0x430c6e    lea rax, [rdi+0x12]
0x430c72    ret

------> offset: 0x430c6e
0x430c6e    lea rax, [rdi+0x12]
0x430c72    ret

------> offset: 0x430c6f
0x430c6f    lea eax, [rdi+0x12]
0x430c72    ret

------> offset: 0x430c89
0x430c89    jg 0x430c92
0x430c8b    mov [rdi+0x10], ecx
0x430c8e    lea rax, [rdi+0x13]
0x430c92    ret

------> offset: 0x430c8b
0x430c8b    mov [rdi+0x10], ecx
0x430c8e    lea rax, [rdi+0x13]
0x430c92    ret

------> offset: 0x430c8e
0x430c8e    lea rax, [rdi+0x13]
0x430c92    ret

------> offset: 0x430c8f
0x430c8f    lea eax, [rdi+0x13]
0x430c92    ret

------> offset: 0x430cae
0x430cae    mov [rdi+0x14], dh
0x430cb1    lea rax, [rdi+0x14]
0x430cb5    ret

------> offset: 0x430caf
0x430caf    ja 0x430cc5
0x430cb1    lea rax, [rdi+0x14]
0x430cb5    ret

------> offset: 0x430cb0
0x430cb0    adc al, 0x48
0x430cb2    lea eax, [rdi+0x14]
0x430cb5    ret

------> offset: 0x430cb1
0x430cb1    lea rax, [rdi+0x14]
0x430cb5    ret

------> offset: 0x430cb2
0x430cb2    lea eax, [rdi+0x14]
0x430cb5    ret

------> offset: 0x430ccc
0x430ccc    mov [rdi+0xe], rcx
0x430cd0    lea rax, [rdi+0x15]
0x430cd4    ret

------> offset: 0x430ccd
0x430ccd    mov [rdi+0xe], ecx
0x430cd0    lea rax, [rdi+0x15]
0x430cd4    ret

------> offset: 0x430cd0
0x430cd0    lea rax, [rdi+0x15]
0x430cd4    ret

------> offset: 0x430cd1
0x430cd1    lea eax, [rdi+0x15]
0x430cd4    ret

------> offset: 0x430cec
0x430cec    mov [rdi+0xf], rcx
0x430cf0    lea rax, [rdi+0x16]
0x430cf4    ret

------> offset: 0x430ced
0x430ced    mov [rdi+0xf], ecx
0x430cf0    lea rax, [rdi+0x16]
0x430cf4    ret

------> offset: 0x430cf0
0x430cf0    lea rax, [rdi+0x16]
0x430cf4    ret

------> offset: 0x430cf1
0x430cf1    lea eax, [rdi+0x16]
0x430cf4    ret

------> offset: 0x430d0c
0x430d0c    mov [rdi+0x10], rcx
0x430d10    lea rax, [rdi+0x17]
0x430d14    ret

------> offset: 0x430d0d
0x430d0d    mov [rdi+0x10], ecx
0x430d10    lea rax, [rdi+0x17]
0x430d14    ret

------> offset: 0x430d10
0x430d10    lea rax, [rdi+0x17]
0x430d14    ret

------> offset: 0x430d11
0x430d11    lea eax, [rdi+0x17]
0x430d14    ret

------> offset: 0x430d30
0x430d30    mov [rdi+0x18], dh
0x430d33    lea rax, [rdi+0x18]
0x430d37    ret

------> offset: 0x430d31
0x430d31    ja 0x430d4b
0x430d33    lea rax, [rdi+0x18]
0x430d37    ret

------> offset: 0x430d33
0x430d33    lea rax, [rdi+0x18]
0x430d37    ret

------> offset: 0x430d34
0x430d34    lea eax, [rdi+0x18]
0x430d37    ret

------> offset: 0x430d54
0x430d54    mov [rdi+0x18], cx
0x430d58    lea rax, [rdi+0x19]
0x430d5c    ret

------> offset: 0x430d55
0x430d55    mov [rdi+0x18], ecx
0x430d58    lea rax, [rdi+0x19]
0x430d5c    ret

------> offset: 0x430d58
0x430d58    lea rax, [rdi+0x19]
0x430d5c    ret

------> offset: 0x430d59
0x430d59    lea eax, [rdi+0x19]
0x430d5c    ret

------> offset: 0x430d73
0x430d73    mov [rdi+0x17], ecx
0x430d76    lea rax, [rdi+0x1a]
0x430d7a    ret

------> offset: 0x430d76
0x430d76    lea rax, [rdi+0x1a]
0x430d7a    ret

------> offset: 0x430d77
0x430d77    lea eax, [rdi+0x1a]
0x430d7a    ret

------> offset: 0x430d93
0x430d93    mov [rdi+0x18], ecx
0x430d96    lea rax, [rdi+0x1b]
0x430d9a    ret

------> offset: 0x430d96
0x430d96    lea rax, [rdi+0x1b]
0x430d9a    ret

------> offset: 0x430d97
0x430d97    lea eax, [rdi+0x1b]
0x430d9a    ret

------> offset: 0x430dad
0x430dad    movdqu [rdi+0xd], xmm2
0x430db2    lea rax, [rdi+0x1c]
0x430db6    ret

------> offset: 0x430dae
0x430dae    movq [rdi+0xd], mm2
0x430db2    lea rax, [rdi+0x1c]
0x430db6    ret

------> offset: 0x430daf
0x430daf    jg 0x430e08
0x430db1    or eax, 0x1c478d48
0x430db6    ret

------> offset: 0x430db0
0x430db0    push rdi
0x430db1    or eax, 0x1c478d48
0x430db6    ret

------> offset: 0x430db1
0x430db1    or eax, 0x1c478d48
0x430db6    ret

------> offset: 0x430db2
0x430db2    lea rax, [rdi+0x1c]
0x430db6    ret

------> offset: 0x430db3
0x430db3    lea eax, [rdi+0x1c]
0x430db6    ret

------> offset: 0x430dcd
0x430dcd    movdqu [rdi+0xe], xmm2
0x430dd2    lea rax, [rdi+0x1d]
0x430dd6    ret

------> offset: 0x430dce
0x430dce    movq [rdi+0xe], mm2
0x430dd2    lea rax, [rdi+0x1d]
0x430dd6    ret

------> offset: 0x430dd2
0x430dd2    lea rax, [rdi+0x1d]
0x430dd6    ret

------> offset: 0x430dd3
0x430dd3    lea eax, [rdi+0x1d]
0x430dd6    ret

------> offset: 0x430ded
0x430ded    movdqu [rdi+0xf], xmm2
0x430df2    lea rax, [rdi+0x1e]
0x430df6    ret

------> offset: 0x430dee
0x430dee    movq [rdi+0xf], mm2
0x430df2    lea rax, [rdi+0x1e]
0x430df6    ret

------> offset: 0x430df2
0x430df2    lea rax, [rdi+0x1e]
0x430df6    ret

------> offset: 0x430df3
0x430df3    lea eax, [rdi+0x1e]
0x430df6    ret

------> offset: 0x430e0d
0x430e0d    movdqu [rdi+0x10], xmm2
0x430e12    lea rax, [rdi+0x1f]
0x430e16    ret

------> offset: 0x430e0e
0x430e0e    movq [rdi+0x10], mm2
0x430e12    lea rax, [rdi+0x1f]
0x430e16    ret

------> offset: 0x430e12
0x430e12    lea rax, [rdi+0x1f]
0x430e16    ret

------> offset: 0x430e13
0x430e13    lea eax, [rdi+0x1f]
0x430e16    ret

------> offset: 0x430e82
0x430e82    xlat byte [rbx+al]
0x430e83    shl byte [rsi+0xf], 0xd7
0x430e87    ror [rcx], cl
0x430e89    ret 0xe074

------> offset: 0x430e83
0x430e83    shl byte [rsi+0xf], 0xd7
0x430e87    ror [rcx], cl
0x430e89    ret 0xe074

------> offset: 0x430e86
0x430e86    xlat byte [rbx+al]
0x430e87    ror [rcx], cl
0x430e89    ret 0xe074

------> offset: 0x430e87
0x430e87    ror [rcx], cl
0x430e89    ret 0xe074

------> offset: 0x430e89
0x430e89    ret 0xe074

------> offset: 0x430e9a
0x430e9a    test [rax], al
0x430e9c    add [rax], al
0x430e9e    add [rax], al
0x430ea0    xor rax, rax
0x430ea3    ret

------> offset: 0x430ec5
0x430ec5    test esi, edx
0x430ec7    add [rax], eax
0x430ec9    add dh, dh
0x430ecb    ret 0x7510

------> offset: 0x430ec7
0x430ec7    add [rax], eax
0x430ec9    add dh, dh
0x430ecb    ret 0x7510

------> offset: 0x430ec9
0x430ec9    add dh, dh
0x430ecb    ret 0x7510

------> offset: 0x430ecb
0x430ecb    ret 0x7510

------> offset: 0x430ed2
0x430ed2    test ecx, ebx
0x430ed4    add [rax], eax
0x430ed6    add dh, dh
0x430ed8    ret 0x7520

------> offset: 0x430ed4
0x430ed4    add [rax], eax
0x430ed6    add dh, dh
0x430ed8    ret 0x7520

------> offset: 0x430ed6
0x430ed6    add dh, dh
0x430ed8    ret 0x7520

------> offset: 0x430ed8
0x430ed8    ret 0x7520

------> offset: 0x430edf
0x430edf    test esp, ebx
0x430ee1    add [rax], eax
0x430ee3    add dh, dh
0x430ee5    ret 0x7540

------> offset: 0x430ee1
0x430ee1    add [rax], eax
0x430ee3    add dh, dh
0x430ee5    ret 0x7540

------> offset: 0x430ee3
0x430ee3    add dh, dh
0x430ee5    ret 0x7540

------> offset: 0x430ee4
0x430ee4    test dl, 0x40
0x430ee7    jnz 0x430ea0
0x430ee9    lea rax, [rdi+0x7]
0x430eed    ret

------> offset: 0x430ee5
0x430ee5    ret 0x7540

------> offset: 0x430ee6
0x430ee6    jnz 0x430ea0
0x430ee9    lea rax, [rdi+0x7]
0x430eed    ret

------> offset: 0x430ee8
0x430ee8    mov bh, 0x48
0x430eea    lea eax, [rdi+0x7]
0x430eed    ret

------> offset: 0x430ef4
0x430ef4    push qword 0xfffffffff6000001
0x430ef9    ret 0x7501

------> offset: 0x430ef5
0x430ef5    add [rax], eax
0x430ef7    add dh, dh
0x430ef9    ret 0x7501

------> offset: 0x430ef7
0x430ef7    add dh, dh
0x430ef9    ret 0x7501

------> offset: 0x430ef9
0x430ef9    ret 0x7501

------> offset: 0x430f01
0x430f01    imul eax, [rcx], 0x0
0x430f04    add dh, dh
0x430f06    ret 0x7502

------> offset: 0x430f02
0x430f02    add [rax], eax
0x430f04    add dh, dh
0x430f06    ret 0x7502

------> offset: 0x430f04
0x430f04    add dh, dh
0x430f06    ret 0x7502

------> offset: 0x430f0e
0x430f0e    outs dx, byte [rsi]
0x430f0f    add [rax], eax
0x430f11    add dh, dh
0x430f13    ret 0x7504

------> offset: 0x430f0f
0x430f0f    add [rax], eax
0x430f11    add dh, dh
0x430f13    ret 0x7504

------> offset: 0x430f11
0x430f11    add dh, dh
0x430f13    ret 0x7504

------> offset: 0x430f12
0x430f12    test dl, 0x4
0x430f15    jnz 0x430ea0
0x430f17    lea rax, [rdi+0x3]
0x430f1b    ret

------> offset: 0x430f15
0x430f15    jnz 0x430ea0
0x430f17    lea rax, [rdi+0x3]
0x430f1b    ret

------> offset: 0x430ffa
0x430ffa    add [rax], al
0x430ffc    lea rax, [rdi+0x7]
0x431000    ret

------> offset: 0x43104b
0x43104b    loopz 0x43104d
0x43104d    add [rax], al
0x43104f    lea rax, [rdi+0xf]
0x431053    ret

------> offset: 0x43104d
0x43104d    add [rax], al
0x43104f    lea rax, [rdi+0xf]
0x431053    ret

------> offset: 0x43105a
0x43105a    test [rax], al
0x43105c    add [rax], al
0x43105e    add [rax], al
0x431060    lea rax, [rdi]
0x431063    ret

------> offset: 0x43105c
0x43105c    add [rax], al
0x43105e    add [rax], al
0x431060    lea rax, [rdi]
0x431063    ret

------> offset: 0x43105e
0x43105e    add [rax], al
0x431060    lea rax, [rdi]
0x431063    ret

------> offset: 0x43106c
0x43106c    add [rax], al
0x43106e    add [rax], al
0x431070    lea rax, [rdi+0x1]
0x431074    ret

------> offset: 0x43106e
0x43106e    add [rax], al
0x431070    lea rax, [rdi+0x1]
0x431074    ret

------> offset: 0x43107c
0x43107c    add [rax], al
0x43107e    add [rax], al
0x431080    lea rax, [rdi+0x2]
0x431084    ret

------> offset: 0x43107e
0x43107e    add [rax], al
0x431080    lea rax, [rdi+0x2]
0x431084    ret

------> offset: 0x43108c
0x43108c    add [rax], al
0x43108e    add [rax], al
0x431090    lea rax, [rdi+0x3]
0x431094    ret

------> offset: 0x43108e
0x43108e    add [rax], al
0x431090    lea rax, [rdi+0x3]
0x431094    ret

------> offset: 0x43109c
0x43109c    add [rax], al
0x43109e    add [rax], al
0x4310a0    lea rax, [rdi+0x4]
0x4310a4    ret

------> offset: 0x43109e
0x43109e    add [rax], al
0x4310a0    lea rax, [rdi+0x4]
0x4310a4    ret

------> offset: 0x4310ac
0x4310ac    add [rax], al
0x4310ae    add [rax], al
0x4310b0    lea rax, [rdi+0x5]
0x4310b4    ret

------> offset: 0x4310ae
0x4310ae    add [rax], al
0x4310b0    lea rax, [rdi+0x5]
0x4310b4    ret

------> offset: 0x4310bc
0x4310bc    add [rax], al
0x4310be    add [rax], al
0x4310c0    lea rax, [rdi+0x6]
0x4310c4    ret

------> offset: 0x4310be
0x4310be    add [rax], al
0x4310c0    lea rax, [rdi+0x6]
0x4310c4    ret

------> offset: 0x4310cc
0x4310cc    add [rax], al
0x4310ce    add [rax], al
0x4310d0    lea rax, [rdi+0x8]
0x4310d4    ret

------> offset: 0x4310ce
0x4310ce    add [rax], al
0x4310d0    lea rax, [rdi+0x8]
0x4310d4    ret

------> offset: 0x4310dc
0x4310dc    add [rax], al
0x4310de    add [rax], al
0x4310e0    lea rax, [rdi+0x9]
0x4310e4    ret

------> offset: 0x4310de
0x4310de    add [rax], al
0x4310e0    lea rax, [rdi+0x9]
0x4310e4    ret

------> offset: 0x4310ec
0x4310ec    add [rax], al
0x4310ee    add [rax], al
0x4310f0    lea rax, [rdi+0xa]
0x4310f4    ret

------> offset: 0x4310ee
0x4310ee    add [rax], al
0x4310f0    lea rax, [rdi+0xa]
0x4310f4    ret

------> offset: 0x4310fc
0x4310fc    add [rax], al
0x4310fe    add [rax], al
0x431100    lea rax, [rdi+0xb]
0x431104    ret

------> offset: 0x4310fe
0x4310fe    add [rax], al
0x431100    lea rax, [rdi+0xb]
0x431104    ret

------> offset: 0x43110c
0x43110c    add [rax], al
0x43110e    add [rax], al
0x431110    lea rax, [rdi+0xc]
0x431114    ret

------> offset: 0x43110e
0x43110e    add [rax], al
0x431110    lea rax, [rdi+0xc]
0x431114    ret

------> offset: 0x43111c
0x43111c    add [rax], al
0x43111e    add [rax], al
0x431120    lea rax, [rdi+0xd]
0x431124    ret

------> offset: 0x43111e
0x43111e    add [rax], al
0x431120    lea rax, [rdi+0xd]
0x431124    ret

------> offset: 0x43112c
0x43112c    add [rax], al
0x43112e    add [rax], al
0x431130    lea rax, [rdi+0xe]
0x431134    ret

------> offset: 0x43112e
0x43112e    add [rax], al
0x431130    lea rax, [rdi+0xe]
0x431134    ret

------> offset: 0x43179d
0x43179d    mov byte [rip+0x48ce0148], 0x1
0x4317a4    iret

------> offset: 0x432320
0x432320    lodsb
0x432321    add [rax], al
0x432323    add dh, dh
0x432325    ret 0x7501

------> offset: 0x432321
0x432321    add [rax], al
0x432323    add dh, dh
0x432325    ret 0x7501

------> offset: 0x432334
0x432334    ret 0x7508

------> offset: 0x43233c
0x43233c    movsxd esi, esi
0x43233e    ret 0x7520

------> offset: 0x43234b
0x43234b    movzx edx, byte [rsi-0x9]
0x43234f    sub eax, edx
0x432351    ret

------> offset: 0x432361
0x432361    mov dh, 0x47
0x432363    movzx edx, byte [rsi-0x10]
0x432368    sub eax, edx
0x43236a    ret

------> offset: 0x432362
0x432362    movzx r10d, byte [r14-0x10]
0x432368    sub eax, edx
0x43236a    ret

------> offset: 0x432363
0x432363    movzx edx, byte [rsi-0x10]
0x432368    sub eax, edx
0x43236a    ret

------> offset: 0x432365
0x432365    mov dh, 0x56
0x432367    sub eax, edx
0x43236a    ret

------> offset: 0x432366
0x432366    push rsi
0x432367    sub eax, edx
0x43236a    ret

------> offset: 0x432371
0x432371    mov dh, 0x47
0x432373    int1
0x432374    movzx edx, byte [rsi-0xf]
0x432378    sub eax, edx
0x43237a    ret

------> offset: 0x432372
0x432372    int1
0x432374    movzx edx, byte [rsi-0xf]
0x432378    sub eax, edx
0x43237a    ret

------> offset: 0x432374
0x432374    movzx edx, byte [rsi-0xf]
0x432378    sub eax, edx
0x43237a    ret

------> offset: 0x432375
0x432375    mov dh, 0x56
0x432377    int1
0x432378    sub eax, edx
0x43237a    ret

------> offset: 0x432376
0x432376    push rsi
0x432377    int1
0x432378    sub eax, edx
0x43237a    ret

------> offset: 0x432377
0x432377    int1
0x432378    sub eax, edx
0x43237a    ret

------> offset: 0x432381
0x432381    mov dh, 0x47
0x432383    movzx edx, byte [rsi-0xe]
0x432388    sub eax, edx
0x43238a    ret

------> offset: 0x432382
0x432382    movzx r10d, byte [r14-0xe]
0x432388    sub eax, edx
0x43238a    ret

------> offset: 0x432383
0x432383    movzx edx, byte [rsi-0xe]
0x432388    sub eax, edx
0x43238a    ret

------> offset: 0x432391
0x432391    mov dh, 0x47
0x432393    movzx edx, byte [rsi-0xd]
0x432398    sub eax, edx
0x43239a    ret

------> offset: 0x432392
0x432392    movzx r10d, byte [r14-0xd]
0x432398    sub eax, edx
0x43239a    ret

------> offset: 0x432393
0x432393    movzx edx, byte [rsi-0xd]
0x432398    sub eax, edx
0x43239a    ret

------> offset: 0x4323a1
0x4323a1    mov dh, 0x47
0x4323a3    hlt
0x4323a4    movzx edx, byte [rsi-0xc]
0x4323a8    sub eax, edx
0x4323aa    ret

------> offset: 0x4323a2
0x4323a2    hlt
0x4323a4    movzx edx, byte [rsi-0xc]
0x4323a8    sub eax, edx
0x4323aa    ret

------> offset: 0x4323a4
0x4323a4    movzx edx, byte [rsi-0xc]
0x4323a8    sub eax, edx
0x4323aa    ret

------> offset: 0x4323a5
0x4323a5    mov dh, 0x56
0x4323a7    hlt
0x4323a8    sub eax, edx
0x4323aa    ret

------> offset: 0x4323a6
0x4323a6    push rsi
0x4323a7    hlt
0x4323a8    sub eax, edx
0x4323aa    ret

------> offset: 0x4323a7
0x4323a7    hlt
0x4323a8    sub eax, edx
0x4323aa    ret

------> offset: 0x4323b1
0x4323b1    mov dh, 0x47
0x4323b3    cmc
0x4323b4    movzx edx, byte [rsi-0xb]
0x4323b8    sub eax, edx
0x4323ba    ret

------> offset: 0x4323b2
0x4323b2    cmc
0x4323b4    movzx edx, byte [rsi-0xb]
0x4323b8    sub eax, edx
0x4323ba    ret

------> offset: 0x4323b4
0x4323b4    movzx edx, byte [rsi-0xb]
0x4323b8    sub eax, edx
0x4323ba    ret

------> offset: 0x4323b5
0x4323b5    mov dh, 0x56
0x4323b7    cmc
0x4323b8    sub eax, edx
0x4323ba    ret

------> offset: 0x4323b6
0x4323b6    push rsi
0x4323b7    cmc
0x4323b8    sub eax, edx
0x4323ba    ret

------> offset: 0x4323b7
0x4323b7    cmc
0x4323b8    sub eax, edx
0x4323ba    ret

------> offset: 0x4323c4
0x4323c4    movzx edx, byte [rsi-0xa]
0x4323c8    sub eax, edx
0x4323ca    ret

------> offset: 0x4324c6
0x4324c6    add [rbx-0x7bf0ed07], al
0x4324cc    ret 0x2

------> offset: 0x432674
0x432674    jnz 0x432880
0x43267a    xor eax, eax
0x43267c    ret

------> offset: 0x432720
0x432720    dec dword [rdi]
0x432722    test [rsi+0x1], ebp
0x432725    add [rax], al
0x432727    xor eax, eax
0x432729    ret

------> offset: 0x432721
0x432721    jnz 0x432895
0x432727    xor eax, eax
0x432729    ret

------> offset: 0x432722
0x432722    test [rsi+0x1], ebp
0x432725    add [rax], al
0x432727    xor eax, eax
0x432729    ret

------> offset: 0x4327de
0x4327de    mov bl, 0x0
0x4327e0    add [rax], al
0x4327e2    xor eax, eax
0x4327e4    ret

------> offset: 0x432876
0x432876    cmp al, [rsi-0x1]
0x432879    jnz 0x432895
0x43287b    xor eax, eax
0x43287d    ret

------> offset: 0x432877
0x432877    push qword [rbp+0x1a]
0x43287b    xor eax, eax
0x43287d    ret

------> offset: 0x432891
0x432891    jnz 0x432895
0x432893    cmp eax, ecx
0x432895    sbb eax, eax
0x432897    sbb eax, -0x1
0x43289a    ret

------> offset: 0x432892
0x432892    add bh, [rcx]
0x432894    enter 0xc019, 0x83
0x432898    fdivr st0, st7
0x43289a    ret

------> offset: 0x432893
0x432893    cmp eax, ecx
0x432895    sbb eax, eax
0x432897    sbb eax, -0x1
0x43289a    ret

------> offset: 0x432894
0x432894    enter 0xc019, 0x83
0x432898    fdivr st0, st7
0x43289a    ret

------> offset: 0x432895
0x432895    sbb eax, eax
0x432897    sbb eax, -0x1
0x43289a    ret

------> offset: 0x432897
0x432897    sbb eax, -0x1
0x43289a    ret

------> offset: 0x432898
0x432898    fdivr st0, st7
0x43289a    ret

------> offset: 0x432899
0x432899    inc ebx
0x43289b    nop dword [rax+rax+0x0]
0x4328a0    xor eax, eax
0x4328a2    ret

------> offset: 0x43293b
0x43293b    shl dword [rsi+0xf], 0xda
0x43293f    ret

------> offset: 0x43298b
0x43298b    add [rax], al
0x43298d    add [rax], al
0x43298f    add [rax-0x7d], cl
0x432992    ret 0x3a01

------> offset: 0x43298d
0x43298d    add [rax], al
0x43298f    add [rax-0x7d], cl
0x432992    ret 0x3a01

------> offset: 0x43298f
0x43298f    add [rax-0x7d], cl
0x432992    ret 0x3a01

------> offset: 0x432992
0x432992    ret 0x3a01

------> offset: 0x43299a
0x43299a    movzx ecx, byte [rsi+rdx+0x3]
0x43299f    test cl, cl
0x4329a1    jnz 0x432990
0x4329a3    ret

------> offset: 0x43299f
0x43299f    test cl, cl
0x4329a1    jnz 0x432990
0x4329a3    ret

------> offset: 0x4329a0
0x4329a0    leave
0x4329a1    jnz 0x432990
0x4329a3    ret

------> offset: 0x4329a1
0x4329a1    jnz 0x432990
0x4329a3    ret

------> offset: 0x432a4a
0x432a4a    movzx ecx, byte [rsi+rdx+0x3]
0x432a4f    test cl, cl
0x432a51    jnz 0x432a40
0x432a53    ret

------> offset: 0x432a4f
0x432a4f    test cl, cl
0x432a51    jnz 0x432a40
0x432a53    ret

------> offset: 0x432a50
0x432a50    leave
0x432a51    jnz 0x432a40
0x432a53    ret

------> offset: 0x432a51
0x432a51    jnz 0x432a40
0x432a53    ret

------> offset: 0x432a55
0x432a55    rol bl, 0x48
0x432a58    mov eax, edi
0x432a5a    ret

------> offset: 0x432ac2
0x432ac2    shl dword [rsi+0x44], 0xf
0x432ac6    out dx, eax
0x432ac7    retf 0x4466

------> offset: 0x432ac6
0x432ac6    out dx, eax
0x432ac7    retf 0x4466

------> offset: 0x432adf
0x432adf    shl byte [rsi+0x44], 0xf
0x432ae3    out dx, eax
0x432ae4    ret 0xf66

------> offset: 0x432ae3
0x432ae3    out dx, eax
0x432ae4    ret 0xf66

------> offset: 0x432b67
0x432b67    fmul dword [rax+0x9]
0x432b6a    retf 0x4466

------> offset: 0x432bbf
0x432bbf    test dl, dl
0x432bc1    jnz 0x432bb0
0x432bc3    lea rax, [rcx-0x1]
0x432bc7    ret

------> offset: 0x432bc0
0x432bc0    sal [rbp-0x13], cl
0x432bc3    lea rax, [rcx-0x1]
0x432bc7    ret

------> offset: 0x432bc1
0x432bc1    jnz 0x432bb0
0x432bc3    lea rax, [rcx-0x1]
0x432bc7    ret

------> offset: 0x432bc2
0x432bc2    in eax, dx
0x432bc3    lea rax, [rcx-0x1]
0x432bc7    ret

------> offset: 0x432bc3
0x432bc3    lea rax, [rcx-0x1]
0x432bc7    ret

------> offset: 0x432bc4
0x432bc4    lea eax, [rcx-0x1]
0x432bc7    ret

------> offset: 0x432bcb
0x432bcb    add [rax], al
0x432bcd    add [rax], al
0x432bcf    add [rcx+0x1], cl
0x432bd2    ret

------> offset: 0x432bcd
0x432bcd    add [rax], al
0x432bcf    add [rcx+0x1], cl
0x432bd2    ret

------> offset: 0x432bcf
0x432bcf    add [rcx+0x1], cl
0x432bd2    ret

------> offset: 0x432d0f
0x432d0f    test cl, cl
0x432d11    jnz 0x432d00
0x432d13    sub rax, 0x1
0x432d17    ret

------> offset: 0x432d10
0x432d10    leave
0x432d11    jnz 0x432d00
0x432d13    sub rax, 0x1
0x432d17    ret

------> offset: 0x432d11
0x432d11    jnz 0x432d00
0x432d13    sub rax, 0x1
0x432d17    ret

------> offset: 0x432d12
0x432d12    in eax, dx
0x432d13    sub rax, 0x1
0x432d17    ret

------> offset: 0x432d13
0x432d13    sub rax, 0x1
0x432d17    ret

------> offset: 0x432d14
0x432d14    sub eax, 0x1
0x432d17    ret

------> offset: 0x432d28
0x432d28    test eax, 0xfffffffffffd3be9
0x432d2d    jmp qword [rsi-0x70]
0x432d30    ret

------> offset: 0x432d29
0x432d29    jmp 0x432a69
0x432d2e    nop
0x432d30    ret

------> offset: 0x432d2d
0x432d2d    jmp qword [rsi-0x70]
0x432d30    ret

------> offset: 0x432d2e
0x432d2e    nop
0x432d30    ret

------> offset: 0x432d78
0x432d78    ret 0xf685

------> offset: 0x432e4e
0x432e4e    add [rbp+rcx*4+0x40], cl
0x432e53    add [rbp+0x39], ecx
0x432e56    ret

------> offset: 0x432e52
0x432e52    add [rbp+0x39], ecx
0x432e56    ret

------> offset: 0x432e96
0x432e96    ret 0xe283

------> offset: 0x432ee0
0x432ee0    jnz 0x432ed0
0x432ee2    jmp 0x432e43
0x432ee7    xor eax, eax
0x432ee9    ret

------> offset: 0x432ee1
0x432ee1    out dx, al
0x432ee2    jmp 0x432e43
0x432ee7    xor eax, eax
0x432ee9    ret

------> offset: 0x432ee2
0x432ee2    jmp 0x432e43
0x432ee7    xor eax, eax
0x432ee9    ret

------> offset: 0x432f11
0x432f11    mov eax, [rcx+0x4]
0x432f14    add rsp, 0x8
0x432f18    pop rbx
0x432f19    pop rbp
0x432f1a    ret

------> offset: 0x432f12
0x432f12    add al, 0x48
0x432f15    add esp, 0x8
0x432f18    pop rbx
0x432f19    pop rbp
0x432f1a    ret

------> offset: 0x432f66
0x432f66    sldt dword [rax]
0x432f69    pop rbx
0x432f6a    lea rax, [r9+0x1]
0x432f6e    pop rbp
0x432f6f    ret

------> offset: 0x432f67
0x432f67    add [rax], al
0x432f69    pop rbx
0x432f6a    lea rax, [r9+0x1]
0x432f6e    pop rbp
0x432f6f    ret

------> offset: 0x432f68
0x432f68    add [rbx+0x49], bl
0x432f6b    lea eax, [rcx+0x1]
0x432f6e    pop rbp
0x432f6f    ret

------> offset: 0x432f69
0x432f69    pop rbx
0x432f6a    lea rax, [r9+0x1]
0x432f6e    pop rbp
0x432f6f    ret

------> offset: 0x432f6a
0x432f6a    lea rax, [r9+0x1]
0x432f6e    pop rbp
0x432f6f    ret

------> offset: 0x432f6b
0x432f6b    lea eax, [rcx+0x1]
0x432f6e    pop rbp
0x432f6f    ret

------> offset: 0x433025
0x433025    retf 0xc183

------> offset: 0x433035
0x433035    or al, 0x83
0x433037    rol byte [rcx], 0x83
0x43303a    ret 0x4101

------> offset: 0x433037
0x433037    rol byte [rcx], 0x83
0x43303a    ret 0x4101

------> offset: 0x43303e
0x43303e    loopz 0x43303f
0x433040    add eax, [rax]
0x433042    add [rdi], cl
0x433044    scasd
0x433045    ret 0x8341

------> offset: 0x433040
0x433040    add eax, [rax]
0x433042    add [rdi], cl
0x433044    scasd
0x433045    ret 0x8341

------> offset: 0x433042
0x433042    add [rdi], cl
0x433044    scasd
0x433045    ret 0x8341

------> offset: 0x433044
0x433044    scasd
0x433045    ret 0x8341

------> offset: 0x4331b4
0x4331b4    mov edi, 0xf000000
0x4331b9    popf
0x4331ba    ret 0xea81

------> offset: 0x4331b5
0x4331b5    add [rax], al
0x4331b7    add [rdi], cl
0x4331b9    popf
0x4331ba    ret 0xea81

------> offset: 0x4331b7
0x4331b7    add [rdi], cl
0x4331b9    popf
0x4331ba    ret 0xea81

------> offset: 0x4331b9
0x4331b9    popf
0x4331ba    ret 0xea81

------> offset: 0x4331ba
0x4331ba    ret 0xea81

------> offset: 0x4331c0
0x4331c0    jg 0x4331fb
0x4331c2    ret 0x2b77

------> offset: 0x4331c2
0x4331c2    ret 0x2b77

------> offset: 0x4331ea
0x4331ea    test [rax], al
0x4331ec    add [rax], al
0x4331ee    add [rax], al
0x4331f0    xor eax, eax
0x4331f2    pop rbx
0x4331f3    ret

------> offset: 0x4331ec
0x4331ec    add [rax], al
0x4331ee    add [rax], al
0x4331f0    xor eax, eax
0x4331f2    pop rbx
0x4331f3    ret

------> offset: 0x433202
0x433202    test ch, 0xf0
0x433205    jz 0x4331f2
0x433207    movzx eax, cl
0x43320a    pop rbx
0x43320b    ret

------> offset: 0x433204
0x433204    jz 0x4331f2
0x433207    movzx eax, cl
0x43320a    pop rbx
0x43320b    ret

------> offset: 0x433206
0x433206    jmp 0x433217
0x433208    mov dh, 0xc1
0x43320a    pop rbx
0x43320b    ret

------> offset: 0x433207
0x433207    movzx eax, cl
0x43320a    pop rbx
0x43320b    ret

------> offset: 0x433208
0x433208    mov dh, 0xc1
0x43320a    pop rbx
0x43320b    ret

------> offset: 0x433219
0x433219    shr eax, 0x6
0x43321c    and eax, 0x3fffc00
0x433221    pop rbx
0x433222    ret

------> offset: 0x43321a
0x43321a    call 0xfffffffffc435725
0x43321f    inc dword [rbx]
0x433221    pop rbx
0x433222    ret

------> offset: 0x43321c
0x43321c    and eax, 0x3fffc00
0x433221    pop rbx
0x433222    ret

------> offset: 0x43321d
0x43321d    add ah, bh
0x43321f    inc dword [rbx]
0x433221    pop rbx
0x433222    ret

------> offset: 0x43321e
0x43321e    cld
0x43321f    inc dword [rbx]
0x433221    pop rbx
0x433222    ret

------> offset: 0x43321f
0x43321f    inc dword [rbx]
0x433221    pop rbx
0x433222    ret

------> offset: 0x43322a
0x43322a    test dh, 0xf0
0x43322d    jz 0x4331f2
0x43322f    movzx eax, dl
0x433232    pop rbx
0x433233    ret

------> offset: 0x43322c
0x43322c    jz 0x4331f2
0x43322f    movzx eax, dl
0x433232    pop rbx
0x433233    ret

------> offset: 0x43322f
0x43322f    movzx eax, dl
0x433232    pop rbx
0x433233    ret

------> offset: 0x433230
0x433230    mov dh, 0xc2
0x433232    pop rbx
0x433233    ret

------> offset: 0x433231
0x433231    ret 0xc35b

------> offset: 0x43323a
0x43323a    shr eax, 0xe
0x43323d    and eax, 0x3fc00
0x433242    pop rbx
0x433243    ret

------> offset: 0x43323b
0x43323b    call 0xfffffffffc43574e
0x433240    add eax, [rax]
0x433242    pop rbx
0x433243    ret

------> offset: 0x43323d
0x43323d    and eax, 0x3fc00
0x433242    pop rbx
0x433243    ret

------> offset: 0x43323e
0x43323e    add ah, bh
0x433240    add eax, [rax]
0x433242    pop rbx
0x433243    ret

------> offset: 0x43323f
0x43323f    cld
0x433240    add eax, [rax]
0x433242    pop rbx
0x433243    ret

------> offset: 0x433240
0x433240    add eax, [rax]
0x433242    pop rbx
0x433243    ret

------> offset: 0x43325c
0x43325c    add [rax], al
0x43325e    add [rbx+0x25], bl
0x433261    add ah, bh
0x433263    add eax, [rax]
0x433265    ret

------> offset: 0x43325d
0x43325d    add [rax], al
0x43325f    pop rbx
0x433260    and eax, 0x3fc00
0x433265    ret

------> offset: 0x43325e
0x43325e    add [rbx+0x25], bl
0x433261    add ah, bh
0x433263    add eax, [rax]
0x433265    ret

------> offset: 0x43325f
0x43325f    pop rbx
0x433260    and eax, 0x3fc00
0x433265    ret

------> offset: 0x433260
0x433260    and eax, 0x3fc00
0x433265    ret

------> offset: 0x433261
0x433261    add ah, bh
0x433263    add eax, [rax]
0x433265    ret

------> offset: 0x433262
0x433262    cld
0x433263    add eax, [rax]
0x433265    ret

------> offset: 0x433263
0x433263    add eax, [rax]
0x433265    ret

------> offset: 0x43328c
0x43328c    lea eax, [rdx+rdx]
0x43328f    pop rbx
0x433290    and eax, 0x7ff80000
0x433295    ret

------> offset: 0x43328d
0x43328d    add al, 0x12
0x43328f    pop rbx
0x433290    and eax, 0x7ff80000
0x433295    ret

------> offset: 0x43328f
0x43328f    pop rbx
0x433290    and eax, 0x7ff80000
0x433295    ret

------> offset: 0x433290
0x433290    and eax, 0x7ff80000
0x433295    ret

------> offset: 0x4332ac
0x4332ac    outs dx, byte [rsi]
0x4332ad    add [r8+0x10], dil
0x4332b4    pop rbx
0x4332b5    ret

------> offset: 0x4332ad
0x4332ad    add [r8+0x10], dil
0x4332b4    pop rbx
0x4332b5    ret

------> offset: 0x4332ae
0x4332ae    add [rax+0x10], bh
0x4332b4    pop rbx
0x4332b5    ret

------> offset: 0x4332af
0x4332af    mov eax, 0x10
0x4332b4    pop rbx
0x4332b5    ret

------> offset: 0x4332b0
0x4332b0    adc [rax], al
0x4332b2    add [rax], al
0x4332b4    pop rbx
0x4332b5    ret

------> offset: 0x4332b3
0x4332b3    add [rbx-0x3d], bl
0x4332b6    mov eax, 0x80
0x4332bb    pop rbx
0x4332bc    ret

------> offset: 0x4332b6
0x4332b6    mov eax, 0x80
0x4332bb    pop rbx
0x4332bc    ret

------> offset: 0x4332ba
0x4332ba    add [rbx-0x3d], bl
0x4332bd    mov eax, 0x60
0x4332c2    pop rbx
0x4332c3    ret

------> offset: 0x4332bd
0x4332bd    mov eax, 0x60
0x4332c2    pop rbx
0x4332c3    ret

------> offset: 0x4332c1
0x4332c1    add [rbx-0x3d], bl
0x4332c4    mov eax, 0x40
0x4332c9    pop rbx
0x4332ca    ret

------> offset: 0x4332c4
0x4332c4    mov eax, 0x40
0x4332c9    pop rbx
0x4332ca    ret

------> offset: 0x4332c8
0x4332c8    add [rbx-0x3d], bl
0x4332cb    mov eax, 0x30
0x4332d0    pop rbx
0x4332d1    ret

------> offset: 0x4332cb
0x4332cb    mov eax, 0x30
0x4332d0    pop rbx
0x4332d1    ret

------> offset: 0x4332cc
0x4332cc    xor [rax], al
0x4332ce    add [rax], al
0x4332d0    pop rbx
0x4332d1    ret

------> offset: 0x4332cf
0x4332cf    add [rbx-0x3d], bl
0x4332d2    mov eax, 0x20
0x4332d7    pop rbx
0x4332d8    ret

------> offset: 0x4332d2
0x4332d2    mov eax, 0x20
0x4332d7    pop rbx
0x4332d8    ret

------> offset: 0x4332d3
0x4332d3    and [rax], al
0x4332d5    add [rax], al
0x4332d7    pop rbx
0x4332d8    ret

------> offset: 0x4332d6
0x4332d6    add [rbx-0x3d], bl
0x4332d9    mov eax, 0x8
0x4332de    pop rbx
0x4332df    ret

------> offset: 0x4332d9
0x4332d9    mov eax, 0x8
0x4332de    pop rbx
0x4332df    ret

------> offset: 0x4332da
0x4332da    or [rax], al
0x4332dc    add [rax], al
0x4332de    pop rbx
0x4332df    ret

------> offset: 0x4332e4
0x4332e4    retf 0xd231

------> offset: 0x4332ec
0x4332ec    add eax, eax
0x4332ee    div ecx
0x4332f0    pop rbx
0x4332f1    mov eax, eax
0x4332f3    ret

------> offset: 0x4332ed
0x4332ed    sal bh, 0xf1
0x4332f0    pop rbx
0x4332f1    mov eax, eax
0x4332f3    ret

------> offset: 0x4332ee
0x4332ee    div ecx
0x4332f0    pop rbx
0x4332f1    mov eax, eax
0x4332f3    ret

------> offset: 0x4332ef
0x4332ef    int1
0x4332f0    pop rbx
0x4332f1    mov eax, eax
0x4332f3    ret

------> offset: 0x4332f0
0x4332f0    pop rbx
0x4332f1    mov eax, eax
0x4332f3    ret

------> offset: 0x4332ff
0x4332ff    add ah, bh
0x433301    inc dword [rbx]
0x433303    div ecx
0x433305    pop rbx
0x433306    mov eax, eax
0x433308    ret

------> offset: 0x433300
0x433300    cld
0x433301    inc dword [rbx]
0x433303    div ecx
0x433305    pop rbx
0x433306    mov eax, eax
0x433308    ret

------> offset: 0x433301
0x433301    inc dword [rbx]
0x433303    div ecx
0x433305    pop rbx
0x433306    mov eax, eax
0x433308    ret

------> offset: 0x433302
0x433302    add esi, edi
0x433304    int1
0x433305    pop rbx
0x433306    mov eax, eax
0x433308    ret

------> offset: 0x433346
0x433346    jz 0x433368
0x433348    xor eax, eax
0x43334a    add rsp, 0x18
0x43334e    ret

------> offset: 0x4333b9
0x4333b9    mov eax, [rdx+rax*4]
0x4333bc    sub eax, [rdx+rcx*4]
0x4333bf    jz 0x4333a0
0x4333c1    ret

------> offset: 0x4333ba
0x4333ba    add al, 0x82
0x4333bc    sub eax, [rdx+rcx*4]
0x4333bf    jz 0x4333a0
0x4333c1    ret

------> offset: 0x4333bc
0x4333bc    sub eax, [rdx+rcx*4]
0x4333bf    jz 0x4333a0
0x4333c1    ret

------> offset: 0x4333bd
0x4333bd    add al, 0x8a
0x4333bf    jz 0x4333a0
0x4333c1    ret

------> offset: 0x4333be
0x4333be    mov dh, [rdi+rbx*8-0xd]
0x4333c2    ret

------> offset: 0x4333bf
0x4333bf    jz 0x4333a0
0x4333c1    ret

------> offset: 0x4333c0
0x4333c0    fcomip st0, st3
0x4333c2    ret

------> offset: 0x43341c
0x43341c    nop dword [rax+0x0]
0x433420    pop rbx
0x433421    ret

------> offset: 0x43345e
0x43345e    add [rax], al
0x433460    add rsp, 0x20
0x433464    xor eax, eax
0x433466    pop rbx
0x433467    ret

------> offset: 0x433460
0x433460    add rsp, 0x20
0x433464    xor eax, eax
0x433466    pop rbx
0x433467    ret

------> offset: 0x433461
0x433461    add esp, 0x20
0x433464    xor eax, eax
0x433466    pop rbx
0x433467    ret

------> offset: 0x433474
0x433474    mov eax, [rsp+0x10]
0x433478    add rsp, 0x20
0x43347c    pop rbx
0x43347d    ret

------> offset: 0x433475
0x433475    and al, 0x10
0x433478    add rsp, 0x20
0x43347c    pop rbx
0x43347d    ret

------> offset: 0x433478
0x433478    add rsp, 0x20
0x43347c    pop rbx
0x43347d    ret

------> offset: 0x433479
0x433479    add esp, 0x20
0x43347c    pop rbx
0x43347d    ret

------> offset: 0x43347e
0x43347e    nop
0x433480    add rsp, 0x20
0x433484    xor eax, eax
0x433486    pop rbx
0x433487    ret

------> offset: 0x433517
0x433517    ret 0xf44

------> offset: 0x4335df
0x4335df    call 0x419f7740
0x4335e5    pop rbp
0x4335e6    pop rbp
0x4335e7    ret

------> offset: 0x433753
0x433753    adc [rcx], al
0x433756    add rsp, 0x8
0x43375a    pop rbx
0x43375b    pop rbp
0x43375c    ret

------> offset: 0x4337c7
0x4337c7    add [rax], al
0x4337c9    add rsp, 0x28
0x4337cd    pop rbx
0x4337ce    pop rbp
0x4337cf    ret

------> offset: 0x43383f
0x43383f    adc [rdi+rdx*8+0x48], dh
0x433843    add esp, 0x28
0x433846    pop rbx
0x433847    pop rbp
0x433848    ret

------> offset: 0x433840
0x433840    jz 0x433819
0x433842    add rsp, 0x28
0x433846    pop rbx
0x433847    pop rbp
0x433848    ret

------> offset: 0x433841
0x433841    xlat byte [rbx+al]
0x433842    add rsp, 0x28
0x433846    pop rbx
0x433847    pop rbp
0x433848    ret

------> offset: 0x43385a
0x43385a    sub [rax+0x1], bh
0x433860    pop rbx
0x433861    pop rbp
0x433862    ret

------> offset: 0x43385b
0x43385b    mov eax, 0x1
0x433860    pop rbx
0x433861    pop rbp
0x433862    ret

------> offset: 0x43385c
0x43385c    add [rax], eax
0x43385e    add [rax], al
0x433860    pop rbx
0x433861    pop rbp
0x433862    ret

------> offset: 0x433ae0
0x433ae0    add rsp, 0x30
0x433ae4    pop rbx
0x433ae5    pop rbp
0x433ae6    pop r12
0x433ae8    ret

------> offset: 0x433ae1
0x433ae1    add esp, 0x30
0x433ae4    pop rbx
0x433ae5    pop rbp
0x433ae6    pop r12
0x433ae8    ret

------> offset: 0x433ae3
0x433ae3    xor [rbx+0x5d], bl
0x433ae6    pop r12
0x433ae8    ret

------> offset: 0x433b10
0x433b10    ret 0xb8

------> offset: 0x433d5c
0x433d5c    add [rax-0x77], cl
0x433d5f    ret 0x6b8

------> offset: 0x433d5f
0x433d5f    ret 0x6b8

------> offset: 0x4340bd
0x4340bd    jae 0x4388e0
0x4340c3    ret

------> offset: 0x4340dd
0x4340dd    outs dx, dword [rsi]
0x4340de    or eax, [rax]
0x4340e0    add [rax-0x39], cl
0x4340e3    ret 0xffff

------> offset: 0x4340de
0x4340de    or eax, [rax]
0x4340e0    add [rax-0x39], cl
0x4340e3    ret 0xffff

------> offset: 0x4340e0
0x4340e0    add [rax-0x39], cl
0x4340e3    ret 0xffff

------> offset: 0x4340ed
0x4340ed    adc al, 0x24
0x4340ef    add rsp, 0x18
0x4340f3    mov rax, rdx
0x4340f6    ret

------> offset: 0x4340ee
0x4340ee    and al, 0x48
0x4340f0    add esp, 0x18
0x4340f3    mov rax, rdx
0x4340f6    ret

------> offset: 0x4340ef
0x4340ef    add rsp, 0x18
0x4340f3    mov rax, rdx
0x4340f6    ret

------> offset: 0x4340f0
0x4340f0    add esp, 0x18
0x4340f3    mov rax, rdx
0x4340f6    ret

------> offset: 0x434135
0x434135    cmp rax, 0xfffffffffffff000
0x43413b    ja 0x434154
0x43413d    ret

------> offset: 0x434136
0x434136    cmp eax, 0xfffffffffffff000
0x43413b    ja 0x434154
0x43413d    ret

------> offset: 0x43413a
0x43413a    push qword [rdi+0x17]
0x43413d    ret

------> offset: 0x43413b
0x43413b    ja 0x434154
0x43413d    ret

------> offset: 0x43415b
0x43415b    neg eax
0x43415d    mov [fs:rdx], eax
0x434160    or rax, -0x1
0x434164    ret

------> offset: 0x43415c
0x43415c    fsub dword [rcx+rcx*4+0x2]
0x434160    or rax, -0x1
0x434164    ret

------> offset: 0x43415d
0x43415d    mov [fs:rdx], eax
0x434160    or rax, -0x1
0x434164    ret

------> offset: 0x43415e
0x43415e    mov [rdx], eax
0x434160    or rax, -0x1
0x434164    ret

------> offset: 0x434160
0x434160    or rax, -0x1
0x434164    ret

------> offset: 0x434161
0x434161    or eax, -0x1
0x434164    ret

------> offset: 0x434184
0x434184    cmp rax, 0xfffffffffffff000
0x43418a    ja 0x4341a4
0x43418c    ret

------> offset: 0x434185
0x434185    cmp eax, 0xfffffffffffff000
0x43418a    ja 0x4341a4
0x43418c    ret

------> offset: 0x434189
0x434189    push qword [rdi+0x18]
0x43418c    ret

------> offset: 0x43418a
0x43418a    ja 0x4341a4
0x43418c    ret

------> offset: 0x43418b
0x43418b    sbb bl, dh
0x43418d    ret

------> offset: 0x4341d8
0x4341d8    add al, 0x47
0x4341da    add [rax], al
0x4341dc    ret

------> offset: 0x4341d9
0x4341d9    add [r8], r8b
0x4341dc    ret

------> offset: 0x4341f7
0x4341f7    ret 0x23e8

------> offset: 0x434209
0x434209    dec dword [rdi]
0x43420b    adc eax, 0x46
0x43420e    add [rax], al
0x434210    ret

------> offset: 0x43420b
0x43420b    adc eax, 0x46
0x43420e    add [rax], al
0x434210    ret

------> offset: 0x43420d
0x43420d    add [rax], r8b
0x434210    ret

------> offset: 0x434238
0x434238    movsb
0x434239    add [rax], r8b
0x43423c    ret

------> offset: 0x434257
0x434257    ret 0xc3e8

------> offset: 0x43426c
0x43426c    jo 0x4342b4
0x43426e    add [rax], al
0x434270    ret

------> offset: 0x434295
0x434295    dec dword [rdi]
0x434297    add dword [rsi+rax*2+0x0], 0x0
0x43429c    ret

------> offset: 0x434297
0x434297    add dword [rsi+rax*2+0x0], 0x0
0x43429c    ret

------> offset: 0x4342b7
0x4342b7    ret 0x63e8

------> offset: 0x4342c9
0x4342c9    dec dword [rdi]
0x4342cb    adc dword [rax], 0x46
0x4342ce    add [rax], al
0x4342d0    ret

------> offset: 0x4342cb
0x4342cb    adc dword [rax], 0x46
0x4342ce    add [rax], al
0x4342d0    ret

------> offset: 0x434306
0x434306    mov eax, 0xffffffff894c1f74
0x43430b    ret 0x6348

------> offset: 0x43430b
0x43430b    ret 0x6348

------> offset: 0x434319
0x434319    cmp rax, 0xfffffffffffff000
0x43431f    ja 0x434390
0x434321    ret

------> offset: 0x43431a
0x43431a    cmp eax, 0xfffffffffffff000
0x43431f    ja 0x434390
0x434321    ret

------> offset: 0x43431e
0x43431e    push qword [rdi+0x6f]
0x434321    ret

------> offset: 0x43431f
0x43431f    ja 0x434390
0x434321    ret

------> offset: 0x43435b
0x43435b    fiadd dword [rbx+0x298247c]
0x434361    cmovz eax, edx
0x434364    ret

------> offset: 0x43435c
0x43435c    cmp dword [rsp-0x68], 0x2
0x434361    cmovz eax, edx
0x434364    ret

------> offset: 0x43435d
0x43435d    jl 0x434383
0x43435f    cwde
0x434360    add cl, [rdi]
0x434362    ret 0xfc3

------> offset: 0x43435e
0x43435e    and al, 0x98
0x434360    add cl, [rdi]
0x434362    ret 0xfc3

------> offset: 0x43435f
0x43435f    cwde
0x434360    add cl, [rdi]
0x434362    ret 0xfc3

------> offset: 0x434360
0x434360    add cl, [rdi]
0x434362    ret 0xfc3

------> offset: 0x434361
0x434361    cmovz eax, edx
0x434364    ret

------> offset: 0x43436f
0x43436f    ret 0x9be

------> offset: 0x434386
0x434386    add eax, 0x28e501
0x43438b    add [rax], eax
0x43438d    add [rax], al
0x43438f    ret

------> offset: 0x434387
0x434387    add ebp, esp
0x434389    sub [rax], al
0x43438b    add [rax], eax
0x43438d    add [rax], al
0x43438f    ret

------> offset: 0x434389
0x434389    sub [rax], al
0x43438b    add [rax], eax
0x43438d    add [rax], al
0x43438f    ret

------> offset: 0x43438b
0x43438b    add [rax], eax
0x43438d    add [rax], al
0x43438f    ret

------> offset: 0x4343b2
0x4343b2    fisub dword [rcx+rcx*4+0x10]
0x4343b6    mov eax, 0xffffffffffffffff
0x4343bb    ret

------> offset: 0x4343b3
0x4343b3    mov [fs:rax], edx
0x4343b6    mov eax, 0xffffffffffffffff
0x4343bb    ret

------> offset: 0x4343b4
0x4343b4    mov [rax], edx
0x4343b6    mov eax, 0xffffffffffffffff
0x4343bb    ret

------> offset: 0x4343b5
0x4343b5    adc [rax-0x1], bh
0x4343bb    ret

------> offset: 0x434427
0x434427    fadd qword [rax]
0x434429    add [rax], al
0x43442b    add rsp, 0x70
0x43442f    pop rbx
0x434430    ret

------> offset: 0x434429
0x434429    add [rax], al
0x43442b    add rsp, 0x70
0x43442f    pop rbx
0x434430    ret

------> offset: 0x43442e
0x43442e    jo 0x43448b
0x434430    ret

------> offset: 0x434467
0x434467    adc al, 0x89
0x434469    ret 0xdaf7

------> offset: 0x43446e
0x43446e    and al, 0x10
0x434470    add cl, [rdi]
0x434472    ret 0xb5eb

------> offset: 0x434470
0x434470    add cl, [rdi]
0x434472    ret 0xb5eb

------> offset: 0x434472
0x434472    ret 0xb5eb

------> offset: 0x434506
0x434506    dec dword [rax-0x39]
0x434509    ret 0xffc0

------> offset: 0x434565
0x434565    dec dword [rdi]
0x434567    xor dword [rbx+rax*2+0x0], 0x0
0x43456c    ret

------> offset: 0x434567
0x434567    xor dword [rbx+rax*2+0x0], 0x0
0x43456c    ret

------> offset: 0x434568
0x434568    jz 0x4345ad
0x43456a    add [rax], al
0x43456c    ret

------> offset: 0x434569
0x434569    add [r8], al
0x43456c    ret

------> offset: 0x434587
0x434587    ret 0x93e8

------> offset: 0x434760
0x434760    retf 0x3

------> offset: 0x434959
0x434959    fisttp word [rax-0x77]
0x43495c    ret 0x14c

------> offset: 0x43495c
0x43495c    ret 0x14c

------> offset: 0x434982
0x434982    cmp [rax-0x77], cl
0x434985    retf 0x8948

------> offset: 0x434a17
0x434a17    jp 0x434a62
0x434a19    add al, ch
0x434a1b    push rcx
0x434a1c    iret

------> offset: 0x434a18
0x434a18    add r8b, bpl
0x434a1b    push rcx
0x434a1c    iret

------> offset: 0x434a19
0x434a19    add al, ch
0x434a1b    push rcx
0x434a1c    iret

------> offset: 0x434c5f
0x434c5f    jge 0x434c9d
0x434c61    add [rax], al
0x434c63    ret

------> offset: 0x434ca9
0x434ca9    add rsp, 0x8
0x434cad    mov rax, rbx
0x434cb0    pop rbx
0x434cb1    pop rbp
0x434cb2    ret

------> offset: 0x434caa
0x434caa    add esp, 0x8
0x434cad    mov rax, rbx
0x434cb0    pop rbx
0x434cb1    pop rbp
0x434cb2    ret

------> offset: 0x434cac
0x434cac    or [rax-0x77], cl
0x434caf    fcomp dword [rbx+0x5d]
0x434cb2    ret

------> offset: 0x434cad
0x434cad    mov rax, rbx
0x434cb0    pop rbx
0x434cb1    pop rbp
0x434cb2    ret

------> offset: 0x434cae
0x434cae    mov eax, ebx
0x434cb0    pop rbx
0x434cb1    pop rbp
0x434cb2    ret

------> offset: 0x434caf
0x434caf    fcomp dword [rbx+0x5d]
0x434cb2    ret

------> offset: 0x434d05
0x434d05    sub [rax], al
0x434d07    test rax, rax
0x434d0a    jz 0x434d0e
0x434d0c    ret

------> offset: 0x434d07
0x434d07    test rax, rax
0x434d0a    jz 0x434d0e
0x434d0c    ret

------> offset: 0x434d08
0x434d08    test eax, eax
0x434d0a    jz 0x434d0e
0x434d0c    ret

------> offset: 0x434d0a
0x434d0a    jz 0x434d0e
0x434d0c    ret

------> offset: 0x434d0b
0x434d0b    add dh, bl
0x434d0d    ret

------> offset: 0x434d49
0x434d49    adc al, 0x24
0x434d4c    add rsp, 0x18
0x434d50    mov eax, edx
0x434d52    ret

------> offset: 0x434d4b
0x434d4b    and al, 0x48
0x434d4d    add esp, 0x18
0x434d50    mov eax, edx
0x434d52    ret

------> offset: 0x434d4c
0x434d4c    add rsp, 0x18
0x434d50    mov eax, edx
0x434d52    ret

------> offset: 0x434d4d
0x434d4d    add esp, 0x18
0x434d50    mov eax, edx
0x434d52    ret

------> offset: 0x434d5f
0x434d5f    add [rcx-0x77], cl
0x434d62    retf 0x9b8

------> offset: 0x434d62
0x434d62    retf 0x9b8

------> offset: 0x434d72
0x434d72    push 0x3b
0x434d74    add [rax], al
0x434d76    ret

------> offset: 0x435127
0x435127    imul eax
0x435129    ret

------> offset: 0x4353df
0x4353df    add [rax-0x73], cl
0x4353e2    push rbx
0x4353e3    or [rax-0x7d], cl
0x4353e6    ret

------> offset: 0x4353e2
0x4353e2    push rbx
0x4353e3    or [rax-0x7d], cl
0x4353e6    ret

------> offset: 0x4353e3
0x4353e3    or [rax-0x7d], cl
0x4353e6    ret

------> offset: 0x435482
0x435482    lahf
0x435483    ret

------> offset: 0x435489
0x435489    lahf
0x43548a    ret 0x3845

------> offset: 0x43548a
0x43548a    ret 0x3845

------> offset: 0x435541
0x435541    mov dh, 0x57
0x435543    sbb [rcx-0xa], al
0x435546    ret 0x7401

------> offset: 0x435542
0x435542    push rdi
0x435543    sbb [rcx-0xa], al
0x435546    ret 0x7401

------> offset: 0x435543
0x435543    sbb [rcx-0xa], al
0x435546    ret 0x7401

------> offset: 0x43555c
0x43555c    test [rax+rax-0x7cbf0000], al
0x435563    retf 0x4401

------> offset: 0x43555e
0x43555e    add [rax], al
0x435560    add [rcx-0x7d], al
0x435563    retf 0x4401

------> offset: 0x435560
0x435560    add [rcx-0x7d], al
0x435563    retf 0x4401

------> offset: 0x435563
0x435563    retf 0x4401

------> offset: 0x4356a8
0x4356a8    jnz 0x435688
0x4356aa    pop rbx
0x4356ab    pop rbp
0x4356ac    xor eax, eax
0x4356ae    pop r12
0x4356b0    ret

------> offset: 0x4356a9
0x4356a9    ficomp word [rbx+0x5d]
0x4356ac    xor eax, eax
0x4356ae    pop r12
0x4356b0    ret

------> offset: 0x436613
0x436613    out 0xff, eax
0x436615    shr ebx, cl
0x436617    retf 0x1f0f

------> offset: 0x436615
0x436615    shr ebx, cl
0x436617    retf 0x1f0f

------> offset: 0x43668c
0x43668c    shr ecx, cl
0x43668e    ret

------> offset: 0x436a4b
0x436a4b    add byte [rax], 0x0
0x436a4e    add [rax], al
0x436a50    pop rbx
0x436a51    pop rbp
0x436a52    pop r12
0x436a54    ret

------> offset: 0x436abc
0x436abc    ror [rax+0xf], cl
0x436abf    ret

------> offset: 0x436b5b
0x436b5b    add ecx, [rax-0x7b]
0x436b5e    ror byte [rax+0xf], 0x48
0x436b62    ret 0xc148

------> offset: 0x436b5e
0x436b5e    ror byte [rax+0xf], 0x48
0x436b62    ret 0xc148

------> offset: 0x436c9e
0x436c9e    add rsp, 0x2018
0x436ca5    pop rbx
0x436ca6    pop rbp
0x436ca7    ret

------> offset: 0x436c9f
0x436c9f    add esp, 0x2018
0x436ca5    pop rbx
0x436ca6    pop rbp
0x436ca7    ret

------> offset: 0x436ca1
0x436ca1    sbb [rax], ah
0x436ca3    add [rax], al
0x436ca5    pop rbx
0x436ca6    pop rbp
0x436ca7    ret

------> offset: 0x436ca2
0x436ca2    and [rax], al
0x436ca4    add [rbx+0x5d], bl
0x436ca7    ret

------> offset: 0x436d02
0x436d02    mov [0x840fc739480028bb], al
0x436d0b    iret

------> offset: 0x436dbb
0x436dbb    push rbp
0x436dbc    mov al, 0x29
0x436dbe    retf

------> offset: 0x436dbc
0x436dbc    mov al, 0x29
0x436dbe    retf

------> offset: 0x436e87
0x436e87    ret 0x28eb

------> offset: 0x436ef4
0x436ef4    sar byte [rsi+0x80000], 0xbf
0x436efb    ret

------> offset: 0x436f25
0x436f25    ret 0x2ceb

------> offset: 0x436f40
0x436f40    xchg edx, eax
0x436f41    ret 0x970f

------> offset: 0x436f41
0x436f41    ret 0x970f

------> offset: 0x437009
0x437009    call 0x1107f356
0x43700e    pop rbx
0x43700f    pop rbp
0x437010    pop r12
0x437012    ret

------> offset: 0x437047
0x437047    add [fs:rax], al
0x43704a    add [rbp-0x3dbaf02e], al
0x437050    ret

------> offset: 0x437048
0x437048    add [rax], al
0x43704a    add [rbp-0x3dbaf02e], al
0x437050    ret

------> offset: 0x437049
0x437049    add [rax], al
0x43704b    test edx, edx
0x43704d    cmovnz eax, edx
0x437050    ret

------> offset: 0x43704a
0x43704a    add [rbp-0x3dbaf02e], al
0x437050    ret

------> offset: 0x43704b
0x43704b    test edx, edx
0x43704d    cmovnz eax, edx
0x437050    ret

------> offset: 0x43704c
0x43704c    ror [rdi], cl
0x43704e    ret 0x66c3

------> offset: 0x43709c
0x43709c    mov al, [0x5d5b08c483480028]
0x4370a5    ret

------> offset: 0x43709d
0x43709d    sub [rax], al
0x43709f    add rsp, 0x8
0x4370a3    pop rbx
0x4370a4    pop rbp
0x4370a5    ret

------> offset: 0x4370c8
0x4370c8    adc al, 0x18
0x4370ca    add [rax], al
0x4370cc    ret

------> offset: 0x4370e7
0x4370e7    ret 0x33e8

------> offset: 0x4370f9
0x4370f9    dec dword [rdi]
0x4370fb    and eax, 0x17
0x4370fe    add [rax], al
0x437100    ret

------> offset: 0x4370fb
0x4370fb    and eax, 0x17
0x4370fe    add [rax], al
0x437100    ret

------> offset: 0x4370fc
0x4370fc    loopnz 0x437115
0x4370fe    add [rax], al
0x437100    ret

------> offset: 0x43710f
0x43710f    add [rcx-0x77], cl
0x437112    retf 0x19b8

------> offset: 0x437112
0x437112    retf 0x19b8

------> offset: 0x437166
0x437166    sal byte [rcx], 0x1
0x437168    ror byte [rax+0x39], 0xfa
0x43716c    setae al
0x43716f    ret

------> offset: 0x437167
0x437167    xor eax, eax
0x437169    cmp rdx, rdi
0x43716c    setae al
0x43716f    ret

------> offset: 0x437168
0x437168    ror byte [rax+0x39], 0xfa
0x43716c    setae al
0x43716f    ret

------> offset: 0x437169
0x437169    cmp rdx, rdi
0x43716c    setae al
0x43716f    ret

------> offset: 0x43716a
0x43716a    cmp edx, edi
0x43716c    setae al
0x43716f    ret

------> offset: 0x43716b
0x43716b    cli
0x43716c    setae al
0x43716f    ret

------> offset: 0x43716c
0x43716c    setae al
0x43716f    ret

------> offset: 0x43718d
0x43718d    xchg [rdi], eax
0x43718f    test eax, eax
0x437191    jnz 0x437184
0x437193    pop rdx
0x437194    pop r10
0x437196    ret

------> offset: 0x43718f
0x43718f    test eax, eax
0x437191    jnz 0x437184
0x437193    pop rdx
0x437194    pop r10
0x437196    ret

------> offset: 0x437190
0x437190    sal byte [rbp-0xf], 0x5a
0x437194    pop r10
0x437196    ret

------> offset: 0x437191
0x437191    jnz 0x437184
0x437193    pop rdx
0x437194    pop r10
0x437196    ret

------> offset: 0x437192
0x437192    int1
0x437193    pop rdx
0x437194    pop r10
0x437196    ret

------> offset: 0x437193
0x437193    pop rdx
0x437194    pop r10
0x437196    ret

------> offset: 0x437194
0x437194    pop r10
0x437196    ret

------> offset: 0x437195
0x437195    pop rdx
0x437196    ret

------> offset: 0x4371b2
0x4371b2    mov eax, 0xca
0x4371b7    syscall
0x4371b9    pop rdx
0x4371ba    pop rsi
0x4371bb    ret

------> offset: 0x4371b5
0x4371b5    add [rax], al
0x4371b7    syscall
0x4371b9    pop rdx
0x4371ba    pop rsi
0x4371bb    ret

------> offset: 0x4371b7
0x4371b7    syscall
0x4371b9    pop rdx
0x4371ba    pop rsi
0x4371bb    ret

------> offset: 0x4371b9
0x4371b9    pop rdx
0x4371ba    pop rsi
0x4371bb    ret

------> offset: 0x4371c5
0x4371c5    add eax, [rax]
0x4371c7    add [rcx-0x77], al
0x4371ca    ret

------> offset: 0x4371c7
0x4371c7    add [rcx-0x77], al
0x4371ca    ret

------> offset: 0x4371ce
0x4371ce    add al, [rcx+0x39]
0x4371d1    ret

------> offset: 0x4371e2
0x4371e2    and ebx, -0x45
0x4371e5    cmp r11d, 0xa
0x4371e9    jz 0x4371ec
0x4371eb    ret

------> offset: 0x4371e3
0x4371e3    jrcxz 0x4371a0
0x4371e5    cmp r11d, 0xa
0x4371e9    jz 0x4371ec
0x4371eb    ret

------> offset: 0x4371e4
0x4371e4    mov ebx, 0xafb8341
0x4371e9    jz 0x4371ec
0x4371eb    ret

------> offset: 0x4371e5
0x4371e5    cmp r11d, 0xa
0x4371e9    jz 0x4371ec
0x4371eb    ret

------> offset: 0x4371e6
0x4371e6    cmp ebx, 0xa
0x4371e9    jz 0x4371ec
0x4371eb    ret

------> offset: 0x4371e9
0x4371e9    jz 0x4371ec
0x4371eb    ret

------> offset: 0x437247
0x437247    and eax, 0xc
0x43724a    cmp eax, 0x4
0x43724d    jz 0x437250
0x43724f    ret

------> offset: 0x437248
0x437248    loopnz 0x437256
0x43724a    cmp eax, 0x4
0x43724d    jz 0x437250
0x43724f    ret

------> offset: 0x43724a
0x43724a    cmp eax, 0x4
0x43724d    jz 0x437250
0x43724f    ret

------> offset: 0x43724d
0x43724d    jz 0x437250
0x43724f    ret

------> offset: 0x43733e
0x43733e    int 0x28
0x437340    add [rax+0x39], cl
0x437343    ret 0xda75

------> offset: 0x437340
0x437340    add [rax+0x39], cl
0x437343    ret 0xda75

------> offset: 0x437343
0x437343    ret 0xda75

------> offset: 0x437373
0x437373    adc [rbx+0x5d], bl
0x437376    and eax, 0xc
0x437379    pop r12
0x43737b    ret

------> offset: 0x437374
0x437374    pop rbx
0x437375    pop rbp
0x437376    and eax, 0xc
0x437379    pop r12
0x43737b    ret

------> offset: 0x437375
0x437375    pop rbp
0x437376    and eax, 0xc
0x437379    pop r12
0x43737b    ret

------> offset: 0x437376
0x437376    and eax, 0xc
0x437379    pop r12
0x43737b    ret

------> offset: 0x437377
0x437377    loopnz 0x437385
0x437379    pop r12
0x43737b    ret

------> offset: 0x437378
0x437378    or al, 0x41
0x43737a    pop rsp
0x43737b    ret

------> offset: 0x4373ee
0x4373ee    int 3
0x4373ef    sub [rax], al
0x4373f1    cmp rdx, rax
0x4373f4    jnz 0x4373d0
0x4373f6    ret

------> offset: 0x4373ef
0x4373ef    sub [rax], al
0x4373f1    cmp rdx, rax
0x4373f4    jnz 0x4373d0
0x4373f6    ret

------> offset: 0x4373f1
0x4373f1    cmp rdx, rax
0x4373f4    jnz 0x4373d0
0x4373f6    ret

------> offset: 0x4373f2
0x4373f2    cmp edx, eax
0x4373f4    jnz 0x4373d0
0x4373f6    ret

------> offset: 0x4373f4
0x4373f4    jnz 0x4373d0
0x4373f6    ret

------> offset: 0x43746d
0x43746d    xchg edi, eax
0x43746e    ror byte [rdi], 0x92
0x437471    ret 0xd029

------> offset: 0x43746e
0x43746e    ror byte [rdi], 0x92
0x437471    ret 0xd029

------> offset: 0x437470
0x437470    xchg edx, eax
0x437471    ret 0xd029

------> offset: 0x437471
0x437471    ret 0xd029

------> offset: 0x437476
0x437476    rol byte [rbx-0x24e6fe08], 0x83
0x43747d    ret

------> offset: 0x43747e
0x43747e    add dl, [rax+0x31058b48]
0x437484    retf

------> offset: 0x437501
0x437501    ret 0x3b01

------> offset: 0x43750e
0x43750e    or [rcx], dh
0x437510    rcr byte [rbx+0x41], 0x5c
0x437514    pop r13
0x437516    pop rbp
0x437517    ret

------> offset: 0x43750f
0x43750f    xor eax, eax
0x437511    pop rbx
0x437512    pop r12
0x437514    pop r13
0x437516    pop rbp
0x437517    ret

------> offset: 0x437510
0x437510    rcr byte [rbx+0x41], 0x5c
0x437514    pop r13
0x437516    pop rbp
0x437517    ret

------> offset: 0x437536
0x437536    add [rax], al
0x437538    add [rbx+0x41], bl
0x43753b    pop rsp
0x43753c    pop r13
0x43753e    pop rbp
0x43753f    ret

------> offset: 0x437537
0x437537    add [rax], al
0x437539    pop rbx
0x43753a    pop r12
0x43753c    pop r13
0x43753e    pop rbp
0x43753f    ret

------> offset: 0x437538
0x437538    add [rbx+0x41], bl
0x43753b    pop rsp
0x43753c    pop r13
0x43753e    pop rbp
0x43753f    ret

------> offset: 0x43757e
0x43757e    enter 0x8348, 0x7c
0x437582    retf 0x1f8

------> offset: 0x437580
0x437580    cmp dword [rdx+rcx*8-0x8], 0x1
0x437585    sbb eax, 0x0
0x437588    leave
0x437589    ret

------> offset: 0x437582
0x437582    retf 0x1f8

------> offset: 0x437585
0x437585    sbb eax, 0x0
0x437588    leave
0x437589    ret

------> offset: 0x437586
0x437586    fadd dword [rax]
0x437588    leave
0x437589    ret

------> offset: 0x43758a
0x43758a    cmp eax, -0x1
0x43758d    jnz 0x437588
0x43758f    nop
0x437590    xor eax, eax
0x437592    leave
0x437593    ret

------> offset: 0x43758b
0x43758b    clc
0x43758c    push qword [rbp-0x7]
0x43758f    nop
0x437590    xor eax, eax
0x437592    leave
0x437593    ret

------> offset: 0x43758c
0x43758c    push qword [rbp-0x7]
0x43758f    nop
0x437590    xor eax, eax
0x437592    leave
0x437593    ret

------> offset: 0x43758d
0x43758d    jnz 0x437588
0x43758f    nop
0x437590    xor eax, eax
0x437592    leave
0x437593    ret

------> offset: 0x43758e
0x43758e    stc
0x43758f    nop
0x437590    xor eax, eax
0x437592    leave
0x437593    ret

------> offset: 0x43758f
0x43758f    nop
0x437590    xor eax, eax
0x437592    leave
0x437593    ret

------> offset: 0x437590
0x437590    xor eax, eax
0x437592    leave
0x437593    ret

------> offset: 0x437760
0x437760    mov [rax+rcx*4], gs
0x437763    add [rax], al
0x437765    add [rax-0x7d], cl
0x437768    ret

------> offset: 0x437761
0x437761    sub al, 0x88
0x437763    add [rax], al
0x437765    add [rax-0x7d], cl
0x437768    ret

------> offset: 0x43797d
0x43797d    xchg ebp, eax
0x43797e    ret 0xd009

------> offset: 0x43797e
0x43797e    ret 0xd009

------> offset: 0x4379a4
0x4379a4    retf 0xe904

------> offset: 0x4379d4
0x4379d4    retf 0xe901

------> offset: 0x4379f4
0x4379f4    retf 0xe902

------> offset: 0x437a34
0x437a34    retf 0xe908

------> offset: 0x437a92
0x437a92    ret 0x289b

------> offset: 0x437abb
0x437abb    mov bl, 0x7e
0x437abd    add [r8+0x9], cl
0x437ac1    ret 0x8948

------> offset: 0x437abc
0x437abc    jle 0x437b07
0x437abe    add [rax+0x9], cl
0x437ac1    ret 0x8948

------> offset: 0x437abd
0x437abd    add [r8+0x9], cl
0x437ac1    ret 0x8948

------> offset: 0x437abe
0x437abe    add [rax+0x9], cl
0x437ac1    ret 0x8948

------> offset: 0x437b5d
0x437b5d    add [rax-0x7d], ecx
0x437b60    ret 0x4838

------> offset: 0x437b60
0x437b60    ret 0x4838

------> offset: 0x437f3e
0x437f3e    fucomip st0, st0
0x437f40    lodsb
0x437f41    retf

------> offset: 0x437f40
0x437f40    lodsb
0x437f41    retf

------> offset: 0x437f89
0x437f89    xor [rdi+0x49], bh
0x437f8c    add [rax+0xf], cl
0x437f8f    ret

------> offset: 0x437f8a
0x437f8a    jg 0x437fd5
0x437f8c    add [rax+0xf], cl
0x437f8f    ret

------> offset: 0x437f8b
0x437f8b    add [r8+0xf], cl
0x437f8f    ret

------> offset: 0x437f8c
0x437f8c    add [rax+0xf], cl
0x437f8f    ret

------> offset: 0x437fa9
0x437fa9    cmp al, 0x7f
0x437fab    add [r8+0xf], cl
0x437faf    ret

------> offset: 0x437faa
0x437faa    jg 0x437ff5
0x437fac    add [rax+0xf], cl
0x437faf    ret

------> offset: 0x437fc9
0x437fc9    jg 0x438015
0x437fcc    add [rax+0xf], cl
0x437fcf    ret

------> offset: 0x43811f
0x43811f    test [rcx+rax+0x0], cl
0x438123    add [rax-0x7d], cl
0x438126    ret 0x4801

------> offset: 0x438120
0x438120    add [rax], r8
0x438123    add [rax-0x7d], cl
0x438126    ret 0x4801

------> offset: 0x438121
0x438121    add [rax], eax
0x438123    add [rax-0x7d], cl
0x438126    ret 0x4801

------> offset: 0x438123
0x438123    add [rax-0x7d], cl
0x438126    ret 0x4801

------> offset: 0x438127
0x438127    add [rax+0x39], ecx
0x43812a    retf 0xe375

------> offset: 0x43812a
0x43812a    retf 0xe375

------> offset: 0x438474
0x438474    retf 0x8d4d

------> offset: 0x4386c2
0x4386c2    sub [rbx-0x26], sil
0x4386c6    mov eax, 0x1
0x4386cb    ret

------> offset: 0x4386c3
0x4386c3    sub [rbx-0x26], dh
0x4386c6    mov eax, 0x1
0x4386cb    ret

------> offset: 0x4386c4
0x4386c4    jae 0x4386a0
0x4386c6    mov eax, 0x1
0x4386cb    ret

------> offset: 0x4386c5
0x4386c5    fidivr dword [rax+0x1]
0x4386cb    ret

------> offset: 0x4386c6
0x4386c6    mov eax, 0x1
0x4386cb    ret

------> offset: 0x4386ca
0x4386ca    add bl, al
0x4386cc    nop dword [rax+0x0]
0x4386d0    xor eax, eax
0x4386d2    ret

------> offset: 0x4386cc
0x4386cc    nop dword [rax+0x0]
0x4386d0    xor eax, eax
0x4386d2    ret

------> offset: 0x4386e1
0x4386e1    add eax, 0x28b8c2
0x4386e6    test eax, eax
0x4386e8    jz 0x4386f0
0x4386ea    ret

------> offset: 0x4386e2
0x4386e2    ret 0x28b8

------> offset: 0x4386e3
0x4386e3    mov eax, 0xffffffffc0850028
0x4386e8    jz 0x4386f0
0x4386ea    ret

------> offset: 0x4386e4
0x4386e4    sub [rax], al
0x4386e6    test eax, eax
0x4386e8    jz 0x4386f0
0x4386ea    ret

------> offset: 0x4386e6
0x4386e6    test eax, eax
0x4386e8    jz 0x4386f0
0x4386ea    ret

------> offset: 0x4386e8
0x4386e8    jz 0x4386f0
0x4386ea    ret

------> offset: 0x4386fa
0x4386fa    movsxd eax, [rdx]
0x4386fc    add [rcx], bh
0x4386fe    ret

------> offset: 0x4386fc
0x4386fc    add [rcx], bh
0x4386fe    ret

------> offset: 0x438704
0x438704    jz 0x438710
0x438706    mov [rip+0x28788c], edx
0x43870c    pop rbx
0x43870d    ret

------> offset: 0x438706
0x438706    mov [rip+0x28788c], edx
0x43870c    pop rbx
0x43870d    ret

------> offset: 0x438707
0x438707    adc eax, 0x28788c
0x43870c    pop rbx
0x43870d    ret

------> offset: 0x43870a
0x43870a    sub [rax], al
0x43870c    pop rbx
0x43870d    ret

------> offset: 0x438719
0x438719    movsxd eax, [rdx]
0x43871b    add [rcx], dh
0x43871d    sar [rcx], cl
0x43871f    ret

------> offset: 0x43871b
0x43871b    add [rcx], dh
0x43871d    sar [rcx], cl
0x43871f    ret

------> offset: 0x43871d
0x43871d    sar [rcx], cl
0x43871f    ret

------> offset: 0x438721
0x438721    xchg ebp, eax
0x438722    ret 0xe1eb

------> offset: 0x438722
0x438722    ret 0xe1eb

------> offset: 0x4387af
0x4387af    add rsp, 0x1d8
0x4387b6    pop rbx
0x4387b7    pop rbp
0x4387b8    ret

------> offset: 0x4387b0
0x4387b0    add esp, 0x1d8
0x4387b6    pop rbx
0x4387b7    pop rbp
0x4387b8    ret

------> offset: 0x4387b2
0x4387b2    fadd dword [rcx]
0x4387b4    add [rax], al
0x4387b6    pop rbx
0x4387b7    pop rbp
0x4387b8    ret

------> offset: 0x4387b3
0x4387b3    add [rax], eax
0x4387b5    add [rbx+0x5d], bl
0x4387b8    ret

------> offset: 0x4387cc
0x4387cc    sub ecx, eax
0x4387ce    shl ecx, 0x3
0x4387d1    pop rbx
0x4387d2    shl eax, cl
0x4387d4    pop rbp
0x4387d5    ret

------> offset: 0x4387cd
0x4387cd    rol ecx, 0xe1
0x4387d0    add ebx, [rbx-0x2d]
0x4387d3    loopnz 0x438832
0x4387d5    ret

------> offset: 0x4387ce
0x4387ce    shl ecx, 0x3
0x4387d1    pop rbx
0x4387d2    shl eax, cl
0x4387d4    pop rbp
0x4387d5    ret

------> offset: 0x4387cf
0x4387cf    loopz 0x4387d4
0x4387d1    pop rbx
0x4387d2    shl eax, cl
0x4387d4    pop rbp
0x4387d5    ret

------> offset: 0x4387d0
0x4387d0    add ebx, [rbx-0x2d]
0x4387d3    loopnz 0x438832
0x4387d5    ret

------> offset: 0x4387d1
0x4387d1    pop rbx
0x4387d2    shl eax, cl
0x4387d4    pop rbp
0x4387d5    ret

------> offset: 0x4387d2
0x4387d2    shl eax, cl
0x4387d4    pop rbp
0x4387d5    ret

------> offset: 0x4387d3
0x4387d3    loopnz 0x438832
0x4387d5    ret

------> offset: 0x4388e6
0x4388e6    and eax, 0xffffffffffffffc0
0x4388eb    or rax, -0x1
0x4388ef    ret

------> offset: 0x4388f4
0x4388f4    mov [0x589756e6547fb81], al
0x4388fd    ret

------> offset: 0x438991
0x438991    mov [rip+0x28b628], r8d
0x438998    pop rbx
0x438999    ret

------> offset: 0x438992
0x438992    mov [rip+0x28b628], eax
0x438998    pop rbx
0x438999    ret

------> offset: 0x438993
0x438993    add eax, 0x28b628
0x438998    pop rbx
0x438999    ret

------> offset: 0x4389ec
0x4389ec    add [rbx-0x76bef019], al
0x4389f2    ret 0xb8

------> offset: 0x438ad5
0x438ad5    ret 0xefc1

------> offset: 0x438ae1
0x438ae1    ret 0xe783

------> offset: 0x438bd6
0x438bd6    test eax, eax
0x438bd8    jz 0x438be0
0x438bda    mov eax, 0x6c3fc0
0x438bdf    ret

------> offset: 0x438bd8
0x438bd8    jz 0x438be0
0x438bda    mov eax, 0x6c3fc0
0x438bdf    ret

------> offset: 0x438bda
0x438bda    mov eax, 0x6c3fc0
0x438bdf    ret

------> offset: 0x438c25
0x438c25    ret 0xc141

------> offset: 0x438d6b
0x438d6b    mov [rip+0x28b24f], edi
0x438d71    pop rbx
0x438d72    ret

------> offset: 0x438d6c
0x438d6c    cmp eax, 0x28b24f
0x438d71    pop rbx
0x438d72    ret

------> offset: 0x4391a7
0x4391a7    retf 0x1fe0

------> offset: 0x4391ca
0x4391ca    cwde
0x4391cc    add [rax-0x7d], ecx
0x4391cf    ret

------> offset: 0x43922c
0x43922c    dec dword [rax-0x73]
0x43922f    and [rax-0x77], rcx
0x439233    ret 0x894c

------> offset: 0x43922f
0x43922f    and [rax-0x77], rcx
0x439233    ret 0x894c

------> offset: 0x439230
0x439230    and [rax-0x77], ecx
0x439233    ret 0x894c

------> offset: 0x43948f
0x43948f    test cl, al
0x439491    add [rax], al
0x439493    add [rax-0x77], cl
0x439496    retf 0xb60f

------> offset: 0x439490
0x439490    rol dword [rax], 0x0
0x439493    add [rax-0x77], cl
0x439496    retf 0xb60f

------> offset: 0x439491
0x439491    add [rax], al
0x439493    add [rax-0x77], cl
0x439496    retf 0xb60f

------> offset: 0x439493
0x439493    add [rax-0x77], cl
0x439496    retf 0xb60f

------> offset: 0x439557
0x439557    add [rax-0x77], cl
0x43955a    retf 0x3ee9

------> offset: 0x43955a
0x43955a    retf 0x3ee9

------> offset: 0x43957b
0x43957b    cmovns eax, [rbx-0x76b30f1f]
0x439582    iret

------> offset: 0x43980a
0x43980a    and al, 0x0
0x43980c    add [rax], al
0x43980e    add [rax-0x7d], cl
0x439811    ret 0x4801

------> offset: 0x43980c
0x43980c    add [rax], al
0x43980e    add [rax-0x7d], cl
0x439811    ret 0x4801

------> offset: 0x439841
0x439841    ret 0x48e9

------> offset: 0x43996a
0x43996a    ret 0xfc69

------> offset: 0x43996d
0x43996d    jmp qword [rsi-0x70]
0x439970    add rsp, 0x8
0x439974    pop rbx
0x439975    pop rbp
0x439976    ret

------> offset: 0x43996e
0x43996e    nop
0x439970    add rsp, 0x8
0x439974    pop rbx
0x439975    pop rbp
0x439976    ret

------> offset: 0x43997e
0x43997e    add [rax], al
0x439980    mov rax, [rip+0x28a681]
0x439987    ret

------> offset: 0x43997f
0x43997f    add [rax-0x75], cl
0x439982    add eax, 0x28a681
0x439987    ret

------> offset: 0x439980
0x439980    mov rax, [rip+0x28a681]
0x439987    ret

------> offset: 0x439981
0x439981    mov eax, [rip+0x28a681]
0x439987    ret

------> offset: 0x439982
0x439982    add eax, 0x28a681
0x439987    ret

------> offset: 0x439984
0x439984    cmpsb
0x439985    sub [rax], al
0x439987    ret

------> offset: 0x439985
0x439985    sub [rax], al
0x439987    ret

------> offset: 0x439e14
0x439e14    xchg [rbp+rcx*4+0x74], ecx
0x439e18    ret

------> offset: 0x43a375
0x43a375    test [rbp+rcx*4+0x2c], cl
0x43a379    ret

------> offset: 0x43a433
0x43a433    add eax, [rax]
0x43a435    add [rax], al
0x43a437    add [rax-0x7d], cl
0x43a43a    ret

------> offset: 0x43a490
0x43a490    test [rax-0x39], cl
0x43a493    ret

------> offset: 0x43a4da
0x43a4da    and al, 0x48
0x43a4dc    add esp, 0x28
0x43a4df    pop rbx
0x43a4e0    pop rbp
0x43a4e1    ret

------> offset: 0x43a5fc
0x43a5fc    ret 0x3974

------> offset: 0x43a8f8
0x43a8f8    pop rbp
0x43a8f9    pop r12
0x43a8fb    pop r13
0x43a8fd    xor eax, eax
0x43a8ff    pop r14
0x43a901    ret

------> offset: 0x43a8f9
0x43a8f9    pop r12
0x43a8fb    pop r13
0x43a8fd    xor eax, eax
0x43a8ff    pop r14
0x43a901    ret

------> offset: 0x43a8fa
0x43a8fa    pop rsp
0x43a8fb    pop r13
0x43a8fd    xor eax, eax
0x43a8ff    pop r14
0x43a901    ret

------> offset: 0x43a8fb
0x43a8fb    pop r13
0x43a8fd    xor eax, eax
0x43a8ff    pop r14
0x43a901    ret

------> offset: 0x43a8fc
0x43a8fc    pop rbp
0x43a8fd    xor eax, eax
0x43a8ff    pop r14
0x43a901    ret

------> offset: 0x43a8fd
0x43a8fd    xor eax, eax
0x43a8ff    pop r14
0x43a901    ret

------> offset: 0x43aa0e
0x43aa0e    and [rax-0x7d], cl
0x43aa11    ret

------> offset: 0x43aa25
0x43aa25    add [rbx+0x5d], bl
0x43aa28    pop r12
0x43aa2a    pop r13
0x43aa2c    pop r14
0x43aa2e    ret

------> offset: 0x43aa5c
0x43aa5c    shr ebx, cl
0x43aa5e    ret

------> offset: 0x43ab59
0x43ab59    ret 0x44f6

------> offset: 0x43aeab
0x43aeab    ret 0x8d4c

------> offset: 0x43b052
0x43b052    ret 0x774

------> offset: 0x43b05e
0x43b05e    ret 0x2b49

------> offset: 0x43b314
0x43b314    ret 0xf641

------> offset: 0x43b3cd
0x43b3cd    test ah, dl
0x43b3cf    add [rax], eax
0x43b3d1    add [rax-0x7d], cl
0x43b3d4    ret

------> offset: 0x43b54c
0x43b54c    add [rax-0x7d], cl
0x43b54f    ret 0x8801

------> offset: 0x43b7a6
0x43b7a6    ret 0x4981

------> offset: 0x43b8e2
0x43b8e2    mov esi, 0x4a890b40
0x43b8e7    push rax
0x43b8e8    mov [rdx+0x54], eax
0x43b8eb    ret

------> offset: 0x43b8e3
0x43b8e3    or ecx, [rcx+0x4289504a]
0x43b8ea    push rsp
0x43b8eb    ret

------> offset: 0x43b8e5
0x43b8e5    mov [rdx+0x50], ecx
0x43b8e8    mov [rdx+0x54], eax
0x43b8eb    ret

------> offset: 0x43b8e6
0x43b8e6    push rax
0x43b8e8    mov [rdx+0x54], eax
0x43b8eb    ret

------> offset: 0x43b8e8
0x43b8e8    mov [rdx+0x54], eax
0x43b8eb    ret

------> offset: 0x43b9a6
0x43b9a6    idiv byte [rax-0x1]
0x43b9ac    cmovns eax, edx
0x43b9af    ret

------> offset: 0x43b9a7
0x43b9a7    mov eax, 0xffffffffffffffff
0x43b9ac    cmovns eax, edx
0x43b9af    ret

------> offset: 0x43b9ab
0x43b9ab    dec dword [rdi]
0x43b9ad    ret 0x41c3

------> offset: 0x43b9ac
0x43b9ac    cmovns eax, edx
0x43b9af    ret

------> offset: 0x43b9ad
0x43b9ad    ret 0x41c3

------> offset: 0x43ba56
0x43ba56    retf 0xe283

------> offset: 0x43bab0
0x43bab0    add [r8-0x7d], r9d
0x43bab4    ret 0x4d02

------> offset: 0x43bab1
0x43bab1    add [rax-0x7d], ecx
0x43bab4    ret 0x4d02

------> offset: 0x43bab4
0x43bab4    ret 0x4d02

------> offset: 0x43bb47
0x43bb47    add [rbx+0xf008554], cl
0x43bb4d    retf 0x1489

------> offset: 0x43bb4b
0x43bb4b    add [rdi], cl
0x43bb4d    retf 0x1489

------> offset: 0x43bb4d
0x43bb4d    retf 0x1489

------> offset: 0x43becb
0x43becb    inc byte [rbx-0x7bf0f81a]
0x43bed1    retf

------> offset: 0x43c101
0x43c101    ret 0x4904

------> offset: 0x43c2ad
0x43c2ad    fimul dword [rax+0x29]
0x43c2b0    ret 0x8348

------> offset: 0x43c2b8
0x43c2b8    add [rax], al
0x43c2ba    add [rcx], dh
0x43c2bc    ror [rax+0x39], cl
0x43c2bf    ret

------> offset: 0x43c2ba
0x43c2ba    add [rcx], dh
0x43c2bc    ror [rax+0x39], cl
0x43c2bf    ret

------> offset: 0x43c2bc
0x43c2bc    ror [rax+0x39], cl
0x43c2bf    ret

------> offset: 0x43c307
0x43c307    dec dword [rcx-0x16e3dbbc]
0x43c30d    retf 0xfffe

------> offset: 0x43c30b
0x43c30b    sbb al, 0xe9
0x43c30d    retf 0xfffe

------> offset: 0x43c55f
0x43c55f    ret 0xf48

------> offset: 0x43c6c3
0x43c6c3    add [rax], al
0x43c6c5    add bl, ch
0x43c6c7    ret 0x8b48

------> offset: 0x43c6c5
0x43c6c5    add bl, ch
0x43c6c7    ret 0x8b48

------> offset: 0x43c749
0x43c749    sub [rcx-0x75], cl
0x43c74c    add [r8-0x77], r9b
0x43c750    retf 0x2948

------> offset: 0x43c74c
0x43c74c    add [r8-0x77], r9b
0x43c750    retf 0x2948

------> offset: 0x43c74d
0x43c74d    add [rax-0x77], cl
0x43c750    retf 0x2948

------> offset: 0x43cb17
0x43cb17    add [rax-0x7d], cl
0x43cb1a    ret 0x4101

------> offset: 0x43cb65
0x43cb65    ror byte [rax-0x7d], 0x1
0x43cb68    ret 0x4101

------> offset: 0x43cc29
0x43cc29    dec dword [rax-0x7d]
0x43cc2c    ret 0x4101

------> offset: 0x43cd4d
0x43cd4d    pop qword [rdx+0x31000000]
0x43cd53    ror [rax+0x39], cl
0x43cd56    ret

------> offset: 0x43d039
0x43d039    stosb
0x43d03a    add [rax], al
0x43d03c    add [rax-0x77], cl
0x43d03f    fimul dword [rax-0x77]
0x43d042    retf

------> offset: 0x43d03a
0x43d03a    add [rax], al
0x43d03c    add [rax-0x77], cl
0x43d03f    fimul dword [rax-0x77]
0x43d042    retf

------> offset: 0x43d03c
0x43d03c    add [rax-0x77], cl
0x43d03f    fimul dword [rax-0x77]
0x43d042    retf

------> offset: 0x43d03f
0x43d03f    fimul dword [rax-0x77]
0x43d042    retf

------> offset: 0x43d092
0x43d092    add [rcx+0x39], ecx
0x43d095    iret

------> offset: 0x43d09a
0x43d09a    fimul word [rax-0x77]
0x43d09d    retf

------> offset: 0x43d0bc
0x43d0bc    add ebx, ebp
0x43d0be    ret

------> offset: 0x43d103
0x43d103    xor [rax-0x77], cl
0x43d106    sbb bl, ch
0x43d108    ret 0x1f0f

------> offset: 0x43d106
0x43d106    sbb bl, ch
0x43d108    ret 0x1f0f

------> offset: 0x43d13d
0x43d13d    dec dword [rax-0x77]
0x43d140    retf

------> offset: 0x43d45b
0x43d45b    ret 0x8e0f

------> offset: 0x43d45e
0x43d45e    mov [rax+rax], es
0x43d461    add [rax+0x29], cl
0x43d464    ret 0x8b49

------> offset: 0x43d45f
0x43d45f    add al, 0x0
0x43d461    add [rax+0x29], cl
0x43d464    ret 0x8b49

------> offset: 0x43d461
0x43d461    add [rax+0x29], cl
0x43d464    ret 0x8b49

------> offset: 0x43d464
0x43d464    ret 0x8b49

------> offset: 0x43d50e
0x43d50e    xchg esp, eax
0x43d50f    and al, 0xa0
0x43d511    add [rax], al
0x43d513    add [rax+0x39], cl
0x43d516    ret

------> offset: 0x43d50f
0x43d50f    and al, 0xa0
0x43d511    add [rax], al
0x43d513    add [rax+0x39], cl
0x43d516    ret

------> offset: 0x43d844
0x43d844    retf 0x1689

------> offset: 0x43da31
0x43da31    retf 0x149

------> offset: 0x43da66
0x43da66    add [rax], al
0x43da68    add [rdi], cl
0x43da6a    mov dh, 0x48
0x43da6c    dec dword [rcx-0x7d]
0x43da6f    ret

------> offset: 0x43da68
0x43da68    add [rdi], cl
0x43da6a    mov dh, 0x48
0x43da6c    dec dword [rcx-0x7d]
0x43da6f    ret

------> offset: 0x43da6a
0x43da6a    mov dh, 0x48
0x43da6c    dec dword [rcx-0x7d]
0x43da6f    ret

------> offset: 0x43da6b
0x43da6b    dec qword [rcx-0x7d]
0x43da6f    ret

------> offset: 0x43da6c
0x43da6c    dec dword [rcx-0x7d]
0x43da6f    ret

------> offset: 0x43daa2
0x43daa2    fisttp dword [rax-0x7d]
0x43daa5    ret 0x4801

------> offset: 0x43dab2
0x43dab2    add [rdi], cl
0x43dab4    mov dh, 0x4a
0x43dab6    dec dword [rax-0x7d]
0x43dab9    ret 0x4101

------> offset: 0x43dab4
0x43dab4    mov dh, 0x4a
0x43dab6    dec dword [rax-0x7d]
0x43dab9    ret 0x4101

------> offset: 0x43dab5
0x43dab5    dec qword [rax-0x7d]
0x43dab9    ret 0x4101

------> offset: 0x43dceb
0x43dceb    ror dword [rax-0x7d], 0x1
0x43dcee    rol dword [rax+rcx*2], 0x39
0x43dcf2    retf

------> offset: 0x43dcee
0x43dcee    rol dword [rax+rcx*2], 0x39
0x43dcf2    retf

------> offset: 0x43dd35
0x43dd35    add cl, [rax-0x7d]
0x43dd38    ret 0x4802

------> offset: 0x43ddd5
0x43ddd5    retf 0x8e0f

------> offset: 0x43ddde
0x43ddde    retf 0xe083

------> offset: 0x43df5f
0x43df5f    rol byte [rbx-0x76befb08], 0x1
0x43df65    ret

------> offset: 0x43e09b
0x43e09b    dec dword [rax+0x39]
0x43e09e    ret

------> offset: 0x43e2d1
0x43e2d1    or cl, [rbp+0x39]
0x43e2d4    retf 0x2c72

------> offset: 0x43e2d4
0x43e2d4    retf 0x2c72

------> offset: 0x43e57e
0x43e57e    out dx, al
0x43e57f    xor edi, esp
0x43e581    dec dword [rax-0x77]
0x43e584    retf 0xebe9

------> offset: 0x43e57f
0x43e57f    xor edi, esp
0x43e581    dec dword [rax-0x77]
0x43e584    retf 0xebe9

------> offset: 0x43e580
0x43e580    cld
0x43e581    dec dword [rax-0x77]
0x43e584    retf 0xebe9

------> offset: 0x43e581
0x43e581    dec dword [rax-0x77]
0x43e584    retf 0xebe9

------> offset: 0x43e584
0x43e584    retf 0xebe9

------> offset: 0x43e5f9
0x43e5f9    cli
0x43e5fa    add [rax+0x19], ecx
0x43e5fd    ror [rax-0x7d], cl
0x43e600    ret 0x4806

------> offset: 0x43e5fa
0x43e5fa    add [rax+0x19], ecx
0x43e5fd    ror [rax-0x7d], cl
0x43e600    ret 0x4806

------> offset: 0x43e5fd
0x43e5fd    ror [rax-0x7d], cl
0x43e600    ret 0x4806

------> offset: 0x43e70f
0x43e70f    fisttp qword [rax-0x75]
0x43e712    cmp ebp, eax
0x43e714    cwde
0x43e715    retf 0x2

------> offset: 0x43e712
0x43e712    cmp ebp, eax
0x43e714    cwde
0x43e715    retf 0x2

------> offset: 0x43e714
0x43e714    cwde
0x43e715    retf 0x2

------> offset: 0x43e9d7
0x43e9d7    or [rbp-0x77], al
0x43e9da    ret 0x8948

------> offset: 0x43ea35
0x43ea35    retf 0x2b9

------> offset: 0x43ec38
0x43ec38    retf 0x3b9

------> offset: 0x43ec79
0x43ec79    ror dword [rax-0x7d], 0xc7
0x43ec7d    add [rax-0x77], ecx
0x43ec80    retf 0x394c

------> offset: 0x43ec7d
0x43ec7d    add [rax-0x77], ecx
0x43ec80    retf 0x394c

------> offset: 0x43ec80
0x43ec80    retf 0x394c

------> offset: 0x43ee27
0x43ee27    add [rcx+rcx*4+0x55], eax
0x43ee2b    add [rcx], dh
0x43ee2d    ror [rax+0x39], cl
0x43ee30    ret

------> offset: 0x43ee2a
0x43ee2a    push rbp
0x43ee2b    add [rcx], dh
0x43ee2d    ror [rax+0x39], cl
0x43ee30    ret

------> offset: 0x43ee32
0x43ee32    test dh, dh
0x43ee34    add al, [rax]
0x43ee36    add [rax+0x29], cl
0x43ee39    ret

------> offset: 0x43ee33
0x43ee33    test byte [rdx], 0x0
0x43ee36    add [rax+0x29], cl
0x43ee39    ret

------> offset: 0x43ee34
0x43ee34    add al, [rax]
0x43ee36    add [rax+0x29], cl
0x43ee39    ret

------> offset: 0x43ee3c
0x43ee3c    add eax, [rbx+0x394807e0]
0x43ee42    ret

------> offset: 0x43eef3
0x43eef3    adc cl, [rbp-0x77]
0x43eef6    ret

------> offset: 0x43ef55
0x43ef55    add al, ch
0x43ef57    adc eax, 0xffffffff89fffc2a
0x43ef5c    ret 0xe283

------> offset: 0x43ef57
0x43ef57    adc eax, 0xffffffff89fffc2a
0x43ef5c    ret 0xe283

------> offset: 0x43ef8f
0x43ef8f    retf 0x4b9

------> offset: 0x43f013
0x43f013    out dx, eax
0x43f014    ret 0x0

------> offset: 0x43f160
0x43f160    retf 0xb941

------> offset: 0x43f19a
0x43f19a    ret 0xc101

------> offset: 0x43f22d
0x43f22d    add [rax], al
0x43f22f    add [rax-0x7d], cl
0x43f232    ret 0x4c01

------> offset: 0x43f22f
0x43f22f    add [rax-0x7d], cl
0x43f232    ret 0x4c01

------> offset: 0x43f296
0x43f296    xchg [rax-0x77000000], eax
0x43f29c    retf 0xbe

------> offset: 0x43f29c
0x43f29c    retf 0xbe

------> offset: 0x43f2d7
0x43f2d7    and [rax-0x77], cl
0x43f2da    retf

------> offset: 0x43f324
0x43f324    test [rdx-0x77000000], ecx
0x43f32a    retf 0xbe

------> offset: 0x43f3ad
0x43f3ad    add al, ch
0x43f3af    mov ebp, 0xffffffff89fffc25
0x43f3b4    retf 0xe283

------> offset: 0x43f3af
0x43f3af    mov ebp, 0xffffffff89fffc25
0x43f3b4    retf 0xe283

------> offset: 0x43f3bc
0x43f3bc    xor al, 0x89
0x43f3be    retf 0xbe

------> offset: 0x43f3e0
0x43f3e0    xor al, 0x89
0x43f3e2    retf 0xb941

------> offset: 0x43f3fa
0x43f3fa    retf 0x3275

------> offset: 0x43f5cb
0x43f5cb    retf 0x5b9

------> offset: 0x43f645
0x43f645    cli
0x43f646    or byte [rdi], 0x94
0x43f649    ret 0xb60f

------> offset: 0x43f646
0x43f646    or byte [rdi], 0x94
0x43f649    ret 0xb60f

------> offset: 0x43f64c
0x43f64c    ror [rax-0x7d], cl
0x43f64f    ret 0x4804

------> offset: 0x43f703
0x43f703    sub al, 0x89
0x43f705    retf 0x6b9

------> offset: 0x43f705
0x43f705    retf 0x6b9

------> offset: 0x43f9d6
0x43f9d6    out dx, eax
0x43f9d7    add [rax], eax
0x43f9d9    add [rax-0x77], cl
0x43f9dc    fimul word [rax-0x77]
0x43f9df    retf

------> offset: 0x43f9d7
0x43f9d7    add [rax], eax
0x43f9d9    add [rax-0x77], cl
0x43f9dc    fimul word [rax-0x77]
0x43f9df    retf

------> offset: 0x43f9d9
0x43f9d9    add [rax-0x77], cl
0x43f9dc    fimul word [rax-0x77]
0x43f9df    retf

------> offset: 0x43f9e2
0x43f9e2    ror dword [rax-0x77], 0x1
0x43f9e5    ret 0xb70f

------> offset: 0x43f9e5
0x43f9e5    ret 0xb70f

------> offset: 0x43fbe8
0x43fbe8    sbb [rbx-0x14dbdbbc], cl
0x43fbee    ret 0x8948

------> offset: 0x43fbec
0x43fbec    and al, 0xeb
0x43fbee    ret 0x8948

------> offset: 0x43fd0b
0x43fd0b    retf 0x44c7

------> offset: 0x43fdf3
0x43fdf3    add [r8-0x7d], r9b
0x43fdf7    ret 0x4901

------> offset: 0x43fdf4
0x43fdf4    add [rax-0x7d], cl
0x43fdf7    ret 0x4901

------> offset: 0x43fee3
0x43fee3    ret 0x44c7

------> offset: 0x43ff6a
0x43ff6a    add [rax], al
0x43ff6c    add cl, ch
0x43ff6e    iret

------> offset: 0x4401ba
0x4401ba    mov gs, ecx
0x4401bc    add al, 0x0
0x4401be    add [rax+0x29], cl
0x4401c1    ret 0x8b49

------> offset: 0x440663
0x440663    sbb cl, ch
0x440665    ret 0xfff9

------> offset: 0x440665
0x440665    ret 0xfff9

------> offset: 0x4406eb
0x4406eb    add [rcx-0x75], eax
0x4406ee    or ecx, [rax-0x77]
0x4406f1    ret 0xc889

------> offset: 0x4406ee
0x4406ee    or ecx, [rax-0x77]
0x4406f1    ret 0xc889

------> offset: 0x4406f1
0x4406f1    ret 0xc889

------> offset: 0x4408c2
0x4408c2    add [rcx-0x7d], ecx
0x4408c5    ret

------> offset: 0x4408d0
0x4408d0    mov dh, 0x4a
0x4408d2    inc dword [rcx-0x78]
0x4408d5    add rcx, [r9+0x39]
0x4408d9    ret

------> offset: 0x4408d1
0x4408d1    inc qword [rcx-0x78]
0x4408d5    add rcx, [r9+0x39]
0x4408d9    ret

------> offset: 0x4408d2
0x4408d2    inc dword [rcx-0x78]
0x4408d5    add rcx, [r9+0x39]
0x4408d9    ret

------> offset: 0x4408d5
0x4408d5    add rcx, [r9+0x39]
0x4408d9    ret

------> offset: 0x4408d6
0x4408d6    add ecx, [rcx+0x39]
0x4408d9    ret

------> offset: 0x440a7f
0x440a7f    add al, [rax]
0x440a81    add [rax-0x77], cl
0x440a84    fimul word [rax-0x77]
0x440a87    retf

------> offset: 0x440be4
0x440be4    ror dword [rax-0x77], 0x1
0x440be7    fimul word [rax-0x77]
0x440bea    ret 0x8948

------> offset: 0x440be7
0x440be7    fimul word [rax-0x77]
0x440bea    ret 0x8948

------> offset: 0x440c3f
0x440c3f    add [rax], al
0x440c41    add [rax-0x77], cl
0x440c44    fimul word [rax-0x77]
0x440c47    retf

------> offset: 0x440d20
0x440d20    sbb [rbx-0x14d3dbbc], cl
0x440d26    ret 0x8948

------> offset: 0x440d24
0x440d24    sub al, 0xeb
0x440d26    ret 0x8948

------> offset: 0x441232
0x441232    xchg [rdx], ch
0x441234    add eax, 0xffffffffc1660000
0x441239    retf 0x6608

------> offset: 0x441233
0x441233    sub al, [rip-0x3e9a0000]
0x441239    retf 0x6608

------> offset: 0x441234
0x441234    add eax, 0xffffffffc1660000
0x441239    retf 0x6608

------> offset: 0x441236
0x441236    add [rsi-0x3f], ah
0x441239    retf 0x6608

------> offset: 0x44125e
0x44125e    mov fs, ebp
0x441260    add al, 0x0
0x441262    add [rax+0x29], cl
0x441265    ret 0x8b49

------> offset: 0x44130f
0x44130f    and al, 0x90
0x441311    add [rax], al
0x441313    add [rsi-0x3f], ah
0x441316    retf 0x6608

------> offset: 0x441310
0x441310    nop
0x441311    add [rax], al
0x441313    add [rsi-0x3f], ah
0x441316    retf 0x6608

------> offset: 0x441311
0x441311    add [rax], al
0x441313    add [rsi-0x3f], ah
0x441316    retf 0x6608

------> offset: 0x441adc
0x441adc    add [rax], eax
0x441ade    add [rax-0x7d], cl
0x441ae1    rol byte [rcx+rcx*2], 0x39
0x441ae5    ret

------> offset: 0x441ade
0x441ade    add [rax-0x7d], cl
0x441ae1    rol byte [rcx+rcx*2], 0x39
0x441ae5    ret

------> offset: 0x441ae1
0x441ae1    rol byte [rcx+rcx*2], 0x39
0x441ae5    ret

------> offset: 0x441bc2
0x441bc2    add al, 0x77
0x441bc4    adc ecx, [rcx+0x29d231f3]
0x441bca    ret

------> offset: 0x441bc4
0x441bc4    adc ecx, [rcx+0x29d231f3]
0x441bca    ret

------> offset: 0x441bc8
0x441bc8    shr [rcx], cl
0x441bca    ret

------> offset: 0x441e49
0x441e49    ret 0x3104

------> offset: 0x441e6c
0x441e6c    add [rax], al
0x441e6e    add [rax], al
0x441e70    mov eax, 0x1
0x441e75    ret

------> offset: 0x441e6d
0x441e6d    add [rax], al
0x441e6f    add [rax+0x1], bh
0x441e75    ret

------> offset: 0x441e6e
0x441e6e    add [rax], al
0x441e70    mov eax, 0x1
0x441e75    ret

------> offset: 0x441e6f
0x441e6f    add [rax+0x1], bh
0x441e75    ret

------> offset: 0x441f4b
0x441f4b    add [rax], al
0x441f4d    add [rax-0x3f], cl
0x441f50    ret 0x4811

------> offset: 0x441f4d
0x441f4d    add [rax-0x3f], cl
0x441f50    ret 0x4811

------> offset: 0x441f7e
0x441f7e    add [rax-0x75], cl
0x441f82    add eax, 0x2812e9
0x441f87    ret

------> offset: 0x441f80
0x441f80    mov rax, [rip+0x2812e9]
0x441f87    ret

------> offset: 0x441f81
0x441f81    mov eax, [rip+0x2812e9]
0x441f87    ret

------> offset: 0x441f82
0x441f82    add eax, 0x2812e9
0x441f87    ret

------> offset: 0x44204d
0x44204d    movlps xmm5, [rax]
0x442050    add [rax+0x39], cl
0x442053    ret 0x7b73

------> offset: 0x44204e
0x44204e    adc ch, [rax]
0x442050    add [rax+0x39], cl
0x442053    ret 0x7b73

------> offset: 0x442050
0x442050    add [rax+0x39], cl
0x442053    ret 0x7b73

------> offset: 0x442053
0x442053    ret 0x7b73

------> offset: 0x442088
0x442088    nop
0x442089    add [rax], al
0x44208b    add [rbx+0x5d], bl
0x44208e    pop r12
0x442090    ret

------> offset: 0x4420c7
0x4420c7    mov eax, 0xffffffffffffffff
0x4420cc    pop rbx
0x4420cd    pop rbp
0x4420ce    pop r12
0x4420d0    ret

------> offset: 0x4420cb
0x4420cb    call far dword [rbx+0x5d]
0x4420ce    pop r12
0x4420d0    ret

------> offset: 0x44213a
0x44213a    ret 0xdf89

------> offset: 0x4423b6
0x4423b6    add [rax-0x77], ecx
0x4423b9    ret 0xf41

------> offset: 0x442517
0x442517    add cl, [rax+0x1]
0x44251a    ret 0x3b48

------> offset: 0x44251a
0x44251a    ret 0x3b48

------> offset: 0x442836
0x442836    add [rax], al
0x442838    add [rax+0x1], cl
0x44283b    retf 0x8949

------> offset: 0x442838
0x442838    add [rax+0x1], cl
0x44283b    retf 0x8949

------> offset: 0x4428c8
0x4428c8    jz 0x4428d0
0x4428ca    jmp 0x414df0
0x4428cf    nop
0x4428d0    ret

------> offset: 0x4428ca
0x4428ca    jmp 0x414df0
0x4428cf    nop
0x4428d0    ret

------> offset: 0x4428cb
0x4428cb    and [rip-0xc6f0003], esp
0x4428d1    ret

------> offset: 0x4428cc
0x4428cc    and eax, 0xfffffffff390fffd
0x4428d1    ret

------> offset: 0x442926
0x442926    mov qword [rbx+0x10], 0x0
0x44292e    pop rbx
0x44292f    ret

------> offset: 0x442927
0x442927    mov dword [rbx+0x10], 0x0
0x44292e    pop rbx
0x44292f    ret

------> offset: 0x44292d
0x44292d    add [rbx-0x3d], bl
0x442930    test esi, esi
0x442932    jz 0x4428f9
0x442934    pop rbx
0x442935    ret

------> offset: 0x442930
0x442930    test esi, esi
0x442932    jz 0x4428f9
0x442934    pop rbx
0x442935    ret

------> offset: 0x442931
0x442931    div byte [rbp+rax*8+0x5b]
0x442935    ret

------> offset: 0x442932
0x442932    jz 0x4428f9
0x442934    pop rbx
0x442935    ret

------> offset: 0x442942
0x442942    jle 0x44294c
0x442944    sub eax, 0x1
0x442947    mov [rbx+0x8], eax
0x44294a    pop rbx
0x44294b    ret

------> offset: 0x442944
0x442944    sub eax, 0x1
0x442947    mov [rbx+0x8], eax
0x44294a    pop rbx
0x44294b    ret

------> offset: 0x442945
0x442945    call 0x887b24b
0x44294a    pop rbx
0x44294b    ret

------> offset: 0x442947
0x442947    mov [rbx+0x8], eax
0x44294a    pop rbx
0x44294b    ret

------> offset: 0x443027
0x443027    add [rax-0x7d], cl
0x44302a    rol byte [rcx], 0x83
0x44302d    ret 0x8301

------> offset: 0x44302a
0x44302a    rol byte [rcx], 0x83
0x44302d    ret 0x8301

------> offset: 0x44302d
0x44302d    ret 0x8301

------> offset: 0x44324b
0x44324b    add [rax], al
0x44324d    add [rax], al
0x44324f    add [rax-0x7d], cl
0x443252    ret

------> offset: 0x4432f4
0x4432f4    inc dword [rbx-0x7cb7fe40]
0x4432fa    ret 0x8308

------> offset: 0x4432f7
0x4432f7    add [rax-0x7d], ecx
0x4432fa    ret 0x8308

------> offset: 0x4432fa
0x4432fa    ret 0x8308

------> offset: 0x443352
0x443352    imul eax
0x443354    clc
0x443355    iret

------> offset: 0x443354
0x443354    clc
0x443355    iret

------> offset: 0x443372
0x443372    std
0x443373    or eax, 0xffffffff83489074
0x443378    ret

------> offset: 0x443373
0x443373    or eax, 0xffffffff83489074
0x443378    ret

------> offset: 0x443392
0x443392    int 0x8e
0x443394    add [r8-0x77], cl
0x443398    retf 0x894c

------> offset: 0x443394
0x443394    add [r8-0x77], cl
0x443398    retf 0x894c

------> offset: 0x443395
0x443395    add [rax-0x77], cl
0x443398    retf 0x894c

------> offset: 0x44346b
0x44346b    ror byte [rdi], 0x84
0x44346e    retf

------> offset: 0x443831
0x443831    inc dword [rbx+0x538901c2]
0x443837    xor cl, ch
0x443839    retf

------> offset: 0x443833
0x443833    ret 0x8901

------> offset: 0x443836
0x443836    push rbx
0x443837    xor cl, ch
0x443839    retf

------> offset: 0x443837
0x443837    xor cl, ch
0x443839    retf

------> offset: 0x443d05
0x443d05    add al, 0x89
0x443d07    iret

------> offset: 0x444190
0x444190    ror dword [rax-0x73], 0x1
0x444193    push rcx
0x444194    dec dword [rax+0x63]
0x444197    retf

------> offset: 0x444193
0x444193    push rcx
0x444194    dec dword [rax+0x63]
0x444197    retf

------> offset: 0x444194
0x444194    dec dword [rax+0x63]
0x444197    retf

------> offset: 0x4444b5
0x4444b5    add al, [eax]
0x4444b8    add [rax-0x77], cl
0x4444bb    fucomip st0, st0
0x4444bd    iret

------> offset: 0x4444b6
0x4444b6    add al, [rax]
0x4444b8    add [rax-0x77], cl
0x4444bb    fucomip st0, st0
0x4444bd    iret

------> offset: 0x4444b8
0x4444b8    add [rax-0x77], cl
0x4444bb    fucomip st0, st0
0x4444bd    iret

------> offset: 0x4444bb
0x4444bb    fucomip st0, st0
0x4444bd    iret

------> offset: 0x4444d8
0x4444d8    ret 0x101

------> offset: 0x44450a
0x44450a    test [rcx], dl
0x44450c    add al, [rax]
0x44450e    add [rcx-0x77], al
0x444511    retf 0x894c

------> offset: 0x44450c
0x44450c    add al, [rax]
0x44450e    add [rcx-0x77], al
0x444511    retf 0x894c

------> offset: 0x44450e
0x44450e    add [rcx-0x77], al
0x444511    retf 0x894c

------> offset: 0x44455b
0x44455b    xchg al, bl
0x44455d    add [rax], eax
0x44455f    add [rax-0x77], cl
0x444562    ret 0x8b41

------> offset: 0x44455d
0x44455d    add [rax], eax
0x44455f    add [rax-0x77], cl
0x444562    ret 0x8b41

------> offset: 0x44455f
0x44455f    add [rax-0x77], cl
0x444562    ret 0x8b41

------> offset: 0x444562
0x444562    ret 0x8b41

------> offset: 0x4445ea
0x4445ea    add [rbx-0x7cb7fe39], eax
0x4445f0    ret 0x8310

------> offset: 0x4445ed
0x4445ed    add [rax-0x7d], ecx
0x4445f0    ret 0x8310

------> offset: 0x4445f0
0x4445f0    ret 0x8310

------> offset: 0x4445f9
0x4445f9    enter 0x8d49, 0xc
0x4445fd    retf 0x718b

------> offset: 0x4445fd
0x4445fd    retf 0x718b

------> offset: 0x4447f1
0x4447f1    ret 0xd9e8

------> offset: 0x444895
0x444895    mov [rax+0x39], cl
0x444898    ret 0xf48

------> offset: 0x4448aa
0x4448aa    ret 0x3949

------> offset: 0x4448c2
0x4448c2    retf 0x27ea

------> offset: 0x4448c5
0x4448c5    add [rcx+rcx*4+0x25], al
0x4448c9    iret

------> offset: 0x444955
0x444955    mov [rip+0x27d19d], eax
0x44495b    jz 0x444960
0x44495d    ret

------> offset: 0x444956
0x444956    add eax, 0x27d19d
0x44495b    jz 0x444960
0x44495d    ret

------> offset: 0x444957
0x444957    popf
0x444958    shl dword [rdi], 0x1
0x44495a    add [rbx+rax-0xd], dh
0x44495e    ret

------> offset: 0x444958
0x444958    shl dword [rdi], 0x1
0x44495a    add [rbx+rax-0xd], dh
0x44495e    ret

------> offset: 0x44495a
0x44495a    add [rbx+rax-0xd], dh
0x44495e    ret

------> offset: 0x44495b
0x44495b    jz 0x444960
0x44495d    ret

------> offset: 0x44495c
0x44495c    add esi, ebx
0x44495e    ret

------> offset: 0x44497d
0x44497d    mov [fs:rax], rdx
0x444981    ret

------> offset: 0x44497e
0x44497e    mov [rax], rdx
0x444981    ret

------> offset: 0x44497f
0x44497f    mov [rax], edx
0x444981    ret

------> offset: 0x44499e
0x44499e    mov rax, [rax+rdi*8+0x80]
0x4449a6    ret

------> offset: 0x44499f
0x44499f    mov eax, [rax+rdi*8+0x80]
0x4449a6    ret

------> offset: 0x4449b7
0x4449b7    add rax, [fs:0x0]
0x4449c0    ret

------> offset: 0x4449b8
0x4449b8    add rax, [0x0]
0x4449c0    ret

------> offset: 0x4449b9
0x4449b9    add eax, [0x0]
0x4449c0    ret

------> offset: 0x4449ba
0x4449ba    add al, 0x25
0x4449bc    add [rax], al
0x4449be    add [rax], al
0x4449c0    ret

------> offset: 0x4449bb
0x4449bb    and eax, 0x0
0x4449c0    ret

------> offset: 0x444a24
0x444a24    ret 0xffe8

------> offset: 0x444a3d
0x444a3d    ret 0xffd8

------> offset: 0x444a5a
0x444a5a    dec dword [rax-0x7f]
0x444a5d    ret 0x200

------> offset: 0x444a5d
0x444a5d    ret 0x200

------> offset: 0x444a5e
0x444a5e    add [rdx], al
0x444a60    add [rax], al
0x444a62    mov [fs:rax], rdx
0x444a66    ret

------> offset: 0x444a60
0x444a60    add [rax], al
0x444a62    mov [fs:rax], rdx
0x444a66    ret

------> offset: 0x444a84
0x444a84    mov [rsp-0x2], di
0x444a89    fldcw [rsp-0x2]
0x444a8d    ret

------> offset: 0x444a85
0x444a85    mov [rsp-0x2], edi
0x444a89    fldcw [rsp-0x2]
0x444a8d    ret

------> offset: 0x444a87
0x444a87    and al, 0xfe
0x444a89    fldcw [rsp-0x2]
0x444a8d    ret

------> offset: 0x444a89
0x444a89    fldcw [rsp-0x2]
0x444a8d    ret

------> offset: 0x444a8a
0x444a8a    ins byte [rdi], dx
0x444a8b    and al, 0xfe
0x444a8d    ret

------> offset: 0x444a8b
0x444a8b    and al, 0xfe
0x444a8d    ret

------> offset: 0x444b0c
0x444b0c    movzx eax, al
0x444b0f    mov [rbx+0x40], eax
0x444b12    xor eax, eax
0x444b14    pop rbx
0x444b15    ret

------> offset: 0x444b0d
0x444b0d    mov dh, 0xc0
0x444b0f    mov [rbx+0x40], eax
0x444b12    xor eax, eax
0x444b14    pop rbx
0x444b15    ret

------> offset: 0x444b0e
0x444b0e    ror byte [rcx-0x3fcebfbd], 0x5b
0x444b15    ret

------> offset: 0x444b0f
0x444b0f    mov [rbx+0x40], eax
0x444b12    xor eax, eax
0x444b14    pop rbx
0x444b15    ret

------> offset: 0x444b57
0x444b57    cmp rax, 0xfffffffffffff000
0x444b5d    ja 0x444b7d
0x444b5f    ret

------> offset: 0x444b58
0x444b58    cmp eax, 0xfffffffffffff000
0x444b5d    ja 0x444b7d
0x444b5f    ret

------> offset: 0x444b5c
0x444b5c    push qword [rdi+0x1e]
0x444b5f    ret

------> offset: 0x444b5d
0x444b5d    ja 0x444b7d
0x444b5f    ret

------> offset: 0x444b7c
0x444b7c    retf 0xc748

------> offset: 0x444c86
0x444c86    mov [rax-0x77], cl
0x444c89    ret 0xba41

------> offset: 0x444c89
0x444c89    ret 0xba41

------> offset: 0x444caf
0x444caf    dec dword [rax-0x77]
0x444cb2    ret 0x870f

------> offset: 0x444cbb
0x444cbb    jns 0x444cc8
0x444cbd    add rsp, 0xd0
0x444cc4    ret

------> offset: 0x444cbd
0x444cbd    add rsp, 0xd0
0x444cc4    ret

------> offset: 0x444cbe
0x444cbe    add esp, 0xd0
0x444cc4    ret

------> offset: 0x444cc0
0x444cc0    rol byte [rax], 0x1
0x444cc2    add [rax], al
0x444cc4    ret

------> offset: 0x444d78
0x444d78    add [rax], al
0x444d7a    add rsp, 0xd0
0x444d81    ret

------> offset: 0x444db5
0x444db5    mov dword [rax], 0x16
0x444dbb    or eax, -0x1
0x444dbe    ret

------> offset: 0x444db9
0x444db9    add [rax], al
0x444dbb    or eax, -0x1
0x444dbe    ret

------> offset: 0x444dd0
0x444dd0    cmp rax, 0xfffffffffffff000
0x444dd6    ja 0x444dda
0x444dd8    ret

------> offset: 0x444dd1
0x444dd1    cmp eax, 0xfffffffffffff000
0x444dd6    ja 0x444dda
0x444dd8    ret

------> offset: 0x444dd5
0x444dd5    push qword [rdi+0x2]
0x444dd8    ret

------> offset: 0x444dd6
0x444dd6    ja 0x444dda
0x444dd8    ret

------> offset: 0x444f2c
0x444f2c    adc [rdi], r9b
0x444f2f    xchg ebx, eax
0x444f30    ret 0x3949

------> offset: 0x444f2d
0x444f2d    adc [rdi], cl
0x444f2f    xchg ebx, eax
0x444f30    ret 0x3949

------> offset: 0x444f2f
0x444f2f    xchg ebx, eax
0x444f30    ret 0x3949

------> offset: 0x445217
0x445217    xchg ebx, eax
0x445218    ret 0x8348

------> offset: 0x445529
0x445529    add [rax-0x7d], ecx
0x44552c    ret 0x4801

------> offset: 0x445569
0x445569    adc [rax+0x39], cl
0x44556c    ret

------> offset: 0x445595
0x445595    add ecx, [rax-0x7d]
0x445598    ret 0xf301

------> offset: 0x445696
0x445696    jl 0x4456bc
0x445698    sbb [rax-0x77], cl
0x44569b    pop rax
0x44569c    or cl, ch
0x44569e    ret

------> offset: 0x445698
0x445698    sbb [rax-0x77], cl
0x44569b    pop rax
0x44569c    or cl, ch
0x44569e    ret

------> offset: 0x44569b
0x44569b    pop rax
0x44569c    or cl, ch
0x44569e    ret

------> offset: 0x44569c
0x44569c    or cl, ch
0x44569e    ret

------> offset: 0x445a57
0x445a57    add [rax-0x7d], ecx
0x445a5a    ret 0x4c01

------> offset: 0x445cef
0x445cef    add [rbx+rcx*4+0x35], cl
0x445cf3    xchg ecx, eax
0x445cf4    retf

------> offset: 0x445cf3
0x445cf3    xchg ecx, eax
0x445cf4    retf

------> offset: 0x445dac
0x445dac    retf 0x27

------> offset: 0x445dfc
0x445dfc    enter 0xf00, 0x84
0x445e00    retf

------> offset: 0x445e74
0x445e74    fld qword [rax]
0x445e76    add [rax], al
0x445e78    add al, ch
0x445e7a    ret 0xfd66

------> offset: 0x445e76
0x445e76    add [rax], al
0x445e78    add al, ch
0x445e7a    ret 0xfd66

------> offset: 0x445e78
0x445e78    add al, ch
0x445e7a    ret 0xfd66

------> offset: 0x445e7a
0x445e7a    ret 0xfd66

------> offset: 0x446070
0x446070    pop rsp
0x446071    mov edi, 0xffffffff8948fffd
0x446076    ret

------> offset: 0x446071
0x446071    mov edi, 0xffffffff8948fffd
0x446076    ret

------> offset: 0x446072
0x446072    std
0x446073    dec dword [rax-0x77]
0x446076    ret

------> offset: 0x446236
0x446236    call far dword [rbx+0x5d]
0x446239    pop r12
0x44623b    pop r13
0x44623d    ret

------> offset: 0x4463d2
0x4463d2    ret 0x279b

------> offset: 0x4463da
0x4463da    jmp 0x4073b0
0x4463df    nop
0x4463e0    xor eax, eax
0x4463e2    ret

------> offset: 0x4465ae
0x4465ae    retf 0x8440

------> offset: 0x4467af
0x4467af    ret 0x1676

------> offset: 0x4468b5
0x4468b5    inc dword [rbx-0xa]
0x4468b8    ja 0x4468bc
0x4468bb    add al, 0x74
0x4468bd    iret

------> offset: 0x4468b8
0x4468b8    ja 0x4468bc
0x4468bb    add al, 0x74
0x4468bd    iret

------> offset: 0x4468ba
0x4468ba    add [rsp+rsi*2], eax
0x4468bd    iret

------> offset: 0x4468bb
0x4468bb    add al, 0x74
0x4468bd    iret

------> offset: 0x4468c8
0x4468c8    mov bh, 0xeb
0x4468ca    ret 0x1f0f

------> offset: 0x44691d
0x44691d    mov edi, eax
0x44691f    mov [rsi], dl
0x446921    jnz 0x446908
0x446923    mov rax, rsi
0x446926    ret

------> offset: 0x44691f
0x44691f    mov [rsi], dl
0x446921    jnz 0x446908
0x446923    mov rax, rsi
0x446926    ret

------> offset: 0x446921
0x446921    jnz 0x446908
0x446923    mov rax, rsi
0x446926    ret

------> offset: 0x446922
0x446922    in eax, 0x48
0x446924    mov eax, esi
0x446926    ret

------> offset: 0x446923
0x446923    mov rax, rsi
0x446926    ret

------> offset: 0x446924
0x446924    mov eax, esi
0x446926    ret

------> offset: 0x4469a1
0x4469a1    mov edi, edx
0x4469a3    mov [rsi], al
0x4469a5    jnz 0x446980
0x4469a7    mov rax, rsi
0x4469aa    ret

------> offset: 0x4469a2
0x4469a2    xlat byte [rbx+al]
0x4469a3    mov [rsi], al
0x4469a5    jnz 0x446980
0x4469a7    mov rax, rsi
0x4469aa    ret

------> offset: 0x4469a3
0x4469a3    mov [rsi], al
0x4469a5    jnz 0x446980
0x4469a7    mov rax, rsi
0x4469aa    ret

------> offset: 0x4469a5
0x4469a5    jnz 0x446980
0x4469a7    mov rax, rsi
0x4469aa    ret

------> offset: 0x446a32
0x446a32    add rsp, 0x20
0x446a36    mov rax, r9
0x446a39    pop rbx
0x446a3a    ret

------> offset: 0x446a33
0x446a33    add esp, 0x20
0x446a36    mov rax, r9
0x446a39    pop rbx
0x446a3a    ret

------> offset: 0x446a35
0x446a35    and [rcx+rcx*4-0x38], cl
0x446a39    pop rbx
0x446a3a    ret

------> offset: 0x446a36
0x446a36    mov rax, r9
0x446a39    pop rbx
0x446a3a    ret

------> offset: 0x446a37
0x446a37    mov eax, ecx
0x446a39    pop rbx
0x446a3a    ret

------> offset: 0x446aeb
0x446aeb    add [rax], al
0x446aed    add [rax-0x77], cl
0x446af0    retf 0x2948

------> offset: 0x44706b
0x44706b    ret 0x2f

------> offset: 0x44707c
0x44707c    dec dword [rax-0x77]
0x44707f    retf 0x8948

------> offset: 0x44714a
0x44714a    ret 0x4108

------> offset: 0x4471ac
0x4471ac    dec dword [rcx+0x39]
0x4471af    ret 0x6275

------> offset: 0x4471af
0x4471af    ret 0x6275

------> offset: 0x447468
0x447468    adc [rbp-0x6bf001bf], cl
0x44746e    ret 0xd284

------> offset: 0x44746a
0x44746a    dec byte [r15]
0x44746d    xchg esp, eax
0x44746e    ret 0xd284

------> offset: 0x44746b
0x44746b    dec byte [rdi]
0x44746d    xchg esp, eax
0x44746e    ret 0xd284

------> offset: 0x44746d
0x44746d    xchg esp, eax
0x44746e    ret 0xd284

------> offset: 0x4477a5
0x4477a5    cwde
0x4477a6    imul ecx, [rdx+0x0], -0x18
0x4477aa    ret 0xfba1

------> offset: 0x4477a6
0x4477a6    imul ecx, [rdx+0x0], -0x18
0x4477aa    ret 0xfba1

------> offset: 0x4477a7
0x4477a7    add al, bpl
0x4477aa    ret 0xfba1

------> offset: 0x4477a8
0x4477a8    add al, ch
0x4477aa    ret 0xfba1

------> offset: 0x4477aa
0x4477aa    ret 0xfba1

------> offset: 0x4477fa
0x4477fa    xor cl, ch
0x4477fc    ret

------> offset: 0x44782d
0x44782d    add [rax-0x77], cl
0x447830    fisttp word [rax-0x77]
0x447833    retf 0x8948

------> offset: 0x447830
0x447830    fisttp word [rax-0x77]
0x447833    retf 0x8948

------> offset: 0x4479d9
0x4479d9    ror dword [rdi], 0xb6
0x4479dc    or al, 0x89
0x4479df    ret 0xeac0

------> offset: 0x4479dc
0x4479dc    or al, 0x89
0x4479df    ret 0xeac0

------> offset: 0x4479df
0x4479df    ret 0xeac0

------> offset: 0x4479e6
0x4479e6    ret 0xe183

------> offset: 0x447a25
0x447a25    retf 0xc289

------> offset: 0x447a27
0x447a27    ret 0x8d89

------> offset: 0x447c20
0x447c20    ret 0x4499

------> offset: 0x447d2e
0x447d2e    retf 0xfffc

------> offset: 0x447d94
0x447d94    imul ecx, [rdx+0x0], -0x41
0x447d98    cwde
0x447d99    imul ecx, [rdx+0x0], -0x18
0x447d9d    iret

------> offset: 0x447d98
0x447d98    cwde
0x447d99    imul ecx, [rdx+0x0], -0x18
0x447d9d    iret

------> offset: 0x447d99
0x447d99    imul ecx, [rdx+0x0], -0x18
0x447d9d    iret

------> offset: 0x447d9a
0x447d9a    add al, bpl
0x447d9d    iret

------> offset: 0x447ece
0x447ece    adc [rcx-0x73], al
0x447ed1    dec byte [rdi]
0x447ed4    xchg esp, eax
0x447ed5    ret 0xd284

------> offset: 0x448069
0x448069    retf 0xfff8

------> offset: 0x4487fa
0x4487fa    jmp far dword [rcx]
0x4487fc    retf 0xd039

------> offset: 0x4487fc
0x4487fc    retf 0xd039

------> offset: 0x4489d4
0x4489d4    ret 0x4110

------> offset: 0x448c19
0x448c19    dec dword [rcx-0x77]
0x448c1c    ret 0x85c7

------> offset: 0x448c1c
0x448c1c    ret 0x85c7

------> offset: 0x448cf3
0x448cf3    cmp dl, 0xff
0x448cf6    dec dword [rcx+0x39]
0x448cf9    ret 0x850f

------> offset: 0x448cf6
0x448cf6    dec dword [rcx+0x39]
0x448cf9    ret 0x850f

------> offset: 0x448ddc
0x448ddc    xchg ebp, eax
0x448ddd    cmp dl, 0xff
0x448de0    dec dword [rcx+0x39]
0x448de3    ret 0x850f

------> offset: 0x448ea2
0x448ea2    add [rax-0x7d], cl
0x448ea5    clc
0x448ea6    dec dword [rcx-0x77]
0x448ea9    ret 0x8b4c

------> offset: 0x448ea5
0x448ea5    clc
0x448ea6    dec dword [rcx-0x77]
0x448ea9    ret 0x8b4c

------> offset: 0x448ea6
0x448ea6    dec dword [rcx-0x77]
0x448ea9    ret 0x8b4c

------> offset: 0x44901b
0x44901b    push rax
0x44901c    or [rcx-0x77], cl
0x44901f    push rdi
0x449020    or bl, ch
0x449022    retf 0xbd83

------> offset: 0x44901c
0x44901c    or [rcx-0x77], cl
0x44901f    push rdi
0x449020    or bl, ch
0x449022    retf 0xbd83

------> offset: 0x44901f
0x44901f    push rdi
0x449020    or bl, ch
0x449022    retf 0xbd83

------> offset: 0x449020
0x449020    or bl, ch
0x449022    retf 0xbd83

------> offset: 0x449022
0x449022    retf 0xbd83

------> offset: 0x449171
0x449171    add [rax-0x7d], cl
0x449174    clc
0x449175    dec dword [rcx-0x77]
0x449178    ret 0x840f

------> offset: 0x449174
0x449174    clc
0x449175    dec dword [rcx-0x77]
0x449178    ret 0x840f

------> offset: 0x449175
0x449175    dec dword [rcx-0x77]
0x449178    ret 0x840f

------> offset: 0x4493cd
0x4493cd    or [rax], eax
0x4493cf    add [rax-0x77], cl
0x4493d2    ret

------> offset: 0x44975f
0x44975f    test [rax-0x7c000005], esi
0x449765    ret 0x8908

------> offset: 0x4497cf
0x4497cf    test [rax-0x7c000005], esi
0x4497d5    ret 0x8910

------> offset: 0x4497d5
0x4497d5    ret 0x8910

------> offset: 0x449910
0x449910    ret 0xc0

------> offset: 0x449b94
0x449b94    int 0xff
0x449b97    dec dword [rax-0x77]
0x449b9a    ret 0x8d48

------> offset: 0x449b97
0x449b97    dec dword [rax-0x77]
0x449b9a    ret 0x8d48

------> offset: 0x449baa
0x449baa    xor [rax-0x7d], ecx
0x449bad    ret 0x4801

------> offset: 0x449cb3
0x449cb3    rol byte [rcx], 0x75
0x449cb6    retf 0xf2e9

------> offset: 0x449cb6
0x449cb6    retf 0xf2e9

------> offset: 0x449d10
0x449d10    int 3
0x449d11    retf

------> offset: 0x449d4e
0x449d4e    dec dword [rax-0x7d]
0x449d51    ret 0x4801

------> offset: 0x44a10c
0x44a10c    sahf
0x44a10d    iret

------> offset: 0x44a197
0x44a197    test [rdx], edx
0x44a199    iret

------> offset: 0x44a2b1
0x44a2b1    xchg cl, bh
0x44a2b3    iret

------> offset: 0x44a5b3
0x44a5b3    jg 0x44a5c4
0x44a5b5    test ah, dh
0x44a5b7    retf 0xffff

------> offset: 0x44a5b5
0x44a5b5    test ah, dh
0x44a5b7    retf 0xffff

------> offset: 0x44a5b6
0x44a5b6    hlt
0x44a5b7    retf 0xffff

------> offset: 0x44a921
0x44a921    add [rdi], cl
0x44a923    test bl, bl
0x44a925    retf 0xffff

------> offset: 0x44a923
0x44a923    test bl, bl
0x44a925    retf 0xffff

------> offset: 0x44a92e
0x44a92e    add [rdi], cl
0x44a930    test dh, cl
0x44a932    retf 0xffff

------> offset: 0x44a930
0x44a930    test dh, cl
0x44a932    retf 0xffff

------> offset: 0x44a93b
0x44a93b    or [rdi], cl
0x44a93d    test ecx, eax
0x44a93f    retf 0xffff

------> offset: 0x44a93d
0x44a93d    test ecx, eax
0x44a93f    retf 0xffff

------> offset: 0x44a959
0x44a959    cmpsb
0x44a95a    retf 0xffff

------> offset: 0x44ab51
0x44ab51    inc dword [rbp+0x29]
0x44ab54    retf 0x8d45

------> offset: 0x44ab54
0x44ab54    retf 0x8d45

------> offset: 0x44ab63
0x44ab63    movsd
0x44ab64    retf 0xffff

------> offset: 0x44acda
0x44acda    test [rdi-0x16000004], ebp
0x44ace0    retf 0xffc3

------> offset: 0x44ace0
0x44ace0    retf 0xffc3

------> offset: 0x44b1de
0x44b1de    mov dh, 0x4a
0x44b1e0    add [rax-0x7bf0d507], eax
0x44b1e6    iret

------> offset: 0x44b1df
0x44b1df    add [rax-0x7bf0d507], rax
0x44b1e6    iret

------> offset: 0x44b1e0
0x44b1e0    add [rax-0x7bf0d507], eax
0x44b1e6    iret

------> offset: 0x44ba1d
0x44ba1d    push rax
0x44ba1e    or [rcx-0x77], cl
0x44ba21    push rdi
0x44ba22    or cl, ch
0x44ba24    ret 0xfffb

------> offset: 0x44ba1e
0x44ba1e    or [rcx-0x77], cl
0x44ba21    push rdi
0x44ba22    or cl, ch
0x44ba24    ret 0xfffb

------> offset: 0x44ba21
0x44ba21    push rdi
0x44ba22    or cl, ch
0x44ba24    ret 0xfffb

------> offset: 0x44ba22
0x44ba22    or cl, ch
0x44ba24    ret 0xfffb

------> offset: 0x44ba24
0x44ba24    ret 0xfffb

------> offset: 0x44bd9a
0x44bd9a    loopnz 0x44bdf7
0x44bd9c    pop rbp
0x44bd9d    pop r12
0x44bd9f    pop r13
0x44bda1    ret

------> offset: 0x44bdb9
0x44bdb9    and [rax], eax
0x44bdbb    add [rbx+0x5d], bl
0x44bdbe    pop r12
0x44bdc0    pop r13
0x44bdc2    ret

------> offset: 0x44bed1
0x44bed1    add rsp, 0x8
0x44bed5    mov eax, ebp
0x44bed7    pop rbx
0x44bed8    pop rbp
0x44bed9    ret

------> offset: 0x44bed2
0x44bed2    add esp, 0x8
0x44bed5    mov eax, ebp
0x44bed7    pop rbx
0x44bed8    pop rbp
0x44bed9    ret

------> offset: 0x44bed5
0x44bed5    mov eax, ebp
0x44bed7    pop rbx
0x44bed8    pop rbp
0x44bed9    ret

------> offset: 0x44bf40
0x44bf40    retf 0xed75

------> offset: 0x44bf4f
0x44bf4f    add ebp, 0x30
0x44bf52    pop rbx
0x44bf53    mov eax, ebp
0x44bf55    pop rbp
0x44bf56    ret

------> offset: 0x44bf52
0x44bf52    pop rbx
0x44bf53    mov eax, ebp
0x44bf55    pop rbp
0x44bf56    ret

------> offset: 0x44bf53
0x44bf53    mov eax, ebp
0x44bf55    pop rbp
0x44bf56    ret

------> offset: 0x44c174
0x44c174    test bh, ah
0x44c176    add [rax], eax
0x44c178    add [rax-0x39], cl
0x44c17b    ret 0xffe8

------> offset: 0x44c176
0x44c176    add [rax], eax
0x44c178    add [rax-0x39], cl
0x44c17b    ret 0xffe8

------> offset: 0x44c178
0x44c178    add [rax-0x39], cl
0x44c17b    ret 0xffe8

------> offset: 0x44c1e0
0x44c1e0    test [rbx], cl
0x44c1e2    add [rax], eax
0x44c1e4    add [rax-0x39], cl
0x44c1e7    ret 0xffe8

------> offset: 0x44c2e0
0x44c2e0    and bh, al
0x44c2e2    add ch, [rbx]
0x44c2e4    add [rax], al
0x44c2e6    add cl, ch
0x44c2e8    ret

------> offset: 0x44c2e2
0x44c2e2    add ch, [rbx]
0x44c2e4    add [rax], al
0x44c2e6    add cl, ch
0x44c2e8    ret

------> offset: 0x44c30d
0x44c30d    add [rax], al
0x44c30f    add ch, bl
0x44c311    fmul dword [rax-0x39]
0x44c314    ret 0xffe8

------> offset: 0x44c30f
0x44c30f    add ch, bl
0x44c311    fmul dword [rax-0x39]
0x44c314    ret 0xffe8

------> offset: 0x44c311
0x44c311    fmul dword [rax-0x39]
0x44c314    ret 0xffe8

------> offset: 0x44c3c4
0x44c3c4    ret 0xfac1

------> offset: 0x44c426
0x44c426    ret 0xf3f

------> offset: 0x44c44f
0x44c44f    ror dword [rcx+rcx*4+0xc], 0x1
0x44c453    iret

------> offset: 0x44c985
0x44c985    ret 0xa5e8

------> offset: 0x44cae0
0x44cae0    mov esp, 0xfc239c1
0x44cae5    ret 0xb841

------> offset: 0x44cae3
0x44cae3    ret 0x4e0f

------> offset: 0x44cae5
0x44cae5    ret 0xb841

------> offset: 0x44cb07
0x44cb07    retf 0x8341

------> offset: 0x44cb56
0x44cb56    jl 0x44cb19
0x44cb58    clc
0x44cb59    add [rax+0xf], cl
0x44cb5c    ret 0x8948

------> offset: 0x44cb58
0x44cb58    clc
0x44cb59    add [rax+0xf], cl
0x44cb5c    ret 0x8948

------> offset: 0x44cd3f
0x44cd3f    inc dword [rcx-0x77]
0x44cd42    sahf
0x44cd44    or [rax-0x7d], cl
0x44cd47    ret

------> offset: 0x44cd42
0x44cd42    sahf
0x44cd44    or [rax-0x7d], cl
0x44cd47    ret

------> offset: 0x44d03d
0x44d03d    call 0xfffffffffb06c8cb
0x44d042    add ch, [rcx]
0x44d044    retf 0xd189

------> offset: 0x44d041
0x44d041    cli
0x44d042    add ch, [rcx]
0x44d044    retf 0xd189

------> offset: 0x44d042
0x44d042    add ch, [rcx]
0x44d044    retf 0xd189

------> offset: 0x44d05f
0x44d05f    ret 0x4c30

------> offset: 0x44d072
0x44d072    or al, 0x85
0x44d074    sal byte [rbp+0x5], 0xf6
0x44d078    ret 0x7450

------> offset: 0x44d074
0x44d074    sal byte [rbp+0x5], 0xf6
0x44d078    ret 0x7450

------> offset: 0x44d078
0x44d078    ret 0x7450

------> offset: 0x44d1f1
0x44d1f1    wait
0x44d1f2    ret

------> offset: 0x44d247
0x44d247    add cl, [rax+0x1]
0x44d24a    ret 0x8348

------> offset: 0x44d5f6
0x44d5f6    dec dword [rcx-0x39]
0x44d5f9    ret

------> offset: 0x44d67e
0x44d67e    ret 0x4501

------> offset: 0x44d75d
0x44d75d    dec dword [rax-0x77]
0x44d760    ret 0xf4a

------> offset: 0x44d760
0x44d760    ret 0xf4a

------> offset: 0x44d93e
0x44d93e    lea ebx, [rdi+rdi*8-0x1]
0x44d942    dec dword [rax-0x77]
0x44d945    ret 0x858b

------> offset: 0x44d942
0x44d942    dec dword [rax-0x77]
0x44d945    ret 0x858b

------> offset: 0x44d945
0x44d945    ret 0x858b

------> offset: 0x44d96a
0x44d96a    ret 0x1e5

------> offset: 0x44da66
0x44da66    ret 0x1b8

------> offset: 0x44db7e
0x44db7e    add [rcx-0x77], cl
0x44db82    ror byte [rax-0x77], 0x1
0x44db85    ret 0xc5e8

------> offset: 0x44db82
0x44db82    ror byte [rax-0x77], 0x1
0x44db85    ret 0xc5e8

------> offset: 0x44db85
0x44db85    ret 0xc5e8

------> offset: 0x44dbb8
0x44dbb8    dec dword [rax+0x29]
0x44dbbb    iret

------> offset: 0x44ddbb
0x44ddbb    ret 0x8d0f

------> offset: 0x44e127
0x44e127    fimul word [rax-0x7d]
0x44e12a    ret

------> offset: 0x44e1ff
0x44e1ff    lea ebx, [rdi+rdi*8-0x1]
0x44e203    dec dword [rax-0x77]
0x44e206    ret 0x3ae9

------> offset: 0x44e203
0x44e203    dec dword [rax-0x77]
0x44e206    ret 0x3ae9

------> offset: 0x44e206
0x44e206    ret 0x3ae9

------> offset: 0x44e477
0x44e477    push rbp
0x44e478    ret 0x0

------> offset: 0x44e4d4
0x44e4d4    add [rax], al
0x44e4d6    add [rax+0x29], cl
0x44e4d9    ret 0x8349

------> offset: 0x44e4d6
0x44e4d6    add [rax+0x29], cl
0x44e4d9    ret 0x8349

------> offset: 0x44e4d9
0x44e4d9    ret 0x8349

------> offset: 0x44e6a1
0x44e6a1    rol byte [rcx], 0x29
0x44e6a4    iret

------> offset: 0x44e6a2
0x44e6a2    add [rcx], ebp
0x44e6a4    iret

------> offset: 0x44e6b3
0x44e6b3    mov esi, 0x77cf390e
0x44e6b8    fild word [rcx+rcx*4-0x40]
0x44e6bc    ret

------> offset: 0x44e6b5
0x44e6b5    cmp edi, ecx
0x44e6b7    ja 0x44e698
0x44e6b9    mov eax, r8d
0x44e6bc    ret

------> offset: 0x44e6b7
0x44e6b7    ja 0x44e698
0x44e6b9    mov eax, r8d
0x44e6bc    ret

------> offset: 0x44e6b8
0x44e6b8    fild word [rcx+rcx*4-0x40]
0x44e6bc    ret

------> offset: 0x44e6b9
0x44e6b9    mov eax, r8d
0x44e6bc    ret

------> offset: 0x44e6cc
0x44e6cc    sal bh, cl
0x44e6ce    int1
0x44e6cf    add r8d, eax
0x44e6d2    mov eax, r8d
0x44e6d5    ret

------> offset: 0x44e6cd
0x44e6cd    div ecx
0x44e6cf    add r8d, eax
0x44e6d2    mov eax, r8d
0x44e6d5    ret

------> offset: 0x44e6ce
0x44e6ce    int1
0x44e6cf    add r8d, eax
0x44e6d2    mov eax, r8d
0x44e6d5    ret

------> offset: 0x44e6cf
0x44e6cf    add r8d, eax
0x44e6d2    mov eax, r8d
0x44e6d5    ret

------> offset: 0x44e6d0
0x44e6d0    add eax, eax
0x44e6d2    mov eax, r8d
0x44e6d5    ret

------> offset: 0x44e767
0x44e767    mov eax, r8d
0x44e76a    add rsp, 0x18
0x44e76e    pop rbx
0x44e76f    pop rbp
0x44e770    ret

------> offset: 0x44e768
0x44e768    mov eax, eax
0x44e76a    add rsp, 0x18
0x44e76e    pop rbx
0x44e76f    pop rbp
0x44e770    ret

------> offset: 0x44e769
0x44e769    ror byte [rax-0x7d], 0xc4
0x44e76d    sbb [rbx+0x5d], bl
0x44e770    ret

------> offset: 0x44ea3c
0x44ea3c    add ecx, ebp
0x44ea3e    iret

------> offset: 0x44ecbe
0x44ecbe    add [rax-0x77], cl
0x44ecc2    ret 0xc148

------> offset: 0x44ed06
0x44ed06    xchg esp, eax
0x44ed07    and al, 0x2c
0x44ed09    add [rax], eax
0x44ed0b    add [rcx-0x77], cl
0x44ed0e    ret

------> offset: 0x44ed07
0x44ed07    and al, 0x2c
0x44ed09    add [rax], eax
0x44ed0b    add [rcx-0x77], cl
0x44ed0e    ret

------> offset: 0x44ed09
0x44ed09    add [rax], eax
0x44ed0b    add [rcx-0x77], cl
0x44ed0e    ret

------> offset: 0x44ed0b
0x44ed0b    add [rcx-0x77], cl
0x44ed0e    ret

------> offset: 0x44ed41
0x44ed41    add cl, [rax-0x77]
0x44ed44    ret 0xf748

------> offset: 0x44ed58
0x44ed58    ret 0x8166

------> offset: 0x44ee98
0x44ee98    push rax
0x44ee99    dec dword [rax+0x29]
0x44ee9c    ror byte [rax+0x29], 0x1
0x44ee9f    retf 0xf748

------> offset: 0x44ee99
0x44ee99    dec dword [rax+0x29]
0x44ee9c    ror byte [rax+0x29], 0x1
0x44ee9f    retf 0xf748

------> offset: 0x44ee9c
0x44ee9c    ror byte [rax+0x29], 0x1
0x44ee9f    retf 0xf748

------> offset: 0x44ef7b
0x44ef7b    ret 0xbe07

------> offset: 0x44f014
0x44f014    ret 0xbe48

------> offset: 0x44f409
0x44f409    ret 0x832d

------> offset: 0x44f5d5
0x44f5d5    add [rax], al
0x44f5d7    add [rax-0x39], cl
0x44f5da    ret 0xffe8

------> offset: 0x44f606
0x44f606    jz 0x44f652
0x44f608    add [rax+0xf], cl
0x44f60b    retf 0xe8c1

------> offset: 0x44f607
0x44f607    add [rax+0xf], cl
0x44f60b    retf 0xe8c1

------> offset: 0x44f60b
0x44f60b    retf 0xe8c1

------> offset: 0x44fb47
0x44fb47    add dword [rax], 0x63480000
0x44fb4d    iret

------> offset: 0x44fb48
0x44fb48    add [rax], al
0x44fb4a    add [rax+0x63], cl
0x44fb4d    iret

------> offset: 0x44fb4a
0x44fb4a    add [rax+0x63], cl
0x44fb4d    iret

------> offset: 0x44fb5a
0x44fb5a    cmpsb
0x44fb5b    add [rax], al
0x44fb5d    add [rcx-0x39], cl
0x44fb60    ret 0xffe0

------> offset: 0x44fb5b
0x44fb5b    add [rax], al
0x44fb5d    add [rcx-0x39], cl
0x44fb60    ret 0xffe0

------> offset: 0x44fb5d
0x44fb5d    add [rcx-0x39], cl
0x44fb60    ret 0xffe0

------> offset: 0x44fb68
0x44fb68    ret 0x4d64

------> offset: 0x44ff58
0x44ff58    adc al, ch
0x44ff5a    ret 0xfbd4

------> offset: 0x44ff5a
0x44ff5a    ret 0xfbd4

------> offset: 0x450032
0x450032    push qword 0x24448b4c
0x450037    jo 0x450022
0x450039    iret

------> offset: 0x450037
0x450037    jo 0x450022
0x450039    iret

------> offset: 0x45036c
0x45036c    add [rdi], cl
0x45036e    xchg ebp, esi
0x450370    add [rax], al
0x450372    add [rax-0x7d], cl
0x450375    ret

------> offset: 0x45036e
0x45036e    xchg ebp, esi
0x450370    add [rax], al
0x450372    add [rax-0x7d], cl
0x450375    ret

------> offset: 0x45036f
0x45036f    cmc
0x450370    add [rax], al
0x450372    add [rax-0x7d], cl
0x450375    ret

------> offset: 0x45045a
0x45045a    or [rcx+0x415d5bd0], cl
0x450460    pop rsp
0x450461    pop r13
0x450463    ret

------> offset: 0x45045b
0x45045b    mov eax, edx
0x45045d    pop rbx
0x45045e    pop rbp
0x45045f    pop r12
0x450461    pop r13
0x450463    ret

------> offset: 0x45045c
0x45045c    rcr byte [rbx+0x5d], 0x1
0x45045f    pop r12
0x450461    pop r13
0x450463    ret

------> offset: 0x450543
0x450543    or [rax-0x7d], cl
0x450546    ret 0x8404

------> offset: 0x450546
0x450546    ret 0x8404

------> offset: 0x450551
0x450551    sbb [rax-0x77], cl
0x450554    ret 0x6349

------> offset: 0x450554
0x450554    ret 0x6349

------> offset: 0x45055d
0x45055d    retf 0xa7e

------> offset: 0x45059d
0x45059d    pop r13
0x45059f    mov eax, 0x1
0x4505a4    pop r14
0x4505a6    ret

------> offset: 0x45059e
0x45059e    pop rbp
0x45059f    mov eax, 0x1
0x4505a4    pop r14
0x4505a6    ret

------> offset: 0x45059f
0x45059f    mov eax, 0x1
0x4505a4    pop r14
0x4505a6    ret

------> offset: 0x4505a0
0x4505a0    add [rax], eax
0x4505a2    add [rax], al
0x4505a4    pop r14
0x4505a6    ret

------> offset: 0x4505a1
0x4505a1    add [rax], al
0x4505a3    add [rcx+0x5e], al
0x4505a6    ret

------> offset: 0x4505a2
0x4505a2    add [rax], al
0x4505a4    pop r14
0x4505a6    ret

------> offset: 0x4505a3
0x4505a3    add [rcx+0x5e], al
0x4505a6    ret

------> offset: 0x450610
0x450610    add al, 0x8b
0x450612    or [rax-0x7d], cl
0x450615    ret 0x8504

------> offset: 0x450612
0x450612    or [rax-0x7d], cl
0x450615    ret 0x8504

------> offset: 0x450615
0x450615    ret 0x8504

------> offset: 0x450620
0x450620    sbb ecx, [rax-0x77]
0x450623    ret 0x6348

------> offset: 0x450629
0x450629    fimul dword [rax-0x3f]
0x45062c    cli
0x45062d    add cl, [rax+0x39]
0x450630    retf 0x97e

------> offset: 0x45062c
0x45062c    cli
0x45062d    add cl, [rax+0x39]
0x450630    retf 0x97e

------> offset: 0x45062d
0x45062d    add cl, [rax+0x39]
0x450630    retf 0x97e

------> offset: 0x450630
0x450630    retf 0x97e

------> offset: 0x450655
0x450655    mov [rdi], r13
0x450658    pop rbx
0x450659    pop rbp
0x45065a    pop r12
0x45065c    pop r13
0x45065e    ret

------> offset: 0x450656
0x450656    mov [rdi], ebp
0x450658    pop rbx
0x450659    pop rbp
0x45065a    pop r12
0x45065c    pop r13
0x45065e    ret

------> offset: 0x45066b
0x45066b    pop r12
0x45066d    mov eax, 0x1
0x450672    pop r13
0x450674    ret

------> offset: 0x45066c
0x45066c    pop rsp
0x45066d    mov eax, 0x1
0x450672    pop r13
0x450674    ret

------> offset: 0x45066d
0x45066d    mov eax, 0x1
0x450672    pop r13
0x450674    ret

------> offset: 0x45066e
0x45066e    add [rax], eax
0x450670    add [rax], al
0x450672    pop r13
0x450674    ret

------> offset: 0x45066f
0x45066f    add [rax], al
0x450671    add [rcx+0x5d], al
0x450674    ret

------> offset: 0x450670
0x450670    add [rax], al
0x450672    pop r13
0x450674    ret

------> offset: 0x450671
0x450671    add [rcx+0x5d], al
0x450674    ret

------> offset: 0x450710
0x450710    pop rsp
0x450711    adc al, 0x27
0x450713    add [rax+0x63], cl
0x450716    retf 0x8948

------> offset: 0x450711
0x450711    adc al, 0x27
0x450713    add [rax+0x63], cl
0x450716    retf 0x8948

------> offset: 0x450713
0x450713    add [rax+0x63], cl
0x450716    retf 0x8948

------> offset: 0x450733
0x450733    sub al, 0x27
0x450735    add [rbp+0x5c], dh
0x450738    mov eax, edx
0x45073a    pop rbx
0x45073b    ret

------> offset: 0x450735
0x450735    add [rbp+0x5c], dh
0x450738    mov eax, edx
0x45073a    pop rbx
0x45073b    ret

------> offset: 0x450736
0x450736    jnz 0x450794
0x450738    mov eax, edx
0x45073a    pop rbx
0x45073b    ret

------> offset: 0x450737
0x450737    pop rsp
0x450738    mov eax, edx
0x45073a    pop rbx
0x45073b    ret

------> offset: 0x45075c
0x45075c    retf 0xebff

------> offset: 0x4508f1
0x4508f1    jnz 0x4508fb
0x4508f3    jmp 0x4508f9
0x4508f5    dec dword [rdx]
0x4508f7    jnz 0x4508fb
0x4508f9    ret

------> offset: 0x4508f2
0x4508f2    or bl, ch
0x4508f4    add al, 0xff
0x4508f6    or dh, [rbp+0x2]
0x4508f9    ret

------> offset: 0x4508f3
0x4508f3    jmp 0x4508f9
0x4508f5    dec dword [rdx]
0x4508f7    jnz 0x4508fb
0x4508f9    ret

------> offset: 0x4508f4
0x4508f4    add al, 0xff
0x4508f6    or dh, [rbp+0x2]
0x4508f9    ret

------> offset: 0x4508f5
0x4508f5    dec dword [rdx]
0x4508f7    jnz 0x4508fb
0x4508f9    ret

------> offset: 0x4508f6
0x4508f6    or dh, [rbp+0x2]
0x4508f9    ret

------> offset: 0x4508f7
0x4508f7    jnz 0x4508fb
0x4508f9    ret

------> offset: 0x451278
0x451278    push rsp
0x451279    test [rax], eax
0x45127b    add [rax-0x77], cl
0x45127e    ret 0xb848

------> offset: 0x451279
0x451279    test [rax], eax
0x45127b    add [rax-0x77], cl
0x45127e    ret 0xb848

------> offset: 0x45127b
0x45127b    add [rax-0x77], cl
0x45127e    ret 0xb848

------> offset: 0x45127e
0x45127e    ret 0xb848

------> offset: 0x4512ef
0x4512ef    retf 0xfffb

------> offset: 0x45137d
0x45137d    inc dword [rcx+0x39]
0x451380    ret

------> offset: 0x45146f
0x45146f    rol byte [rcx+0x39], 0x1
0x451472    ret

------> offset: 0x4519ba
0x4519ba    dec dword [rax-0x3f]
0x4519bd    stc
0x4519be    add cl, [rax-0x77]
0x4519c1    retf 0x8948

------> offset: 0x4519bd
0x4519bd    stc
0x4519be    add cl, [rax-0x77]
0x4519c1    retf 0x8948

------> offset: 0x4519be
0x4519be    add cl, [rax-0x77]
0x4519c1    retf 0x8948

------> offset: 0x451a9d
0x451a9d    rol dword [rcx+0xf], 0xb6
0x451aa1    or al, 0x89
0x451aa4    ret 0xeac0

------> offset: 0x451aa0
0x451aa0    mov dh, 0x46
0x451aa2    or al, 0x89
0x451aa4    ret 0xeac0

------> offset: 0x451e37
0x451e37    jg 0x451e62
0x451e39    retf 0xc101

------> offset: 0x451e39
0x451e39    retf 0xc101

------> offset: 0x452131
0x452131    mov [0x8948c7894d00002a], al
0x45213a    iret

------> offset: 0x45272c
0x45272c    jo 0x45272e
0x45272e    add [rax-0x77], cl
0x452731    ret 0xb848

------> offset: 0x4527f4
0x4527f4    xchg ebp, eax
0x4527f5    shr dh, 0xff
0x4527f8    dec dword [rcx+0x39]
0x4527fb    ret 0x850f

------> offset: 0x4527f5
0x4527f5    shr dh, 0xff
0x4527f8    dec dword [rcx+0x39]
0x4527fb    ret 0x850f

------> offset: 0x45284f
0x45284f    xchg eax, ebx
0x452851    add [rax], al
0x452853    add [rax-0x77], cl
0x452856    retf 0x8948

------> offset: 0x452851
0x452851    add [rax], al
0x452853    add [rax-0x77], cl
0x452856    retf 0x8948

------> offset: 0x452853
0x452853    add [rax-0x77], cl
0x452856    retf 0x8948

------> offset: 0x45290f
0x45290f    inc dword [rcx+0x29]
0x452912    ret 0x3945

------> offset: 0x452912
0x452912    ret 0x3945

------> offset: 0x45292b
0x45292b    imul eax
0x45292d    mov edi, 0xffffffffe9fffc24
0x452932    ret 0xfff0

------> offset: 0x45292d
0x45292d    mov edi, 0xffffffffe9fffc24
0x452932    ret 0xfff0

------> offset: 0x452af0
0x452af0    add [rbx-0x7bf0fe40], eax
0x452af6    ret

------> offset: 0x452dad
0x452dad    ret 0x22

------> offset: 0x452db8
0x452db8    push qword 0x29ffffef
0x452dbd    retf 0xd039

------> offset: 0x4532e7
0x4532e7    xchg [rax-0x7d], cl
0x4532ea    ret

------> offset: 0x4535cf
0x4535cf    jnz 0x45361b
0x4535d1    add cl, ch
0x4535d3    retf 0xffd7

------> offset: 0x4535d0
0x4535d0    add cl, bpl
0x4535d3    retf 0xffd7

------> offset: 0x4535d1
0x4535d1    add cl, ch
0x4535d3    retf 0xffd7

------> offset: 0x4535d3
0x4535d3    retf 0xffd7

------> offset: 0x4538a6
0x4538a6    xor [rbp+0x29], eax
0x4538a9    retf 0x3945

------> offset: 0x4538a9
0x4538a9    retf 0x3945

------> offset: 0x453caf
0x453caf    ror byte [rax-0x77], 0x1
0x453cb2    ret 0xc148

------> offset: 0x453f45
0x453f45    inc dword [rax]
0x453f47    add [rax], al
0x453f49    add [rcx-0x77], cl
0x453f4c    ret 0xa1e9

------> offset: 0x453f47
0x453f47    add [rax], al
0x453f49    add [rcx-0x77], cl
0x453f4c    ret 0xa1e9

------> offset: 0x453f49
0x453f49    add [rcx-0x77], cl
0x453f4c    ret 0xa1e9

------> offset: 0x453f4c
0x453f4c    ret 0xa1e9

------> offset: 0x454108
0x454108    and bh, al
0x45410a    add ch, [rbx]
0x45410c    add [rax], al
0x45410e    add cl, ch
0x454110    iret

------> offset: 0x45410a
0x45410a    add ch, [rbx]
0x45410c    add [rax], al
0x45410e    add cl, ch
0x454110    iret

------> offset: 0x4541d0
0x4541d0    dec dword [rdi]
0x4541d2    test edi, ebp
0x4541d4    jmp 0xffffffff899241d8
0x4541d9    iret

------> offset: 0x4541d2
0x4541d2    test edi, ebp
0x4541d4    jmp 0xffffffff899241d8
0x4541d9    iret

------> offset: 0x4541d3
0x4541d3    out dx, eax
0x4541d4    jmp 0xffffffff899241d8
0x4541d9    iret

------> offset: 0x4541d4
0x4541d4    jmp 0xffffffff899241d8
0x4541d9    iret

------> offset: 0x454256
0x454256    cmpsd
0x454257    iret

------> offset: 0x4542c9
0x4542c9    jmp 0xffffffff899242cd
0x4542ce    iret

------> offset: 0x4544a9
0x4544a9    test [rdi], ecx
0x4544ab    retf 0xffff

------> offset: 0x4544e7
0x4544e7    pop rax
0x4544e8    retf

------> offset: 0x45454d
0x45454d    xchg edx, eax
0x45454e    retf

------> offset: 0x4547ec
0x4547ec    inc dword [rax]
0x4547ee    add [rax], al
0x4547f0    add cl, ch
0x4547f2    push rax
0x4547f3    iret

------> offset: 0x4547ee
0x4547ee    add [rax], al
0x4547f0    add cl, ch
0x4547f2    push rax
0x4547f3    iret

------> offset: 0x4547f0
0x4547f0    add cl, ch
0x4547f2    push rax
0x4547f3    iret

------> offset: 0x4547f2
0x4547f2    push rax
0x4547f3    iret

------> offset: 0x45485f
0x45485f    or bl, ch
0x454861    iret

------> offset: 0x454a08
0x454a08    cwde
0x454a09    imul ecx, [rdx+0x0], -0x18
0x454a0d    pop rdi
0x454a0e    iret

------> offset: 0x454a09
0x454a09    imul ecx, [rdx+0x0], -0x18
0x454a0d    pop rdi
0x454a0e    iret

------> offset: 0x454a0a
0x454a0a    add al, bpl
0x454a0d    pop rdi
0x454a0e    iret

------> offset: 0x454a0b
0x454a0b    add al, ch
0x454a0d    pop rdi
0x454a0e    iret

------> offset: 0x454a0d
0x454a0d    pop rdi
0x454a0e    iret

------> offset: 0x454afc
0x454afc    rol byte [rcx], 0x75
0x454aff    retf 0xb8e9

------> offset: 0x454aff
0x454aff    retf 0xb8e9

------> offset: 0x454ce8
0x454ce8    xchg esp, eax
0x454ce9    retf

------> offset: 0x454d11
0x454d11    and bh, al
0x454d13    add ah, [rax]
0x454d15    add [rax], al
0x454d17    add cl, ch
0x454d19    retf

------> offset: 0x454d13
0x454d13    add ah, [rax]
0x454d15    add [rax], al
0x454d17    add cl, ch
0x454d19    retf

------> offset: 0x454d15
0x454d15    add [rax], al
0x454d17    add cl, ch
0x454d19    retf

------> offset: 0x454d17
0x454d17    add cl, ch
0x454d19    retf

------> offset: 0x454dc4
0x454dc4    inc dword [rax]
0x454dc6    add [rax], al
0x454dc8    add [rcx-0x77], cl
0x454dcb    ret 0x22e9

------> offset: 0x454dc6
0x454dc6    add [rax], al
0x454dc8    add [rcx-0x77], cl
0x454dcb    ret 0x22e9

------> offset: 0x454dc8
0x454dc8    add [rcx-0x77], cl
0x454dcb    ret 0x22e9

------> offset: 0x454dcb
0x454dcb    ret 0x22e9

------> offset: 0x4550aa
0x4550aa    retf 0xffbf

------> offset: 0x455697
0x455697    dec dword [rax-0x75]
0x45569a    add [rsi-0x77], ah
0x45569d    or cl, ch
0x45569f    push rbp
0x4556a0    ret

------> offset: 0x45569a
0x45569a    add [rsi-0x77], ah
0x45569d    or cl, ch
0x45569f    push rbp
0x4556a0    ret

------> offset: 0x45569d
0x45569d    or cl, ch
0x45569f    push rbp
0x4556a0    ret

------> offset: 0x45569f
0x45569f    push rbp
0x4556a0    ret

------> offset: 0x45570b
0x45570b    ret 0xfffa

------> offset: 0x455929
0x455929    mov [0x850f01c08300002d], eax
0x455932    iret

------> offset: 0x45592c
0x45592c    add [rbx-0x7af0fe40], al
0x455932    iret

------> offset: 0x4559c7
0x4559c7    add [rbx-0x7af0fe40], al
0x4559cd    ret 0xffdc

------> offset: 0x4559cd
0x4559cd    ret 0xffdc

------> offset: 0x455bf0
0x455bf0    rol byte [rcx], 0xf
0x455bf3    test [rcx], esp
0x455bf5    retf 0xffff

------> offset: 0x455bf1
0x455bf1    add [rdi], ecx
0x455bf3    test [rcx], esp
0x455bf5    retf 0xffff

------> offset: 0x455bf3
0x455bf3    test [rcx], esp
0x455bf5    retf 0xffff

------> offset: 0x455bf9
0x455bf9    sal byte [rdx-0x7cb70001], 0x7c
0x455c00    ret 0xc0

------> offset: 0x455c84
0x455c84    add [rax], al
0x455c86    add [rax-0x77], cl
0x455c89    shr ecx, 0x17
0x455c8c    retf

------> offset: 0x455c86
0x455c86    add [rax-0x77], cl
0x455c89    shr ecx, 0x17
0x455c8c    retf

------> offset: 0x455c89
0x455c89    shr ecx, 0x17
0x455c8c    retf

------> offset: 0x455f19
0x455f19    add [rcx+0x415d5bc8], cl
0x455f1f    pop rsp
0x455f20    pop r13
0x455f22    ret

------> offset: 0x456173
0x456173    cmp [rax-0x77], cl
0x456176    ret 0xef83

------> offset: 0x456176
0x456176    ret 0xef83

------> offset: 0x456252
0x456252    adc [rcx+rcx*4-0x20], cl
0x456256    pop rbx
0x456257    pop rbp
0x456258    pop r12
0x45625a    ret

------> offset: 0x456255
0x456255    loopnz 0x4562b2
0x456257    pop rbp
0x456258    pop r12
0x45625a    ret

------> offset: 0x456341
0x456341    xor [rax-0x77], cl
0x456344    ret 0xee83

------> offset: 0x456344
0x456344    ret 0xee83

------> offset: 0x456354
0x456354    loopz 0x4562d7
0x456356    stc
0x456357    int 3
0x456358    int 3
0x456359    int 3
0x45635a    or al, 0x7e
0x45635c    ret

------> offset: 0x456356
0x456356    stc
0x456357    int 3
0x456358    int 3
0x456359    int 3
0x45635a    or al, 0x7e
0x45635c    ret

------> offset: 0x456357
0x456357    int 3
0x456358    int 3
0x456359    int 3
0x45635a    or al, 0x7e
0x45635c    ret

------> offset: 0x456358
0x456358    int 3
0x456359    int 3
0x45635a    or al, 0x7e
0x45635c    ret

------> offset: 0x456359
0x456359    int 3
0x45635a    or al, 0x7e
0x45635c    ret

------> offset: 0x45635a
0x45635a    or al, 0x7e
0x45635c    ret

------> offset: 0x45637d
0x45637d    retf 0xe883

------> offset: 0x456406
0x456406    add [rax-0x77], cl
0x45640a    retf 0x4b80

------> offset: 0x45640a
0x45640a    retf 0x4b80

------> offset: 0x45642d
0x45642d    dec dword [rax-0x7d]
0x456430    ret 0xeb02

------> offset: 0x456430
0x456430    ret 0xeb02

------> offset: 0x456449
0x456449    add cl, [rax-0x77]
0x45644c    retf 0x59e9

------> offset: 0x45648c
0x45648c    add [rax-0x7d], ecx
0x45648f    ret 0x8502

------> offset: 0x45648f
0x45648f    ret 0x8502

------> offset: 0x45657a
0x45657a    add cl, [rax-0x7d]
0x45657d    ret 0xe902

------> offset: 0x45657d
0x45657d    ret 0xe902

------> offset: 0x45661c
0x45661c    adc [rbx+0x5d], bl
0x45661f    mov rax, r12
0x456622    pop r12
0x456624    ret

------> offset: 0x456620
0x456620    mov eax, esp
0x456622    pop r12
0x456624    ret

------> offset: 0x456621
0x456621    loopnz 0x456664
0x456623    pop rsp
0x456624    ret

------> offset: 0x456646
0x456646    and edi, eax
0x456648    xor al, 0x7
0x45664b    add [rax], eax
0x45664d    add cl, ch
0x45664f    iret

------> offset: 0x456648
0x456648    xor al, 0x7
0x45664b    add [rax], eax
0x45664d    add cl, ch
0x45664f    iret

------> offset: 0x45664b
0x45664b    add [rax], eax
0x45664d    add cl, ch
0x45664f    iret

------> offset: 0x456652
0x456652    dec dword [rdi]
0x456654    mov dh, 0x53
0x456656    or al, 0xf6
0x456658    ret 0x7404

------> offset: 0x456654
0x456654    mov dh, 0x53
0x456656    or al, 0xf6
0x456658    ret 0x7404

------> offset: 0x456655
0x456655    push rbx
0x456656    or al, 0xf6
0x456658    ret 0x7404

------> offset: 0x456656
0x456656    or al, 0xf6
0x456658    ret 0x7404

------> offset: 0x4566ad
0x4566ad    ret 0x8548

------> offset: 0x456787
0x456787    inc dword [rbx-0x7bf09608]
0x45678d    ret 0xfffe

------> offset: 0x4567fc
0x4567fc    retf 0x8d41

------> offset: 0x45695d
0x45695d    add [rax], al
0x45695f    add [rax-0x16eff3b5], al
0x456965    iret

------> offset: 0x45695f
0x45695f    add [rax-0x16eff3b5], al
0x456965    iret

------> offset: 0x456963
0x456963    adc cl, ch
0x456965    iret

------> offset: 0x45698b
0x45698b    add al, 0x8b
0x45698d    cmp [rax-0x77], cl
0x456990    ret 0xef83

------> offset: 0x456992
0x456992    out dx, eax
0x456993    xor [rbx-0x78f0f601], al
0x456999    ret

------> offset: 0x456993
0x456993    xor [rbx-0x78f0f601], al
0x456999    ret

------> offset: 0x456a1a
0x456a1a    dec byte [rax+0xf]
0x456a1d    ret 0x894c

------> offset: 0x456a5f
0x456a5f    retf 0xa8e9

------> offset: 0x456ab9
0x456ab9    add al, 0x8b
0x456abb    xor [rax-0x77], cl
0x456abe    ret 0xee83

------> offset: 0x456b39
0x456b39    ret 0x7a8b

------> offset: 0x456c0f
0x456c0f    add [rdi], cl
0x456c11    mov dh, 0x53
0x456c13    or al, 0xf6
0x456c15    ret 0xf04

------> offset: 0x456c11
0x456c11    mov dh, 0x53
0x456c13    or al, 0xf6
0x456c15    ret 0xf04

------> offset: 0x456c12
0x456c12    push rbx
0x456c13    or al, 0xf6
0x456c15    ret 0xf04

------> offset: 0x456c13
0x456c13    or al, 0xf6
0x456c15    ret 0xf04

------> offset: 0x456c6f
0x456c6f    ret 0x107

------> offset: 0x456cb9
0x456cb9    loopnz 0x456d16
0x456cbb    pop rbp
0x456cbc    pop r12
0x456cbe    ret

------> offset: 0x456d0b
0x456d0b    add [rax-0x7d], ecx
0x456d0e    ret 0x8508

------> offset: 0x456d0e
0x456d0e    ret 0x8508

------> offset: 0x456df4
0x456df4    add cl, [rdi]
0x456df6    xchg ebp, eax
0x456df7    ret 0x5389

------> offset: 0x456df6
0x456df6    xchg ebp, eax
0x456df7    ret 0x5389

------> offset: 0x456df7
0x456df7    ret 0x5389

------> offset: 0x456ea1
0x456ea1    add [rax+0x63], cl
0x456ea4    enter 0x8b4c, 0x4
0x456ea8    retf 0x854d

------> offset: 0x456ea4
0x456ea4    enter 0x8b4c, 0x4
0x456ea8    retf 0x854d

------> offset: 0x456ea8
0x456ea8    retf 0x854d

------> offset: 0x456f8b
0x456f8b    add [rax], al
0x456f8d    add [rax-0x77], cl
0x456f90    fucomip st0, st0
0x456f92    retf 0xfb67

------> offset: 0x456f8d
0x456f8d    add [rax-0x77], cl
0x456f90    fucomip st0, st0
0x456f92    retf 0xfb67

------> offset: 0x456f90
0x456f90    fucomip st0, st0
0x456f92    retf 0xfb67

------> offset: 0x456f92
0x456f92    retf 0xfb67

------> offset: 0x45700c
0x45700c    retf 0x27e9

------> offset: 0x4570f1
0x4570f1    jnz 0x45716a
0x4570f3    pop rbx
0x4570f4    pop rbp
0x4570f5    mov eax, edx
0x4570f7    pop r12
0x4570f9    ret

------> offset: 0x4570f2
0x4570f2    ja 0x45714f
0x4570f4    pop rbp
0x4570f5    mov eax, edx
0x4570f7    pop r12
0x4570f9    ret

------> offset: 0x4570f3
0x4570f3    pop rbx
0x4570f4    pop rbp
0x4570f5    mov eax, edx
0x4570f7    pop r12
0x4570f9    ret

------> offset: 0x4570f4
0x4570f4    pop rbp
0x4570f5    mov eax, edx
0x4570f7    pop r12
0x4570f9    ret

------> offset: 0x4570f5
0x4570f5    mov eax, edx
0x4570f7    pop r12
0x4570f9    ret

------> offset: 0x4570f6
0x4570f6    rol byte [rcx+0x5c], 0x1
0x4570f9    ret

------> offset: 0x457263
0x457263    pop rbx
0x457264    div rbp
0x457267    pop rbp
0x457268    pop r12
0x45726a    pop r13
0x45726c    ret

------> offset: 0x457264
0x457264    div rbp
0x457267    pop rbp
0x457268    pop r12
0x45726a    pop r13
0x45726c    ret

------> offset: 0x457265
0x457265    div ebp
0x457267    pop rbp
0x457268    pop r12
0x45726a    pop r13
0x45726c    ret

------> offset: 0x457266
0x457266    cmc
0x457267    pop rbp
0x457268    pop r12
0x45726a    pop r13
0x45726c    ret

------> offset: 0x45728c
0x45728c    cmp [rax-0x7d], cl
0x45728f    clc
0x457290    dec dword [rax-0x77]
0x457293    ret 0xf40

------> offset: 0x45728f
0x45728f    clc
0x457290    dec dword [rax-0x77]
0x457293    ret 0xf40

------> offset: 0x457290
0x457290    dec dword [rax-0x77]
0x457293    ret 0xf40

------> offset: 0x457293
0x457293    ret 0xf40

------> offset: 0x4572b4
0x4572b4    mov rax, r13
0x4572b7    pop rbx
0x4572b8    pop rbp
0x4572b9    pop r12
0x4572bb    pop r13
0x4572bd    ret

------> offset: 0x4572b5
0x4572b5    mov eax, ebp
0x4572b7    pop rbx
0x4572b8    pop rbp
0x4572b9    pop r12
0x4572bb    pop r13
0x4572bd    ret

------> offset: 0x4572b6
0x4572b6    call 0x5c86d016
0x4572bb    pop r13
0x4572bd    ret

------> offset: 0x4573ad
0x4573ad    adc [rax-0x77], ecx
0x4573b0    retf

------> offset: 0x45777a
0x45777a    add ecx, [rax-0x7d]
0x45777d    ret

------> offset: 0x4578dd
0x4578dd    call 0x5c86d63d
0x4578e2    pop r13
0x4578e4    ret

------> offset: 0x457907
0x457907    pop rbx
0x457908    mov rax, rbp
0x45790b    pop rbp
0x45790c    pop r12
0x45790e    pop r13
0x457910    ret

------> offset: 0x457908
0x457908    mov rax, rbp
0x45790b    pop rbp
0x45790c    pop r12
0x45790e    pop r13
0x457910    ret

------> offset: 0x457909
0x457909    mov eax, ebp
0x45790b    pop rbp
0x45790c    pop r12
0x45790e    pop r13
0x457910    ret

------> offset: 0x45790a
0x45790a    call 0x41a1ba6c
0x45790f    pop rbp
0x457910    ret

------> offset: 0x457985
0x457985    lock add [rax], al
0x457988    add [rbx+0x5d], bl
0x45798b    pop r12
0x45798d    ret

------> offset: 0x45799b
0x45799b    mov eax, [rdx+0x48]
0x45799e    cmp eax, [rdx+0x4c]
0x4579a1    cmovnz eax, ecx
0x4579a4    ret

------> offset: 0x45799c
0x45799c    cmp rax, [rdx+0x4c]
0x4579a1    cmovnz eax, ecx
0x4579a4    ret

------> offset: 0x45799e
0x45799e    cmp eax, [rdx+0x4c]
0x4579a1    cmovnz eax, ecx
0x4579a4    ret

------> offset: 0x45799f
0x45799f    cmovnz r8, rcx
0x4579a4    ret

------> offset: 0x4579a1
0x4579a1    cmovnz eax, ecx
0x4579a4    ret

------> offset: 0x4579a5
0x4579a5    nop dword [rax]
0x4579a8    mov eax, 0xffffffffffffffff
0x4579ad    ret

------> offset: 0x4579ac
0x4579ac    inc ebx
0x4579ae    nop
0x4579b0    xor eax, eax
0x4579b2    ret

------> offset: 0x4579be
0x4579be    add [rax], al
0x4579c0    mov rax, [rdi+0x48]
0x4579c4    mov eax, [rax+0x4c]
0x4579c7    ret

------> offset: 0x4579bf
0x4579bf    add [rax-0x75], cl
0x4579c2    mov rax, [rax+0x4c]
0x4579c7    ret

------> offset: 0x4579c0
0x4579c0    mov rax, [rdi+0x48]
0x4579c4    mov eax, [rax+0x4c]
0x4579c7    ret

------> offset: 0x4579c1
0x4579c1    mov eax, [rdi+0x48]
0x4579c4    mov eax, [rax+0x4c]
0x4579c7    ret

------> offset: 0x4579c2
0x4579c2    mov rax, [rax+0x4c]
0x4579c7    ret

------> offset: 0x4579c4
0x4579c4    mov eax, [rax+0x4c]
0x4579c7    ret

------> offset: 0x457b87
0x457b87    sub [rcx], dh
0x457b89    rcr byte [rbx+0x5d], 0x41
0x457b8d    pop rsp
0x457b8e    pop r13
0x457b90    ret

------> offset: 0x457d38
0x457d38    pop rbp
0x457d39    sub rax, r14
0x457d3c    pop r14
0x457d3e    pop r15
0x457d40    pop rbp
0x457d41    ret

------> offset: 0x457d39
0x457d39    sub rax, r14
0x457d3c    pop r14
0x457d3e    pop r15
0x457d40    pop rbp
0x457d41    ret

------> offset: 0x457d3a
0x457d3a    sub eax, esi
0x457d3c    pop r14
0x457d3e    pop r15
0x457d40    pop rbp
0x457d41    ret

------> offset: 0x45805b
0x45805b    mov rax, rbp
0x45805e    pop rbx
0x45805f    pop rbp
0x458060    pop r12
0x458062    pop r13
0x458064    ret

------> offset: 0x45805d
0x45805d    call 0x5c86ddbd
0x458062    pop r13
0x458064    ret

------> offset: 0x45808a
0x45808a    call 0x41a1c1ec
0x45808f    pop rbp
0x458090    ret

------> offset: 0x4580e2
0x4580e2    adc [rax-0x75], cl
0x4580e6    add [rax+0x39], cl
0x4580e9    retf

------> offset: 0x458109
0x458109    clc
0x45810a    add cl, [rax+0x39]
0x45810d    ret 0x5877

------> offset: 0x45810a
0x45810a    add cl, [rax+0x39]
0x45810d    ret 0x5877

------> offset: 0x45810d
0x45810d    ret 0x5877

------> offset: 0x458266
0x458266    fimul dword [rax-0x9]
0x458269    fimul dword [rcx+0x29]
0x45826c    fisttp word [rax+0x1]
0x45826f    iret

------> offset: 0x458269
0x458269    fimul dword [rcx+0x29]
0x45826c    fisttp word [rax+0x1]
0x45826f    iret

------> offset: 0x45826c
0x45826c    fisttp word [rax+0x1]
0x45826f    iret

------> offset: 0x45830b
0x45830b    cmovg eax, ecx
0x45830e    test rdx, rdx
0x458311    jnz 0x458300
0x458313    ret

------> offset: 0x45830c
0x45830c    ror qword [r8-0x7b], 0xd2
0x458311    jnz 0x458300
0x458313    ret

------> offset: 0x45830d
0x45830d    ror dword [rax-0x7b], 0xd2
0x458311    jnz 0x458300
0x458313    ret

------> offset: 0x45830e
0x45830e    test rdx, rdx
0x458311    jnz 0x458300
0x458313    ret

------> offset: 0x45830f
0x45830f    test edx, edx
0x458311    jnz 0x458300
0x458313    ret

------> offset: 0x458311
0x458311    jnz 0x458300
0x458313    ret

------> offset: 0x458347
0x458347    adc [rax-0x77], cl
0x45834a    push rax
0x45834b    adc [rax-0x77], cl
0x45834e    ret

------> offset: 0x458348
0x458348    mov [rax+0x10], rdx
0x45834c    mov [rax+0x40], rcx
0x458350    ret

------> offset: 0x458349
0x458349    mov [rax+0x10], edx
0x45834c    mov [rax+0x40], rcx
0x458350    ret

------> offset: 0x45834a
0x45834a    push rax
0x45834b    adc [rax-0x77], cl
0x45834e    ret

------> offset: 0x45834b
0x45834b    adc [rax-0x77], cl
0x45834e    ret

------> offset: 0x45834c
0x45834c    mov [rax+0x40], rcx
0x458350    ret

------> offset: 0x45834d
0x45834d    mov [rax+0x40], ecx
0x458350    ret

------> offset: 0x458387
0x458387    adc [rax-0x77], cl
0x45838a    jo 0x45839c
0x45838c    mov [rax+0x40], rcx
0x458390    ret

------> offset: 0x458388
0x458388    mov [rax+0x10], rsi
0x45838c    mov [rax+0x40], rcx
0x458390    ret

------> offset: 0x458389
0x458389    mov [rax+0x10], esi
0x45838c    mov [rax+0x40], rcx
0x458390    ret

------> offset: 0x45838a
0x45838a    jo 0x45839c
0x45838c    mov [rax+0x40], rcx
0x458390    ret

------> offset: 0x4583de
0x4583de    mov [rbx+0x74], eax
0x4583e1    add rsp, 0x18
0x4583e5    pop rbx
0x4583e6    pop rbp
0x4583e7    ret

------> offset: 0x4583df
0x4583df    jz 0x45842a
0x4583e2    add esp, 0x18
0x4583e5    pop rbx
0x4583e6    pop rbp
0x4583e7    ret

------> offset: 0x458528
0x458528    fld qword [rax]
0x45852a    add [rax], al
0x45852c    add al, ch
0x45852e    ret 0xfffb

------> offset: 0x45852a
0x45852a    add [rax], al
0x45852c    add al, ch
0x45852e    ret 0xfffb

------> offset: 0x45852c
0x45852c    add al, ch
0x45852e    ret 0xfffb

------> offset: 0x4586c4
0x4586c4    add al, 0x48
0x4586c6    mov [rdx], ecx
0x4586c8    mov edx, [rax]
0x4586ca    mov eax, edx
0x4586cc    pop rbx
0x4586cd    ret

------> offset: 0x4586c5
0x4586c5    mov [rdx], rcx
0x4586c8    mov edx, [rax]
0x4586ca    mov eax, edx
0x4586cc    pop rbx
0x4586cd    ret

------> offset: 0x4586c6
0x4586c6    mov [rdx], ecx
0x4586c8    mov edx, [rax]
0x4586ca    mov eax, edx
0x4586cc    pop rbx
0x4586cd    ret

------> offset: 0x4586c7
0x4586c7    or cl, [rbx+0x5bd08910]
0x4586cd    ret

------> offset: 0x4586c8
0x4586c8    mov edx, [rax]
0x4586ca    mov eax, edx
0x4586cc    pop rbx
0x4586cd    ret

------> offset: 0x4587a5
0x4587a5    add [rax], r8b
0x4587a8    mov eax, 0xffffffffffffffff
0x4587ad    pop rbx
0x4587ae    ret

------> offset: 0x4587a6
0x4587a6    add [rax], al
0x4587a8    mov eax, 0xffffffffffffffff
0x4587ad    pop rbx
0x4587ae    ret

------> offset: 0x4587a7
0x4587a7    add [rax-0x1], bh
0x4587ad    pop rbx
0x4587ae    ret

------> offset: 0x45882c
0x45882c    lea edx, [rsi+0x4]
0x45882f    mov [rax], rdx
0x458832    mov eax, [rsi]
0x458834    pop rbx
0x458835    ret

------> offset: 0x45882d
0x45882d    push rsi
0x45882e    add al, 0x48
0x458830    mov [rax], edx
0x458832    mov eax, [rsi]
0x458834    pop rbx
0x458835    ret

------> offset: 0x45882e
0x45882e    add al, 0x48
0x458830    mov [rax], edx
0x458832    mov eax, [rsi]
0x458834    pop rbx
0x458835    ret

------> offset: 0x45882f
0x45882f    mov [rax], rdx
0x458832    mov eax, [rsi]
0x458834    pop rbx
0x458835    ret

------> offset: 0x458830
0x458830    mov [rax], edx
0x458832    mov eax, [rsi]
0x458834    pop rbx
0x458835    ret

------> offset: 0x458832
0x458832    mov eax, [rsi]
0x458834    pop rbx
0x458835    ret

------> offset: 0x4588d1
0x4588d1    lea ecx, [rdx+0x4]
0x4588d4    mov [rax], rcx
0x4588d7    mov eax, [rdx]
0x4588d9    pop rbx
0x4588da    ret

------> offset: 0x4588d2
0x4588d2    add al, 0x48
0x4588d5    mov [rax], ecx
0x4588d7    mov eax, [rdx]
0x4588d9    pop rbx
0x4588da    ret

------> offset: 0x4588d4
0x4588d4    mov [rax], rcx
0x4588d7    mov eax, [rdx]
0x4588d9    pop rbx
0x4588da    ret

------> offset: 0x4588d5
0x4588d5    mov [rax], ecx
0x4588d7    mov eax, [rdx]
0x4588d9    pop rbx
0x4588da    ret

------> offset: 0x4588d7
0x4588d7    mov eax, [rdx]
0x4588d9    pop rbx
0x4588da    ret

------> offset: 0x45896d
0x45896d    add [rsi-0x70], ah
0x458970    mov eax, 0xffffffffffffffff
0x458975    pop rbx
0x458976    ret

------> offset: 0x45896e
0x45896e    nop
0x458970    mov eax, 0xffffffffffffffff
0x458975    pop rbx
0x458976    ret

------> offset: 0x4589f1
0x4589f1    jae 0x458942
0x4589f7    mov eax, [rsi]
0x4589f9    pop rbx
0x4589fa    ret

------> offset: 0x458b59
0x458b59    mov es, edx
0x458b5b    add [rax], al
0x458b5d    add [rax+0x39], cl
0x458b60    ret

------> offset: 0x458b8e
0x458b8e    ror dword [rax-0x73], 0x41
0x458b92    adc [rdi], cl
0x458b94    xchg ebx, eax
0x458b95    ret 0x3948

------> offset: 0x458b91
0x458b91    adc [r15], cl
0x458b94    xchg ebx, eax
0x458b95    ret 0x3948

------> offset: 0x458bbc
0x458bbc    add [rax-0x7d], cl
0x458bbf    ret 0xf301

------> offset: 0x458c10
0x458c10    add cl, [rax-0x73]
0x458c13    jz 0x458c52
0x458c15    add [rax+0x1], cl
0x458c18    iret

------> offset: 0x458c13
0x458c13    jz 0x458c52
0x458c15    add [rax+0x1], cl
0x458c18    iret

------> offset: 0x458d6e
0x458d6e    adc [rdi], r9b
0x458d71    xchg ebx, eax
0x458d72    ret 0x3948

------> offset: 0x458e9b
0x458e9b    pop r13
0x458e9d    sub rax, r14
0x458ea0    pop r14
0x458ea2    pop r15
0x458ea4    ret

------> offset: 0x458e9c
0x458e9c    pop rbp
0x458e9d    sub rax, r14
0x458ea0    pop r14
0x458ea2    pop r15
0x458ea4    ret

------> offset: 0x458e9d
0x458e9d    sub rax, r14
0x458ea0    pop r14
0x458ea2    pop r15
0x458ea4    ret

------> offset: 0x458e9e
0x458e9e    sub eax, esi
0x458ea0    pop r14
0x458ea2    pop r15
0x458ea4    ret

------> offset: 0x458ead
0x458ead    retf 0x1de8

------> offset: 0x458ff6
0x458ff6    add [rax-0x7d], cl
0x458ff9    ret 0x4804

------> offset: 0x459080
0x459080    js 0x4590b2
0x459082    add [rbx+rcx+0x5b], dh
0x459086    pop rbp
0x459087    pop r12
0x459089    ret

------> offset: 0x459081
0x459081    xor [rax], al
0x459083    jz 0x459090
0x459085    pop rbx
0x459086    pop rbp
0x459087    pop r12
0x459089    ret

------> offset: 0x459082
0x459082    add [rbx+rcx+0x5b], dh
0x459086    pop rbp
0x459087    pop r12
0x459089    ret

------> offset: 0x459083
0x459083    jz 0x459090
0x459085    pop rbx
0x459086    pop rbp
0x459087    pop r12
0x459089    ret

------> offset: 0x459084
0x459084    or ebx, [rbx+0x5d]
0x459087    pop r12
0x459089    ret

------> offset: 0x4590a7
0x4590a7    retf 0x4808

------> offset: 0x4590b0
0x4590b0    cmp [rcx+0x5d5b7453], cl
0x4590b6    pop r12
0x4590b8    ret

------> offset: 0x4590b1
0x4590b1    mov [rbx+0x74], edx
0x4590b4    pop rbx
0x4590b5    pop rbp
0x4590b6    pop r12
0x4590b8    ret

------> offset: 0x4590b2
0x4590b2    push rbx
0x4590b3    jz 0x459110
0x4590b5    pop rbp
0x4590b6    pop r12
0x4590b8    ret

------> offset: 0x4590b3
0x4590b3    jz 0x459110
0x4590b5    pop rbp
0x4590b6    pop r12
0x4590b8    ret

------> offset: 0x4590ea
0x4590ea    add [rax-0x7b], cl
0x4590ed    push qword [rsi+rsi*4-0xa]
0x4590f1    ret 0x7508

------> offset: 0x4590ed
0x4590ed    push qword [rsi+rsi*4-0xa]
0x4590f1    ret 0x7508

------> offset: 0x4590ef
0x4590ef    mov dh, 0xf6
0x4590f1    ret 0x7508

------> offset: 0x4591e8
0x4591e8    mov [rax+0x18], rdx
0x4591ec    mov [rbx], ecx
0x4591ee    xor eax, eax
0x4591f0    pop rbx
0x4591f1    ret

------> offset: 0x4591e9
0x4591e9    mov [rax+0x18], edx
0x4591ec    mov [rbx], ecx
0x4591ee    xor eax, eax
0x4591f0    pop rbx
0x4591f1    ret

------> offset: 0x4591ea
0x4591ea    push rax
0x4591eb    sbb [rcx+0x5bc0310b], cl
0x4591f1    ret

------> offset: 0x4591eb
0x4591eb    sbb [rcx+0x5bc0310b], cl
0x4591f1    ret

------> offset: 0x4591ec
0x4591ec    mov [rbx], ecx
0x4591ee    xor eax, eax
0x4591f0    pop rbx
0x4591f1    ret

------> offset: 0x459286
0x459286    mov qword [rax+0x48], 0x0
0x45928e    pop rbx
0x45928f    ret

------> offset: 0x459287
0x459287    mov dword [rax+0x48], 0x0
0x45928e    pop rbx
0x45928f    ret

------> offset: 0x4592ca
0x4592ca    cmp eax, -0x1
0x4592cd    jz 0x4592d2
0x4592cf    and dword [rbx], -0x11
0x4592d2    pop rbx
0x4592d3    ret

------> offset: 0x4592cd
0x4592cd    jz 0x4592d2
0x4592cf    and dword [rbx], -0x11
0x4592d2    pop rbx
0x4592d3    ret

------> offset: 0x45930e
0x45930e    cmp eax, -0x1
0x459311    jz 0x459316
0x459313    and dword [rbx], -0x11
0x459316    pop rbx
0x459317    ret

------> offset: 0x459311
0x459311    jz 0x459316
0x459313    and dword [rbx], -0x11
0x459316    pop rbx
0x459317    ret

------> offset: 0x45933b
0x45933b    add [rax], al
0x45933d    add [rax], al
0x45933f    add [rax+0x63], cl
0x459342    retf 0x8d4c

------> offset: 0x45933d
0x45933d    add [rax], al
0x45933f    add [rax+0x63], cl
0x459342    retf 0x8d4c

------> offset: 0x45933f
0x45933f    add [rax+0x63], cl
0x459342    retf 0x8d4c

------> offset: 0x459369
0x459369    cmp rsi, rcx
0x45936c    jb 0x459360
0x45936e    lea eax, [rdx+rdi]
0x459371    ret

------> offset: 0x45936a
0x45936a    cmp esi, ecx
0x45936c    jb 0x459360
0x45936e    lea eax, [rdx+rdi]
0x459371    ret

------> offset: 0x45936c
0x45936c    jb 0x459360
0x45936e    lea eax, [rdx+rdi]
0x459371    ret

------> offset: 0x45937b
0x45937b    sar r8, 0x2
0x45937f    lea eax, [r8-0x1]
0x459383    ret

------> offset: 0x45937c
0x45937c    sar eax, 0x2
0x45937f    lea eax, [r8-0x1]
0x459383    ret

------> offset: 0x45947f
0x45947f    mov eax, [rdi+0x10]
0x459482    shr rdx, 0x2
0x459486    sub eax, edx
0x459488    ret

------> offset: 0x459482
0x459482    shr rdx, 0x2
0x459486    sub eax, edx
0x459488    ret

------> offset: 0x459483
0x459483    shr edx, 0x2
0x459486    sub eax, edx
0x459488    ret

------> offset: 0x45949a
0x45949a    add ch, [rcx]
0x45949c    rol bl, 0x1
0x45949e    mov eax, 0xffffffffffffffff
0x4594a3    ret

------> offset: 0x4594fd
0x4594fd    lea edx, [rdx+rcx*4]
0x459500    mov [rax], rdx
0x459503    xor eax, eax
0x459505    ret

------> offset: 0x4594fe
0x4594fe    adc al, 0x8a
0x459500    mov [rax], rdx
0x459503    xor eax, eax
0x459505    ret

------> offset: 0x459500
0x459500    mov [rax], rdx
0x459503    xor eax, eax
0x459505    ret

------> offset: 0x459501
0x459501    mov [rax], edx
0x459503    xor eax, eax
0x459505    ret

------> offset: 0x4595f3
0x4595f3    mov al, [0xeb40788b48000000]
0x4595fc    ret

------> offset: 0x459607
0x459607    in al, dx
0x459608    or al, ch
0x45960a    ret 0x1

------> offset: 0x459608
0x459608    or al, ch
0x45960a    ret 0x1

------> offset: 0x459611
0x459611    add [rax-0x77], ecx
0x459614    ret

------> offset: 0x4596dd
0x4596dd    add [rcx], dh
0x4596df    ret

------> offset: 0x4596e1
0x4596e1    and al, 0x14
0x4596e4    add [rcx], ch
0x4596e6    ret

------> offset: 0x4596e4
0x4596e4    add [rcx], ch
0x4596e6    ret

------> offset: 0x459790
0x459790    sal dword [rcx], 0x1
0x459792    ret

------> offset: 0x4597cf
0x4597cf    add [rax-0x7b], cl
0x4597d2    div byte [rbp+0x4]
0x4597d5    xor rax, rax
0x4597d8    ret

------> offset: 0x4597d0
0x4597d0    test rsi, rsi
0x4597d3    jnz 0x4597d9
0x4597d5    xor rax, rax
0x4597d8    ret

------> offset: 0x4597d1
0x4597d1    test esi, esi
0x4597d3    jnz 0x4597d9
0x4597d5    xor rax, rax
0x4597d8    ret

------> offset: 0x4597d2
0x4597d2    div byte [rbp+0x4]
0x4597d5    xor rax, rax
0x4597d8    ret

------> offset: 0x4597d3
0x4597d3    jnz 0x4597d9
0x4597d5    xor rax, rax
0x4597d8    ret

------> offset: 0x4597d4
0x4597d4    add al, 0x48
0x4597d6    xor eax, eax
0x4597d8    ret

------> offset: 0x459874
0x459874    test [rdi+0x48000000], dl
0x45987a    bsf eax, edx
0x45987d    ret

------> offset: 0x459877
0x459877    add [rax], al
0x459879    bsf rax, rdx
0x45987d    ret

------> offset: 0x4598e0
0x4598e0    test rdx, rdx
0x4598e3    jz 0x459900
0x4598e5    bsf rax, rdx
0x4598e9    ret

------> offset: 0x4598e1
0x4598e1    test edx, edx
0x4598e3    jz 0x459900
0x4598e5    bsf rax, rdx
0x4598e9    ret

------> offset: 0x4598e2
0x4598e2    sal [rbx+rbx+0x48], cl
0x4598e6    bsf eax, edx
0x4598e9    ret

------> offset: 0x4598e3
0x4598e3    jz 0x459900
0x4598e5    bsf rax, rdx
0x4598e9    ret

------> offset: 0x459912
0x459912    rol byte [rax+0x49], 0x39
0x459916    ret 0x2774

------> offset: 0x459916
0x459916    ret 0x2774

------> offset: 0x459939
0x459939    rol byte [rbp-0x149d8a2e], 0x1
0x45993f    ror byte [rcx+0x39], 0x1
0x459942    ret

------> offset: 0x45993f
0x45993f    ror byte [rcx+0x39], 0x1
0x459942    ret

------> offset: 0x459982
0x459982    ror dword [rax-0x3f], 0xe1
0x459986    and [rax+0x9], cl
0x459989    retf 0xf4c

------> offset: 0x459986
0x459986    and [rax+0x9], cl
0x459989    retf 0xf4c

------> offset: 0x459989
0x459989    retf 0xf4c

------> offset: 0x459a44
0x459a44    add [rax], al
0x459a46    bsr rax, rax
0x459a4a    add rax, rdi
0x459a4d    ret

------> offset: 0x459a45
0x459a45    add [rax+0xf], cl
0x459a48    mov ebp, 0xfffffffff80148c0
0x459a4d    ret

------> offset: 0x459a46
0x459a46    bsr rax, rax
0x459a4a    add rax, rdi
0x459a4d    ret

------> offset: 0x459a47
0x459a47    bsr eax, eax
0x459a4a    add rax, rdi
0x459a4d    ret

------> offset: 0x459a48
0x459a48    mov ebp, 0xfffffffff80148c0
0x459a4d    ret

------> offset: 0x459ad4
0x459ad4    bsr rsi, rsi
0x459ad8    lea rax, [rdi+rsi]
0x459adc    ret

------> offset: 0x459ad5
0x459ad5    bsr esi, esi
0x459ad8    lea rax, [rdi+rsi]
0x459adc    ret

------> offset: 0x459ad8
0x459ad8    lea rax, [rdi+rsi]
0x459adc    ret

------> offset: 0x459ad9
0x459ad9    lea eax, [rdi+rsi]
0x459adc    ret

------> offset: 0x459ada
0x459ada    add al, 0x37
0x459adc    ret

------> offset: 0x459b17
0x459b17    mul byte [rsi+0xf]
0x459b1a    outs dx, dword [rsi]
0x459b1b    push rdi
0x459b1c    xor [rsi+0xf], ah
0x459b1f    outs dx, dword [rsi]
0x459b20    ret

------> offset: 0x459b1a
0x459b1a    outs dx, dword [rsi]
0x459b1b    push rdi
0x459b1c    xor [rsi+0xf], ah
0x459b1f    outs dx, dword [rsi]
0x459b20    ret

------> offset: 0x459b1b
0x459b1b    push rdi
0x459b1c    xor [rsi+0xf], ah
0x459b1f    outs dx, dword [rsi]
0x459b20    ret

------> offset: 0x459b1c
0x459b1c    xor [rsi+0xf], ah
0x459b1f    outs dx, dword [rsi]
0x459b20    ret

------> offset: 0x459b52
0x459b52    shl dword [rsi+0xf], 0xd7
0x459b56    shl byte [rsi+0xf], 0x1
0x459b59    outs dx, dword [rsi]
0x459b5a    ret

------> offset: 0x459b55
0x459b55    xlat byte [rbx+al]
0x459b56    shl byte [rsi+0xf], 0x1
0x459b59    outs dx, dword [rsi]
0x459b5a    ret

------> offset: 0x459b56
0x459b56    shl byte [rsi+0xf], 0x1
0x459b59    outs dx, dword [rsi]
0x459b5a    ret

------> offset: 0x459b66
0x459b66    xlat byte [rbx+al]
0x459b67    shl byte [rsi+0xf], 0x1
0x459b6a    outs dx, dword [rsi]
0x459b6b    ret 0xf66

------> offset: 0x459b67
0x459b67    shl byte [rsi+0xf], 0x1
0x459b6a    outs dx, dword [rsi]
0x459b6b    ret 0xf66

------> offset: 0x459b6a
0x459b6a    outs dx, dword [rsi]
0x459b6b    ret 0xf66

------> offset: 0x459b7e
0x459b7e    retf 0xc149

------> offset: 0x459bb7
0x459bb7    xlat byte [rbx+al]
0x459bb8    ret 0x94c

------> offset: 0x459bb8
0x459bb8    ret 0x94c

------> offset: 0x459bd7
0x459bd7    bsr rsi, rsi
0x459bdc    lea rax, [rcx+rsi]
0x459be0    ret

------> offset: 0x459bd9
0x459bd9    bsr esi, esi
0x459bdc    lea rax, [rcx+rsi]
0x459be0    ret

------> offset: 0x459bdc
0x459bdc    lea rax, [rcx+rsi]
0x459be0    ret

------> offset: 0x459bdd
0x459bdd    lea eax, [rcx+rsi]
0x459be0    ret

------> offset: 0x459bde
0x459bde    add al, 0x31
0x459be0    ret

------> offset: 0x459c94
0x459c94    xlat byte [rbx+al]
0x459c95    retf 0xc148

------> offset: 0x459cc9
0x459cc9    dec dword [rax+0xf]
0x459ccc    mov ebp, 0xfffffffff80148c6
0x459cd1    ret

------> offset: 0x459cca
0x459cca    bsr rax, rsi
0x459cce    add rax, rdi
0x459cd1    ret

------> offset: 0x459ccb
0x459ccb    bsr eax, esi
0x459cce    add rax, rdi
0x459cd1    ret

------> offset: 0x459ccc
0x459ccc    mov ebp, 0xfffffffff80148c6
0x459cd1    ret

------> offset: 0x459e55
0x459e55    adc [rax+0x1], cl
0x459e58    iret

------> offset: 0x459f2d
0x459f2d    add [rax+0x39], ecx
0x459f30    ret 0x870f

------> offset: 0x45a0ae
0x45a0ae    add [rcx+0x1], cl
0x45a0b2    ror [rcx+0x1], cl
0x45a0b5    retf 0x394d

------> offset: 0x45a0b2
0x45a0b2    ror [rcx+0x1], cl
0x45a0b5    retf 0x394d

------> offset: 0x45a0ee
0x45a0ee    add [rax+0x39], ecx
0x45a0f1    ret 0x860f

------> offset: 0x45a0ff
0x45a0ff    dec dword [rax-0x39]
0x45a102    ret

------> offset: 0x45a395
0x45a395    ins dword [rdi], dx
0x45a396    add [rax], eax
0x45a398    add [rax-0x7d], cl
0x45a39b    ret 0xe901

------> offset: 0x45a3ad
0x45a3ad    add [rax], rax
0x45a3b0    add [rax-0x7d], cl
0x45a3b3    ret 0xe901

------> offset: 0x45a43b
0x45a43b    add [rax-0x7d], ecx
0x45a43e    ret 0x4901

------> offset: 0x45a4da
0x45a4da    ret 0x56e9

------> offset: 0x45a56e
0x45a56e    and eax, 0x5c415d5b
0x45a573    pop r13
0x45a575    pop r14
0x45a577    ret

------> offset: 0x45a684
0x45a684    adc eax, [rdi+rcx-0x42]
0x45a688    retf 0x3945

------> offset: 0x45a6b7
0x45a6b7    pop rbp
0x45a6b8    pop r12
0x45a6ba    pop r13
0x45a6bc    mov eax, edx
0x45a6be    pop r14
0x45a6c0    ret

------> offset: 0x45a6b8
0x45a6b8    pop r12
0x45a6ba    pop r13
0x45a6bc    mov eax, edx
0x45a6be    pop r14
0x45a6c0    ret

------> offset: 0x45a6b9
0x45a6b9    pop rsp
0x45a6ba    pop r13
0x45a6bc    mov eax, edx
0x45a6be    pop r14
0x45a6c0    ret

------> offset: 0x45a6ba
0x45a6ba    pop r13
0x45a6bc    mov eax, edx
0x45a6be    pop r14
0x45a6c0    ret

------> offset: 0x45a6bb
0x45a6bb    pop rbp
0x45a6bc    mov eax, edx
0x45a6be    pop r14
0x45a6c0    ret

------> offset: 0x45a6bc
0x45a6bc    mov eax, edx
0x45a6be    pop r14
0x45a6c0    ret

------> offset: 0x45a6bd
0x45a6bd    rol byte [rcx+0x5e], 0x1
0x45a6c0    ret

------> offset: 0x45a741
0x45a741    mov [rcx+0x4], esi
0x45a744    jnz 0x45a749
0x45a746    mov [rcx+0x8], esi
0x45a749    ret

------> offset: 0x45a742
0x45a742    jno 0x45a748
0x45a744    jnz 0x45a749
0x45a746    mov [rcx+0x8], esi
0x45a749    ret

------> offset: 0x45a744
0x45a744    jnz 0x45a749
0x45a746    mov [rcx+0x8], esi
0x45a749    ret

------> offset: 0x45a746
0x45a746    mov [rcx+0x8], esi
0x45a749    ret

------> offset: 0x45a747
0x45a747    jno 0x45a751
0x45a749    ret

------> offset: 0x45a939
0x45a939    jz 0x45a950
0x45a93b    mov cl, dl
0x45a93d    and cl, 0xf
0x45a940    jz 0x45a960
0x45a942    ret

------> offset: 0x45a93a
0x45a93a    adc eax, 0xffffffffe180d188
0x45a93f    pcmpeqb mm3, [rsi]
0x45a942    ret

------> offset: 0x45a93b
0x45a93b    mov cl, dl
0x45a93d    and cl, 0xf
0x45a940    jz 0x45a960
0x45a942    ret

------> offset: 0x45a93c
0x45a93c    rol dword [rax+0x1e740fe1], 0x1
0x45a942    ret

------> offset: 0x45a93d
0x45a93d    and cl, 0xf
0x45a940    jz 0x45a960
0x45a942    ret

------> offset: 0x45a93e
0x45a93e    loopz 0x45a94f
0x45a940    jz 0x45a960
0x45a942    ret

------> offset: 0x45a93f
0x45a93f    pcmpeqb mm3, [rsi]
0x45a942    ret

------> offset: 0x45a940
0x45a940    jz 0x45a960
0x45a942    ret

------> offset: 0x45a952
0x45a952    and ch, 0xf
0x45a955    jz 0x45a970
0x45a957    add rax, 0x2
0x45a95b    ret

------> offset: 0x45a953
0x45a953    in eax, 0xf
0x45a955    jz 0x45a970
0x45a957    add rax, 0x2
0x45a95b    ret

------> offset: 0x45a954
0x45a954    pcmpeqb mm3, [rcx]
0x45a957    add rax, 0x2
0x45a95b    ret

------> offset: 0x45a955
0x45a955    jz 0x45a970
0x45a957    add rax, 0x2
0x45a95b    ret

------> offset: 0x45a957
0x45a957    add rax, 0x2
0x45a95b    ret

------> offset: 0x45a958
0x45a958    add eax, 0x2
0x45a95b    ret

------> offset: 0x45a95c
0x45a95c    nop dword [rax+0x0]
0x45a960    add rax, 0x1
0x45a964    ret

------> offset: 0x45a960
0x45a960    add rax, 0x1
0x45a964    ret

------> offset: 0x45a961
0x45a961    add eax, 0x1
0x45a964    ret

------> offset: 0x45a96c
0x45a96c    add [rax], al
0x45a96e    add [rax], al
0x45a970    add rax, 0x3
0x45a974    ret

------> offset: 0x45a96e
0x45a96e    add [rax], al
0x45a970    add rax, 0x3
0x45a974    ret

------> offset: 0x45a970
0x45a970    add rax, 0x3
0x45a974    ret

------> offset: 0x45a971
0x45a971    add eax, 0x3
0x45a974    ret

------> offset: 0x45a98e
0x45a98e    add [rax], al
0x45a990    mov rax, 0x1
0x45a997    ret

------> offset: 0x45a98f
0x45a98f    add [rax-0x39], cl
0x45a992    rol byte [rcx], 0x0
0x45a995    add [rax], al
0x45a997    ret

------> offset: 0x45a990
0x45a990    mov rax, 0x1
0x45a997    ret

------> offset: 0x45a992
0x45a992    rol byte [rcx], 0x0
0x45a995    add [rax], al
0x45a997    ret

------> offset: 0x45a99e
0x45a99e    add [rax], al
0x45a9a0    mov rax, 0x2
0x45a9a7    ret

------> offset: 0x45a99f
0x45a99f    add [rax-0x39], cl
0x45a9a2    rol byte [rdx], 0x0
0x45a9a5    add [rax], al
0x45a9a7    ret

------> offset: 0x45a9a0
0x45a9a0    mov rax, 0x2
0x45a9a7    ret

------> offset: 0x45a9a1
0x45a9a1    mov eax, 0x2
0x45a9a7    ret

------> offset: 0x45a9a2
0x45a9a2    rol byte [rdx], 0x0
0x45a9a5    add [rax], al
0x45a9a7    ret

------> offset: 0x45a9a3
0x45a9a3    add al, [rax]
0x45a9a5    add [rax], al
0x45a9a7    ret

------> offset: 0x45a9ae
0x45a9ae    add [rax], al
0x45a9b0    mov rax, 0x3
0x45a9b7    ret

------> offset: 0x45a9af
0x45a9af    add [rax-0x39], cl
0x45a9b2    rol byte [rbx], 0x0
0x45a9b5    add [rax], al
0x45a9b7    ret

------> offset: 0x45a9b0
0x45a9b0    mov rax, 0x3
0x45a9b7    ret

------> offset: 0x45a9b1
0x45a9b1    mov eax, 0x3
0x45a9b7    ret

------> offset: 0x45a9b2
0x45a9b2    rol byte [rbx], 0x0
0x45a9b5    add [rax], al
0x45a9b7    ret

------> offset: 0x45a9b3
0x45a9b3    add eax, [rax]
0x45a9b5    add [rax], al
0x45a9b7    ret

------> offset: 0x45a9be
0x45a9be    add [rax], al
0x45a9c0    mov rax, 0x4
0x45a9c7    ret

------> offset: 0x45a9c0
0x45a9c0    mov rax, 0x4
0x45a9c7    ret

------> offset: 0x45a9c1
0x45a9c1    mov eax, 0x4
0x45a9c7    ret

------> offset: 0x45a9c3
0x45a9c3    add al, 0x0
0x45a9c5    add [rax], al
0x45a9c7    ret

------> offset: 0x45a9ce
0x45a9ce    add [rax], al
0x45a9d0    mov rax, 0x5
0x45a9d7    ret

------> offset: 0x45a9d0
0x45a9d0    mov rax, 0x5
0x45a9d7    ret

------> offset: 0x45a9d1
0x45a9d1    mov eax, 0x5
0x45a9d7    ret

------> offset: 0x45a9de
0x45a9de    add [rax], al
0x45a9e0    mov rax, 0x6
0x45a9e7    ret

------> offset: 0x45a9df
0x45a9df    add [rax-0x39], cl
0x45a9e2    rol byte [rsi], 0x0
0x45a9e5    add [rax], al
0x45a9e7    ret

------> offset: 0x45a9e0
0x45a9e0    mov rax, 0x6
0x45a9e7    ret

------> offset: 0x45a9e1
0x45a9e1    mov eax, 0x6
0x45a9e7    ret

------> offset: 0x45a9e2
0x45a9e2    rol byte [rsi], 0x0
0x45a9e5    add [rax], al
0x45a9e7    ret

------> offset: 0x45a9ee
0x45a9ee    add [rax], al
0x45a9f0    mov rax, 0x7
0x45a9f7    ret

------> offset: 0x45a9ef
0x45a9ef    add [rax-0x39], cl
0x45a9f2    rol byte [rdi], 0x0
0x45a9f5    add [rax], al
0x45a9f7    ret

------> offset: 0x45a9f0
0x45a9f0    mov rax, 0x7
0x45a9f7    ret

------> offset: 0x45a9f1
0x45a9f1    mov eax, 0x7
0x45a9f7    ret

------> offset: 0x45a9f2
0x45a9f2    rol byte [rdi], 0x0
0x45a9f5    add [rax], al
0x45a9f7    ret

------> offset: 0x45aa2c
0x45aa2c    adc ecx, [rax-0x7d]
0x45aa2f    in al, dx
0x45aa30    sbb byte [rbx+0x5d], 0x41
0x45aa34    pop rsp
0x45aa35    ret

------> offset: 0x45aa2d
0x45aa2d    sub rsp, -0x80
0x45aa31    pop rbx
0x45aa32    pop rbp
0x45aa33    pop r12
0x45aa35    ret

------> offset: 0x45aa2e
0x45aa2e    sub esp, -0x80
0x45aa31    pop rbx
0x45aa32    pop rbp
0x45aa33    pop r12
0x45aa35    ret

------> offset: 0x45aa2f
0x45aa2f    in al, dx
0x45aa30    sbb byte [rbx+0x5d], 0x41
0x45aa34    pop rsp
0x45aa35    ret

------> offset: 0x45aa30
0x45aa30    sbb byte [rbx+0x5d], 0x41
0x45aa34    pop rsp
0x45aa35    ret

------> offset: 0x45ab60
0x45ab60    dec dword [rbx-0x16dfdbbc]
0x45ab66    ret

------> offset: 0x45ab64
0x45ab64    and cl, ch
0x45ab66    ret

------> offset: 0x45aba2
0x45aba2    ror [rax+0xf], cl
0x45aba5    ret 0x8548

------> offset: 0x45ad08
0x45ad08    pop rbx
0x45ad09    sub rax, rbp
0x45ad0c    pop rbp
0x45ad0d    pop r12
0x45ad0f    ret

------> offset: 0x45ad09
0x45ad09    sub rax, rbp
0x45ad0c    pop rbp
0x45ad0d    pop r12
0x45ad0f    ret

------> offset: 0x45ad0a
0x45ad0a    sub eax, ebp
0x45ad0c    pop rbp
0x45ad0d    pop r12
0x45ad0f    ret

------> offset: 0x45ad2f
0x45ad2f    pop rbp
0x45ad30    xchg ebp, edi
0x45ad32    dec dword [rbx+rcx*4+0x63]
0x45ad36    sub cl, ch
0x45ad38    iret

------> offset: 0x45ad30
0x45ad30    xchg ebp, edi
0x45ad32    dec dword [rbx+rcx*4+0x63]
0x45ad36    sub cl, ch
0x45ad38    iret

------> offset: 0x45ad31
0x45ad31    std
0x45ad32    dec dword [rbx+rcx*4+0x63]
0x45ad36    sub cl, ch
0x45ad38    iret

------> offset: 0x45ad32
0x45ad32    dec dword [rbx+rcx*4+0x63]
0x45ad36    sub cl, ch
0x45ad38    iret

------> offset: 0x45ad36
0x45ad36    sub cl, ch
0x45ad38    iret

------> offset: 0x45af8d
0x45af8d    xor [rax-0x77], cl
0x45af90    ret 0x294c

------> offset: 0x45af90
0x45af90    ret 0x294c

------> offset: 0x45b0a3
0x45b0a3    retf 0x8b44

------> offset: 0x45b0a8
0x45b0a8    test r8d, r8d
0x45b0ab    jnz 0x45b060
0x45b0ad    nop dword [rax]
0x45b0b0    ret

------> offset: 0x45b0a9
0x45b0a9    test eax, eax
0x45b0ab    jnz 0x45b060
0x45b0ad    nop dword [rax]
0x45b0b0    ret

------> offset: 0x45b0ab
0x45b0ab    jnz 0x45b060
0x45b0ad    nop dword [rax]
0x45b0b0    ret

------> offset: 0x45b0b2
0x45b0b2    nop word [rax+rax+0x0]
0x45b0b8    mov rax, rcx
0x45b0bb    ret

------> offset: 0x45b0b3
0x45b0b3    nop dword [rax+rax+0x0]
0x45b0b8    mov rax, rcx
0x45b0bb    ret

------> offset: 0x45b0b5
0x45b0b5    add [rax], r8b
0x45b0b8    mov rax, rcx
0x45b0bb    ret

------> offset: 0x45b0b6
0x45b0b6    add [rax], al
0x45b0b8    mov rax, rcx
0x45b0bb    ret

------> offset: 0x45b0b7
0x45b0b7    add [rax-0x77], cl
0x45b0ba    enter 0x31c3, 0xc0
0x45b0be    nop
0x45b0c0    ret

------> offset: 0x45b0b8
0x45b0b8    mov rax, rcx
0x45b0bb    ret

------> offset: 0x45b0b9
0x45b0b9    mov eax, ecx
0x45b0bb    ret

------> offset: 0x45b0ba
0x45b0ba    enter 0x31c3, 0xc0
0x45b0be    nop
0x45b0c0    ret

------> offset: 0x45b0bc
0x45b0bc    xor eax, eax
0x45b0be    nop
0x45b0c0    ret

------> offset: 0x45b0bd
0x45b0bd    shl byte [rsi-0x70], 0xc3
0x45b0c1    mov eax, 0x1
0x45b0c6    ret

------> offset: 0x45b0c3
0x45b0c3    add [rax], al
0x45b0c5    add bl, al
0x45b0c7    ret

------> offset: 0x45b0c5
0x45b0c5    add bl, al
0x45b0c7    ret

------> offset: 0x45b0e6
0x45b0e6    rol byte [rbx+rcx*4], 0x10
0x45b0ea    test edx, edx
0x45b0ec    jnz 0x45b0e0
0x45b0ee    ret

------> offset: 0x45b0e7
0x45b0e7    add al, 0x8b
0x45b0e9    adc [rbp-0xc0d8a2e], al
0x45b0ef    ret

------> offset: 0x45b0e8
0x45b0e8    mov edx, [rax]
0x45b0ea    test edx, edx
0x45b0ec    jnz 0x45b0e0
0x45b0ee    ret

------> offset: 0x45b0e9
0x45b0e9    adc [rbp-0xc0d8a2e], al
0x45b0ef    ret

------> offset: 0x45b0ea
0x45b0ea    test edx, edx
0x45b0ec    jnz 0x45b0e0
0x45b0ee    ret

------> offset: 0x45b0eb
0x45b0eb    sal [rbp-0xe], cl
0x45b0ee    ret

------> offset: 0x45b0ec
0x45b0ec    jnz 0x45b0e0
0x45b0ee    ret

------> offset: 0x45b225
0x45b225    clc
0x45b226    add al, 0xf
0x45b228    xchg ebp, eax
0x45b229    ret 0xf883

------> offset: 0x45b226
0x45b226    add al, 0xf
0x45b228    xchg ebp, eax
0x45b229    ret 0xf883

------> offset: 0x45b228
0x45b228    xchg ebp, eax
0x45b229    ret 0xf883

------> offset: 0x45b229
0x45b229    ret 0xf883

------> offset: 0x45b2ef
0x45b2ef    sar bh, 0xff
0x45b2f2    dec dword [rax-0x39]
0x45b2f5    ret

------> offset: 0x45b3aa
0x45b3aa    mov ch, 0x89
0x45b3ac    ret 0xe283

------> offset: 0x45b3c9
0x45b3c9    clc
0x45b3ca    add al, 0xf
0x45b3cc    xchg ebp, eax
0x45b3cd    ret 0xc8e9

------> offset: 0x45b3ca
0x45b3ca    add al, 0xf
0x45b3cc    xchg ebp, eax
0x45b3cd    ret 0xc8e9

------> offset: 0x45b3cc
0x45b3cc    xchg ebp, eax
0x45b3cd    ret 0xc8e9

------> offset: 0x45b3cd
0x45b3cd    ret 0xc8e9

------> offset: 0x45b47e
0x45b47e    add [rax], al
0x45b480    mov eax, 0xc9
0x45b485    syscall
0x45b487    ret

------> offset: 0x45b47f
0x45b47f    add [rax+0xc9], bh
0x45b485    syscall
0x45b487    ret

------> offset: 0x45b480
0x45b480    mov eax, 0xc9
0x45b485    syscall
0x45b487    ret

------> offset: 0x45b483
0x45b483    add [rax], al
0x45b485    syscall
0x45b487    ret

------> offset: 0x45b485
0x45b485    syscall
0x45b487    ret

------> offset: 0x45b4a3
0x45b4a3    add [rbx+0x460f18fa], al
0x45b4a9    retf 0x3cba

------> offset: 0x45b4a5
0x45b4a5    cli
0x45b4a6    sbb [rdi], cl
0x45b4a8    retf 0x3cba

------> offset: 0x45b4a6
0x45b4a6    sbb [rdi], cl
0x45b4a8    retf 0x3cba

------> offset: 0x45b4a8
0x45b4a8    retf 0x3cba

------> offset: 0x45b4ba
0x45b4ba    cmova esi, r8d
0x45b4be    imul esi, edx
0x45b4c1    add eax, esi
0x45b4c3    ret

------> offset: 0x45b4bb
0x45b4bb    cmova esi, eax
0x45b4be    imul esi, edx
0x45b4c1    add eax, esi
0x45b4c3    ret

------> offset: 0x45b4bc
0x45b4bc    imul r14d, r10d
0x45b4c1    add eax, esi
0x45b4c3    ret

------> offset: 0x45b4bd
0x45b4bd    imul esi, edx
0x45b4c1    add eax, esi
0x45b4c3    ret

------> offset: 0x45b4bf
0x45b4bf    scasd
0x45b4c0    add eax, esi
0x45b4c3    ret

------> offset: 0x45b4c0
0x45b4c0    add eax, esi
0x45b4c3    ret

------> offset: 0x45b558
0x45b558    loopnz 0x45b5b5
0x45b55a    pop rbp
0x45b55b    pop r12
0x45b55d    pop r13
0x45b55f    pop r14
0x45b561    ret

------> offset: 0x45b56a
0x45b56a    mov rax, r12
0x45b56d    pop r12
0x45b56f    pop r13
0x45b571    pop r14
0x45b573    ret

------> offset: 0x45b56b
0x45b56b    mov eax, esp
0x45b56d    pop r12
0x45b56f    pop r13
0x45b571    pop r14
0x45b573    ret

------> offset: 0x45b56c
0x45b56c    loopnz 0x45b5af
0x45b56e    pop rsp
0x45b56f    pop r13
0x45b571    pop r14
0x45b573    ret

------> offset: 0x45b692
0x45b692    add byte [rax-0x178b7f80], 0x89
0x45b699    ret 0x8b48

------> offset: 0x45b731
0x45b731    xchg esp, eax
0x45b732    ret 0x2b3c

------> offset: 0x45b732
0x45b732    ret 0x2b3c

------> offset: 0x45b7bd
0x45b7bd    out dx, eax
0x45b7be    jl 0x45b7e6
0x45b7c0    add [rdi], cl
0x45b7c2    xchg ebp, eax
0x45b7c3    ret 0xc031

------> offset: 0x45b7be
0x45b7be    jl 0x45b7e6
0x45b7c0    add [rdi], cl
0x45b7c2    xchg ebp, eax
0x45b7c3    ret 0xc031

------> offset: 0x45b7bf
0x45b7bf    add [rdi], cl
0x45b7c2    xchg ebp, eax
0x45b7c3    ret 0xc031

------> offset: 0x45b7c2
0x45b7c2    xchg ebp, eax
0x45b7c3    ret 0xc031

------> offset: 0x45b7cb
0x45b7cb    add [rax], al
0x45b7cd    add [rax], al
0x45b7cf    add [rax-0x77], cl
0x45b7d2    ret

------> offset: 0x45b839
0x45b839    dec dword [rdi]
0x45b83b    xchg ebp, eax
0x45b83c    ret 0xf748

------> offset: 0x45b83b
0x45b83b    xchg ebp, eax
0x45b83c    ret 0xf748

------> offset: 0x45b9d1
0x45b9d1    jrcxz 0x45b95e
0x45b9d3    or ecx, [rax-0x7d]
0x45b9d6    ret

------> offset: 0x45b9d3
0x45b9d3    or ecx, [rax-0x7d]
0x45b9d6    ret

------> offset: 0x45ba1d
0x45ba1d    or [rax+0x39], r9b
0x45ba21    ret

------> offset: 0x45bc16
0x45bc16    xchg esi, eax
0x45bc17    js 0x45bc3f
0x45bc19    add [rdi], cl
0x45bc1b    xchg ebp, eax
0x45bc1c    ret 0xf748

------> offset: 0x45bc17
0x45bc17    js 0x45bc3f
0x45bc19    add [rdi], cl
0x45bc1b    xchg ebp, eax
0x45bc1c    ret 0xf748

------> offset: 0x45bc18
0x45bc18    add [rdi], cl
0x45bc1b    xchg ebp, eax
0x45bc1c    ret 0xf748

------> offset: 0x45c011
0x45c011    add eax, 0x267496
0x45c016    ret 0x4a88

------> offset: 0x45c016
0x45c016    ret 0x4a88

------> offset: 0x45c01c
0x45c01c    add eax, 0x26745b
0x45c021    ret 0x4a88

------> offset: 0x45c03d
0x45c03d    add eax, 0x265b3a
0x45c042    ret 0x4a88

------> offset: 0x45c048
0x45c048    add eax, 0x265b37
0x45c04d    ret 0x4a88

------> offset: 0x45c05d
0x45c05d    add [rsi-0x70], ah
0x45c060    add rsp, 0x8
0x45c064    pop rbx
0x45c065    pop rbp
0x45c066    ret

------> offset: 0x45c140
0x45c140    add eax, 0x267f73
0x45c145    add rsp, 0x8
0x45c149    ret

------> offset: 0x45c1d0
0x45c1d0    mov ah, 0x72
0x45c1d2    add [rbx-0x7bf0fe08], al
0x45c1d9    retf

------> offset: 0x45c1d1
0x45c1d1    jb 0x45c1f9
0x45c1d3    add [rbx-0x7bf0fe08], al
0x45c1d9    retf

------> offset: 0x45c1d2
0x45c1d2    add [rbx-0x7bf0fe08], al
0x45c1d9    retf

------> offset: 0x45c1fc
0x45c1fc    retf 0xeaf7

------> offset: 0x45c204
0x45c204    rol cl, 0x1
0x45c206    clc
0x45c207    add eax, 0xffffffff89d02944
0x45c20c    ret

------> offset: 0x45c206
0x45c206    clc
0x45c207    add eax, 0xffffffff89d02944
0x45c20c    ret

------> offset: 0x45c207
0x45c207    add eax, 0xffffffff89d02944
0x45c20c    ret

------> offset: 0x45c252
0x45c252    jmp 0x45c1d7
0x45c254    ret

------> offset: 0x45c272
0x45c272    add [rbp-0x1f3eadfc], cl
0x45c278    add ch, [rcx]
0x45c27a    ret

------> offset: 0x45c278
0x45c278    add ch, [rcx]
0x45c27a    ret

------> offset: 0x45c2b1
0x45c2b1    ret 0x8944

------> offset: 0x45c2b4
0x45c2b4    ror byte [rdi], 0x1
0x45c2b6    scasd
0x45c2b7    ret 0x67ba

------> offset: 0x45c2b6
0x45c2b6    scasd
0x45c2b7    ret 0x67ba

------> offset: 0x45c2b7
0x45c2b7    ret 0x67ba

------> offset: 0x45c2e8
0x45c2e8    push rax
0x45c2e9    add eax, [rdi+rcx+0x48]
0x45c2ed    ret 0x93ba

------> offset: 0x45c2e9
0x45c2e9    add eax, [rdi+rcx+0x48]
0x45c2ed    ret 0x93ba

------> offset: 0x45c2ec
0x45c2ec    ret 0x93ba

------> offset: 0x45c2fd
0x45c2fd    add eax, [rbp-0x7b]
0x45c300    rol [rcx+0xf], cl
0x45c303    ret 0xf741

------> offset: 0x45c300
0x45c300    rol [rcx+0xf], cl
0x45c303    ret 0xf741

------> offset: 0x45c303
0x45c303    ret 0xf741

------> offset: 0x45c321
0x45c321    cli
0x45c322    add ch, [rcx]
0x45c324    ret 0x48d

------> offset: 0x45c322
0x45c322    add ch, [rcx]
0x45c324    ret 0x48d

------> offset: 0x45c324
0x45c324    ret 0x48d

------> offset: 0x45c330
0x45c330    ret 0xc229

------> offset: 0x45c332
0x45c332    ret 0x428d

------> offset: 0x45c386
0x45c386    ret 0x77e

------> offset: 0x45c3eb
0x45c3eb    rol cl, 0x1
0x45c3ed    clc
0x45c3ee    add eax, 0xfd02944
0x45c3f3    scasd
0x45c3f4    ret

------> offset: 0x45c3ed
0x45c3ed    clc
0x45c3ee    add eax, 0xfd02944
0x45c3f3    scasd
0x45c3f4    ret

------> offset: 0x45c3ee
0x45c3ee    add eax, 0xfd02944
0x45c3f3    scasd
0x45c3f4    ret

------> offset: 0x45c3f1
0x45c3f1    ror byte [rdi], 0x1
0x45c3f3    scasd
0x45c3f4    ret

------> offset: 0x45c4e1
0x45c4e1    rcl [rax+0x39000001], cl
0x45c4e7    ror dword [rdi], 0x1
0x45c4e9    xchg esp, eax
0x45c4ea    ret

------> offset: 0x45c4e2
0x45c4e2    nop
0x45c4e3    add [rax], eax
0x45c4e5    add [rcx], bh
0x45c4e7    ror dword [rdi], 0x1
0x45c4e9    xchg esp, eax
0x45c4ea    ret

------> offset: 0x45c4e3
0x45c4e3    add [rax], eax
0x45c4e5    add [rcx], bh
0x45c4e7    ror dword [rdi], 0x1
0x45c4e9    xchg esp, eax
0x45c4ea    ret

------> offset: 0x45c4e5
0x45c4e5    add [rcx], bh
0x45c4e7    ror dword [rdi], 0x1
0x45c4e9    xchg esp, eax
0x45c4ea    ret

------> offset: 0x45c4e7
0x45c4e7    ror dword [rdi], 0x1
0x45c4e9    xchg esp, eax
0x45c4ea    ret

------> offset: 0x45c599
0x45c599    ret 0x8545

------> offset: 0x45c5a4
0x45c5a4    push rcx
0x45c5a5    add eax, [rdi+rcx+0x48]
0x45c5a9    retf 0x93ba

------> offset: 0x45c5a5
0x45c5a5    add eax, [rdi+rcx+0x48]
0x45c5a9    retf 0x93ba

------> offset: 0x45c5a8
0x45c5a8    retf 0x93ba

------> offset: 0x45c69a
0x45c69a    xor ch, [rsi+0x26]
0x45c69d    add [rax+0x39], cl
0x45c6a0    retf 0x8f0f

------> offset: 0x45c69b
0x45c69b    outs dx, byte [rsi]
0x45c69c    add [rax+0x39], cl
0x45c6a0    retf 0x8f0f

------> offset: 0x45c69c
0x45c69c    add [rax+0x39], cl
0x45c6a0    retf 0x8f0f

------> offset: 0x45c6a0
0x45c6a0    retf 0x8f0f

------> offset: 0x45c6d0
0x45c6d0    mov [rsi+0x28], eax
0x45c6d3    pop rbx
0x45c6d4    pop rbp
0x45c6d5    pop r12
0x45c6d7    pop r13
0x45c6d9    ret

------> offset: 0x45c6d1
0x45c6d1    sub [rbx+0x5d], r11b
0x45c6d5    pop r12
0x45c6d7    pop r13
0x45c6d9    ret

------> offset: 0x45c7d5
0x45c7d5    retf 0xd269

------> offset: 0x45c8c6
0x45c8c6    loopnz 0x45c8c9
0x45c8c8    add [rax], al
0x45c8ca    add rsp, 0x8
0x45c8ce    ret

------> offset: 0x45c8c8
0x45c8c8    add [rax], al
0x45c8ca    add rsp, 0x8
0x45c8ce    ret

------> offset: 0x45cba8
0x45cba8    retf 0x4a88

------> offset: 0x45cbdd
0x45cbdd    push rax
0x45cbde    xchg esp, eax
0x45cbdf    add [rax+0xf], cl
0x45cbe3    ret 0x8d48

------> offset: 0x45cbde
0x45cbde    xchg esp, eax
0x45cbdf    add [rax+0xf], cl
0x45cbe3    ret 0x8d48

------> offset: 0x45cbdf
0x45cbdf    add [rax+0xf], cl
0x45cbe3    ret 0x8d48

------> offset: 0x45cbef
0x45cbef    ret 0xd4be

------> offset: 0x45cd02
0x45cd02    add [rbx+0xf742474], cl
0x45cd08    retf 0xf41

------> offset: 0x45cd04
0x45cd04    jz 0x45cd2a
0x45cd06    jz 0x45cd17
0x45cd08    retf 0xf41

------> offset: 0x45cd06
0x45cd06    jz 0x45cd17
0x45cd08    retf 0xf41

------> offset: 0x45ce28
0x45ce28    fisttp dword [rax+0x39]
0x45ce2b    ret 0x5c89

------> offset: 0x45ce2b
0x45ce2b    ret 0x5c89

------> offset: 0x45ce98
0x45ce98    dec dword [rbp-0x77]
0x45ce9b    ret 0xc149

------> offset: 0x45ce9b
0x45ce9b    ret 0xc149

------> offset: 0x45cfb2
0x45cfb2    or cl, [rax-0x7d]
0x45cfb5    ret 0x4801

------> offset: 0x45cfdf
0x45cfdf    add [rax-0x75], cl
0x45cfe2    add cl, [rax-0x7d]
0x45cfe5    ret 0x4808

------> offset: 0x45d089
0x45d089    retf 0xeb89

------> offset: 0x45d11b
0x45d11b    lea eax, [rcx]
0x45d11d    add [rax+0x39], cl
0x45d120    ret

------> offset: 0x45d17e
0x45d17e    add [rax+0x39], cl
0x45d181    retf 0x4488

------> offset: 0x45d181
0x45d181    retf 0x4488

------> offset: 0x45d33b
0x45d33b    in eax, 0x75
0x45d33d    retf 0x8b48

------> offset: 0x45d383
0x45d383    retf 0x4774

------> offset: 0x45d5a7
0x45d5a7    add [rcx+rcx*4+0xd], cl
0x45d5ab    jno 0x45d60b
0x45d5ad    add cl, ch
0x45d5b0    iret

------> offset: 0x45d5ab
0x45d5ab    jno 0x45d60b
0x45d5ad    add cl, ch
0x45d5b0    iret

------> offset: 0x45d5ac
0x45d5ac    pop rsi
0x45d5ad    add cl, ch
0x45d5b0    iret

------> offset: 0x45d600
0x45d600    retf 0x5a75

------> offset: 0x45d714
0x45d714    fmul dword [rcx+0x39]
0x45d717    ret

------> offset: 0x45d721
0x45d721    jmp 0x45d780
0x45d723    add [rcx+0x29], cl
0x45d727    ret

------> offset: 0x45d722
0x45d722    pop rbp
0x45d723    add [rcx+0x29], cl
0x45d727    ret

------> offset: 0x45d723
0x45d723    add [rcx+0x29], cl
0x45d727    ret

------> offset: 0x45d742
0x45d742    add cl, [rcx+0x39]
0x45d745    ret

------> offset: 0x45d748
0x45d748    idiv bh
0x45d74b    dec dword [rcx+0x29]
0x45d74e    ret

------> offset: 0x45d74b
0x45d74b    dec dword [rcx+0x29]
0x45d74e    ret

------> offset: 0x45d93c
0x45d93c    retf 0x950f

------> offset: 0x45da8a
0x45da8a    ret 0x265a

------> offset: 0x45db8e
0x45db8e    ror [rax+0x39], cl
0x45db91    retf

------> offset: 0x45dc3a
0x45dc3a    add al, 0x0
0x45dc3c    add [rax+0x29], cl
0x45dc3f    iret

------> offset: 0x45dc85
0x45dc85    lea esi, [rsi]
0x45dc87    add al, [rax]
0x45dc89    add [rax-0x77], cl
0x45dc8c    ret

------> offset: 0x45dc86
0x45dc86    add al, [rax]
0x45dc89    add [rax-0x77], cl
0x45dc8c    ret

------> offset: 0x45dd53
0x45dd53    sub [rax+0x26], ebx
0x45dd56    add [rax-0x7d], cl
0x45dd59    ret

------> offset: 0x45dd54
0x45dd54    pop rax
0x45dd55    add [rax-0x7d], cl
0x45dd59    ret

------> offset: 0x45de4f
0x45de4f    add [rax], al
0x45de51    add [rax-0x77], cl
0x45de54    retf 0x8348

------> offset: 0x45de75
0x45de75    ror byte [rax-0x77], 0x1
0x45de78    ret 0x8d48

------> offset: 0x45debf
0x45debf    dec dword [rax-0x77]
0x45dec2    ret 0xa8e9

------> offset: 0x45dec2
0x45dec2    ret 0xa8e9

------> offset: 0x45defe
0x45defe    add [rax-0x7d], cl
0x45df02    ret 0x4909

------> offset: 0x45df02
0x45df02    ret 0x4909

------> offset: 0x45e233
0x45e233    ret 0x8010

------> offset: 0x45e2c5
0x45e2c5    mov dword [rax+0x28], 0x0
0x45e2cc    pop rbx
0x45e2cd    ret

------> offset: 0x45e2f3
0x45e2f3    syscall
0x45e2f5    xor eax, eax
0x45e2f7    mov [fs:rdx], esi
0x45e2fa    pop rbx
0x45e2fb    ret

------> offset: 0x45e2f5
0x45e2f5    xor eax, eax
0x45e2f7    mov [fs:rdx], esi
0x45e2fa    pop rbx
0x45e2fb    ret

------> offset: 0x45e2f6
0x45e2f6    shl byte [rcx+rcx*4+0x32], 0x5b
0x45e2fb    ret

------> offset: 0x45e2f7
0x45e2f7    mov [fs:rdx], esi
0x45e2fa    pop rbx
0x45e2fb    ret

------> offset: 0x45e2f8
0x45e2f8    mov [rdx], esi
0x45e2fa    pop rbx
0x45e2fb    ret

------> offset: 0x45e2f9
0x45e2f9    xor bl, [rbx-0x3d]
0x45e2fc    xor eax, eax
0x45e2fe    pop rbx
0x45e2ff    ret

------> offset: 0x45e307
0x45e307    mov dword [fs:rax], 0x2
0x45e30e    xor eax, eax
0x45e310    ret

------> offset: 0x45e308
0x45e308    mov dword [rax], 0x2
0x45e30e    xor eax, eax
0x45e310    ret

------> offset: 0x45e30a
0x45e30a    add al, [rax]
0x45e30c    add [rax], al
0x45e30e    xor eax, eax
0x45e310    ret

------> offset: 0x45e5e2
0x45e5e2    mov rax, rdx
0x45e5e5    pop rbx
0x45e5e6    pop rbp
0x45e5e7    pop r12
0x45e5e9    pop r13
0x45e5eb    ret

------> offset: 0x45e68c
0x45e68c    jmp 0x45e693
0x45e68e    dec dword [rbx+0x4]
0x45e691    jnz 0x45e6ae
0x45e693    pop rbx
0x45e694    ret

------> offset: 0x45e68e
0x45e68e    dec dword [rbx+0x4]
0x45e691    jnz 0x45e6ae
0x45e693    pop rbx
0x45e694    ret

------> offset: 0x45e691
0x45e691    jnz 0x45e6ae
0x45e693    pop rbx
0x45e694    ret

------> offset: 0x45e69b
0x45e69b    in al, dx
0x45e69c    add byte [rax], 0x0
0x45e69f    add al, ch
0x45e6a1    retf

------> offset: 0x45e69c
0x45e69c    add byte [rax], 0x0
0x45e69f    add al, ch
0x45e6a1    retf

------> offset: 0x45e69d
0x45e69d    add [rax], al
0x45e69f    add al, ch
0x45e6a1    retf

------> offset: 0x45e722
0x45e722    retf 0xfa1b

------> offset: 0x45e727
0x45e727    mov bh, 0x43
0x45e729    adc [rax+rcx*4+0x63], al
0x45e72d    adc cl, [rax+0x1]
0x45e730    ret

------> offset: 0x45e728
0x45e728    adc [r8+r9*4+0x63], al
0x45e72d    adc cl, [rax+0x1]
0x45e730    ret

------> offset: 0x45e729
0x45e729    adc [rax+rcx*4+0x63], al
0x45e72d    adc cl, [rax+0x1]
0x45e730    ret

------> offset: 0x45e72d
0x45e72d    adc cl, [rax+0x1]
0x45e730    ret

------> offset: 0x45e735
0x45e735    retf 0x5d5b

------> offset: 0x45e738
0x45e738    pop r12
0x45e73a    pop r13
0x45e73c    mov rax, r14
0x45e73f    pop r14
0x45e741    ret

------> offset: 0x45e739
0x45e739    pop rsp
0x45e73a    pop r13
0x45e73c    mov rax, r14
0x45e73f    pop r14
0x45e741    ret

------> offset: 0x45e73a
0x45e73a    pop r13
0x45e73c    mov rax, r14
0x45e73f    pop r14
0x45e741    ret

------> offset: 0x45e73b
0x45e73b    pop rbp
0x45e73c    mov rax, r14
0x45e73f    pop r14
0x45e741    ret

------> offset: 0x45e73c
0x45e73c    mov rax, r14
0x45e73f    pop r14
0x45e741    ret

------> offset: 0x45e73d
0x45e73d    mov eax, esi
0x45e73f    pop r14
0x45e741    ret

------> offset: 0x45e79c
0x45e79c    clc
0x45e79d    push qword [rdi+rbp-0x77]
0x45e7a1    ret 0xe283

------> offset: 0x45e79d
0x45e79d    push qword [rdi+rbp-0x77]
0x45e7a1    ret 0xe283

------> offset: 0x45e7a9
0x45e7a9    sub [rax-0x77], ecx
0x45e7ac    loopz 0x45e737
0x45e7ae    ret 0xf631

------> offset: 0x45e7ac
0x45e7ac    loopz 0x45e737
0x45e7ae    ret 0xf631

------> offset: 0x45e7ae
0x45e7ae    ret 0xf631

------> offset: 0x45e7b8
0x45e7b8    add rsp, 0x90
0x45e7bf    pop rbx
0x45e7c0    ret

------> offset: 0x45e7b9
0x45e7b9    add esp, 0x90
0x45e7bf    pop rbx
0x45e7c0    ret

------> offset: 0x45e8e0
0x45e8e0    add al, [rax]
0x45e8e2    add [rcx], bh
0x45e8e4    ret

------> offset: 0x45e915
0x45e915    ret 0x4864

------> offset: 0x45e929
0x45e929    add [rax-0x7b], cl
0x45e92d    sal byte [rax+rcx+0x4c], 0x89
0x45e932    iret

------> offset: 0x45e92d
0x45e92d    sal byte [rax+rcx+0x4c], 0x89
0x45e932    iret

------> offset: 0x45e936
0x45e936    mov edx, 0x233e8ff
0x45e93b    sti
0x45e93c    dec dword [rax-0x77]
0x45e93f    ret

------> offset: 0x45e939
0x45e939    xor eax, [rdx]
0x45e93b    sti
0x45e93c    dec dword [rax-0x77]
0x45e93f    ret

------> offset: 0x45e93a
0x45e93a    add bh, bl
0x45e93c    dec dword [rax-0x77]
0x45e93f    ret

------> offset: 0x45e93b
0x45e93b    sti
0x45e93c    dec dword [rax-0x77]
0x45e93f    ret

------> offset: 0x45e96e
0x45e96e    add al, ch
0x45e970    sbb al, 0x2
0x45e972    sti
0x45e973    dec dword [rax-0x77]
0x45e976    ret

------> offset: 0x45e970
0x45e970    sbb al, 0x2
0x45e972    sti
0x45e973    dec dword [rax-0x77]
0x45e976    ret

------> offset: 0x45e978
0x45e978    add al, 0x2
0x45e97a    sti
0x45e97b    dec dword [rax+0x39]
0x45e97e    ret

------> offset: 0x45e979
0x45e979    add bh, bl
0x45e97b    dec dword [rax+0x39]
0x45e97e    ret

------> offset: 0x45e97a
0x45e97a    sti
0x45e97b    dec dword [rax+0x39]
0x45e97e    ret

------> offset: 0x45e9f6
0x45e9f6    ret 0x263e

------> offset: 0x45ea02
0x45ea02    mov eax, r13d
0x45ea05    pop rbx
0x45ea06    pop r12
0x45ea08    pop r13
0x45ea0a    pop rbp
0x45ea0b    ret

------> offset: 0x45ea03
0x45ea03    mov eax, ebp
0x45ea05    pop rbx
0x45ea06    pop r12
0x45ea08    pop r13
0x45ea0a    pop rbp
0x45ea0b    ret

------> offset: 0x45ea04
0x45ea04    call 0x41a22b64
0x45ea09    pop rbp
0x45ea0a    pop rbp
0x45ea0b    ret

------> offset: 0x45ea36
0x45ea36    add al, [rax]
0x45ea38    add al, ch
0x45ea3a    ret 0xfb01

------> offset: 0x45ea38
0x45ea38    add al, ch
0x45ea3a    ret 0xfb01

------> offset: 0x45ea3a
0x45ea3a    ret 0xfb01

------> offset: 0x45ea96
0x45ea96    call 0x41a22bf6
0x45ea9b    pop rbp
0x45ea9c    pop rbp
0x45ea9d    ret

------> offset: 0x45eade
0x45eade    add [rax], al
0x45eae0    mov eax, 0x66
0x45eae5    syscall
0x45eae7    ret

------> offset: 0x45eadf
0x45eadf    add [rax+0x66], bh
0x45eae5    syscall
0x45eae7    ret

------> offset: 0x45eae0
0x45eae0    mov eax, 0x66
0x45eae5    syscall
0x45eae7    ret

------> offset: 0x45eaee
0x45eaee    add [rax], al
0x45eaf0    mov eax, 0x6b
0x45eaf5    syscall
0x45eaf7    ret

------> offset: 0x45eaef
0x45eaef    add [rax+0x6b], bh
0x45eaf5    syscall
0x45eaf7    ret

------> offset: 0x45eaf0
0x45eaf0    mov eax, 0x6b
0x45eaf5    syscall
0x45eaf7    ret

------> offset: 0x45eafe
0x45eafe    add [rax], al
0x45eb00    mov eax, 0x68
0x45eb05    syscall
0x45eb07    ret

------> offset: 0x45eaff
0x45eaff    add [rax+0x68], bh
0x45eb05    syscall
0x45eb07    ret

------> offset: 0x45eb00
0x45eb00    mov eax, 0x68
0x45eb05    syscall
0x45eb07    ret

------> offset: 0x45eb0e
0x45eb0e    add [rax], al
0x45eb10    mov eax, 0x6c
0x45eb15    syscall
0x45eb17    ret

------> offset: 0x45eb0f
0x45eb0f    add [rax+0x6c], bh
0x45eb15    syscall
0x45eb17    ret

------> offset: 0x45eb10
0x45eb10    mov eax, 0x6c
0x45eb15    syscall
0x45eb17    ret

------> offset: 0x45eb35
0x45eb35    cmp rax, 0xfffffffffffff000
0x45eb3b    ja 0x45eb54
0x45eb3d    ret

------> offset: 0x45eb36
0x45eb36    cmp eax, 0xfffffffffffff000
0x45eb3b    ja 0x45eb54
0x45eb3d    ret

------> offset: 0x45eb3b
0x45eb3b    ja 0x45eb54
0x45eb3d    ret

------> offset: 0x45eb7f
0x45eb7f    ror byte [rax-0x77], 0x1
0x45eb82    retf 0x6b8

------> offset: 0x45eb82
0x45eb82    retf 0x6b8

------> offset: 0x45eb8a
0x45eb8a    cmp rax, 0xfffffffffffff000
0x45eb90    ja 0x45ebac
0x45eb92    ret

------> offset: 0x45eb8b
0x45eb8b    cmp eax, 0xfffffffffffff000
0x45eb90    ja 0x45ebac
0x45eb92    ret

------> offset: 0x45eb8f
0x45eb8f    push qword [rdi+0x1a]
0x45eb92    ret

------> offset: 0x45eb90
0x45eb90    ja 0x45ebac
0x45eb92    ret

------> offset: 0x45eb91
0x45eb91    sbb dh, bl
0x45eb93    ret

------> offset: 0x45ebbf
0x45ebbf    add [rcx-0x77], al
0x45ebc2    retf 0x6348

------> offset: 0x45ebc2
0x45ebc2    retf 0x6348

------> offset: 0x45ebd0
0x45ebd0    cmp rax, 0xfffffffffffff000
0x45ebd6    ja 0x45ebda
0x45ebd8    ret

------> offset: 0x45ebd1
0x45ebd1    cmp eax, 0xfffffffffffff000
0x45ebd6    ja 0x45ebda
0x45ebd8    ret

------> offset: 0x45ebd6
0x45ebd6    ja 0x45ebda
0x45ebd8    ret

------> offset: 0x45ebf3
0x45ebf3    ror [rax-0x7d], cl
0x45ebf6    in al, dx
0x45ebf7    jo 0x45ebef
0x45ebf9    ret 0x4840

------> offset: 0x45ebf6
0x45ebf6    in al, dx
0x45ebf7    jo 0x45ebef
0x45ebf9    ret 0x4840

------> offset: 0x45ebf7
0x45ebf7    jo 0x45ebef
0x45ebf9    ret 0x4840

------> offset: 0x45ec1e
0x45ec1e    push qword [rdi+0x35]
0x45ec21    add rsp, 0x70
0x45ec25    pop rbx
0x45ec26    ret

------> offset: 0x45ec1f
0x45ec1f    ja 0x45ec56
0x45ec21    add rsp, 0x70
0x45ec25    pop rbx
0x45ec26    ret

------> offset: 0x45ec20
0x45ec20    xor eax, 0x70c48348
0x45ec25    pop rbx
0x45ec26    ret

------> offset: 0x45ec24
0x45ec24    jo 0x45ec81
0x45ec26    ret

------> offset: 0x45ecc4
0x45ecc4    sbb [rax-0x7d], cl
0x45ecc7    retf

------> offset: 0x45ecff
0x45ecff    xchg esp, eax
0x45ed00    ror byte [rax-0x7d], 0xc4
0x45ed04    movzx rax, al
0x45ed08    ret

------> offset: 0x45ed00
0x45ed00    ror byte [rax-0x7d], 0xc4
0x45ed04    movzx rax, al
0x45ed08    ret

------> offset: 0x45ed01
0x45ed01    add rsp, 0x48
0x45ed05    movzx eax, al
0x45ed08    ret

------> offset: 0x45ed02
0x45ed02    add esp, 0x48
0x45ed05    movzx eax, al
0x45ed08    ret

------> offset: 0x45ed04
0x45ed04    movzx rax, al
0x45ed08    ret

------> offset: 0x45ed05
0x45ed05    movzx eax, al
0x45ed08    ret

------> offset: 0x45ed06
0x45ed06    mov dh, 0xc0
0x45ed08    ret

------> offset: 0x45ed2e
0x45ed2e    dec dword [rax-0x77]
0x45ed31    ret 0x7577

------> offset: 0x45ed31
0x45ed31    ret 0x7577

------> offset: 0x45ed9f
0x45ed9f    movzx ecx, byte [rsp-0x15]
0x45eda4    mov [r8+0x23], cl
0x45eda8    ret

------> offset: 0x45eda0
0x45eda0    mov dh, 0x4c
0x45eda2    and al, 0xeb
0x45eda4    mov [r8+0x23], cl
0x45eda8    ret

------> offset: 0x45eda1
0x45eda1    and al, 0xeb
0x45eda4    mov [r8+0x23], cl
0x45eda8    ret

------> offset: 0x45eda3
0x45eda3    jmp 0x45ede6
0x45eda5    mov [rax+0x23], cl
0x45eda8    ret

------> offset: 0x45eda4
0x45eda4    mov [r8+0x23], cl
0x45eda8    ret

------> offset: 0x45eda5
0x45eda5    mov [rax+0x23], cl
0x45eda8    ret

------> offset: 0x45edaf
0x45edaf    push rdi
0x45edb1    fisub dword [rcx+rcx*4+0x10]
0x45edb5    or eax, -0x1
0x45edb8    ret

------> offset: 0x45edb0
0x45edb0    neg edx
0x45edb2    mov [fs:rax], edx
0x45edb5    or eax, -0x1
0x45edb8    ret

------> offset: 0x45edb1
0x45edb1    fisub dword [rcx+rcx*4+0x10]
0x45edb5    or eax, -0x1
0x45edb8    ret

------> offset: 0x45edb2
0x45edb2    mov [fs:rax], edx
0x45edb5    or eax, -0x1
0x45edb8    ret

------> offset: 0x45edb3
0x45edb3    mov [rax], edx
0x45edb5    or eax, -0x1
0x45edb8    ret

------> offset: 0x45edd1
0x45edd1    dec dword [rax-0x77]
0x45edd4    ret 0x2d77

------> offset: 0x45edd4
0x45edd4    ret 0x2d77

------> offset: 0x45eddd
0x45eddd    add [rcx], dh
0x45eddf    ror byte [rax+0x39], 0xd6
0x45ede3    ja 0x45edf0
0x45ede5    ret

------> offset: 0x45edde
0x45edde    xor eax, eax
0x45ede0    cmp rsi, rdx
0x45ede3    ja 0x45edf0
0x45ede5    ret

------> offset: 0x45eddf
0x45eddf    ror byte [rax+0x39], 0xd6
0x45ede3    ja 0x45edf0
0x45ede5    ret

------> offset: 0x45ede0
0x45ede0    cmp rsi, rdx
0x45ede3    ja 0x45edf0
0x45ede5    ret

------> offset: 0x45ede1
0x45ede1    cmp esi, edx
0x45ede3    ja 0x45edf0
0x45ede5    ret

------> offset: 0x45ede3
0x45ede3    ja 0x45edf0
0x45ede5    ret

------> offset: 0x45ede4
0x45ede4    or esi, ebx
0x45ede6    ret

------> offset: 0x45edfa
0x45edfa    or al, 0x0
0x45edfc    add [rax], al
0x45edfe    mov eax, 0xffffffffffffffff
0x45ee03    ret

------> offset: 0x45ee17
0x45ee17    jmp qword [rcx+rcx*4+0x10]
0x45ee1b    xor eax, eax
0x45ee1d    ret

------> offset: 0x45ee18
0x45ee18    mov [fs:rax], edx
0x45ee1b    xor eax, eax
0x45ee1d    ret

------> offset: 0x45ee37
0x45ee37    cmp rax, 0xfffffffffffff000
0x45ee3d    ja 0x45ee40
0x45ee3f    ret

------> offset: 0x45ee38
0x45ee38    cmp eax, 0xfffffffffffff000
0x45ee3d    ja 0x45ee40
0x45ee3f    ret

------> offset: 0x45ee3c
0x45ee3c    push qword [rdi+0x1]
0x45ee3f    ret

------> offset: 0x45ee3d
0x45ee3d    ja 0x45ee40
0x45ee3f    ret

------> offset: 0x45ee95
0x45ee95    mov rax, [rsp+0x8]
0x45ee9a    add rsp, 0x28
0x45ee9e    ret

------> offset: 0x45ee96
0x45ee96    mov eax, [rsp+0x8]
0x45ee9a    add rsp, 0x28
0x45ee9e    ret

------> offset: 0x45ee97
0x45ee97    and al, 0x8
0x45ee9a    add rsp, 0x28
0x45ee9e    ret

------> offset: 0x45ee9a
0x45ee9a    add rsp, 0x28
0x45ee9e    ret

------> offset: 0x45ee9b
0x45ee9b    add esp, 0x28
0x45ee9e    ret

------> offset: 0x45ef63
0x45ef63    ret 0x8b05

------> offset: 0x45ef84
0x45ef84    adc [rax-0x73], r9b
0x45ef88    adc al, 0x8a
0x45ef8a    add eax, [rsi+rdx]
0x45ef8d    ret

------> offset: 0x45ef85
0x45ef85    adc [rax-0x73], cl
0x45ef88    adc al, 0x8a
0x45ef8a    add eax, [rsi+rdx]
0x45ef8d    ret

------> offset: 0x45ef86
0x45ef86    lea rdx, [rdx+rcx*4]
0x45ef8a    add eax, [rsi+rdx]
0x45ef8d    ret

------> offset: 0x45ef87
0x45ef87    lea edx, [rdx+rcx*4]
0x45ef8a    add eax, [rsi+rdx]
0x45ef8d    ret

------> offset: 0x45ef88
0x45ef88    adc al, 0x8a
0x45ef8a    add eax, [rsi+rdx]
0x45ef8d    ret

------> offset: 0x45ef89
0x45ef89    mov al, [rbx]
0x45ef8b    add al, 0x16
0x45ef8d    ret

------> offset: 0x45ef8a
0x45ef8a    add eax, [rsi+rdx]
0x45ef8d    ret

------> offset: 0x45ef8b
0x45ef8b    add al, 0x16
0x45ef8d    ret

------> offset: 0x45ef90
0x45ef90    mov eax, edi
0x45ef92    nop word [rax+rax+0x0]
0x45ef98    ret

------> offset: 0x45ef91
0x45ef91    clc
0x45ef92    nop word [rax+rax+0x0]
0x45ef98    ret

------> offset: 0x45ef92
0x45ef92    nop word [rax+rax+0x0]
0x45ef98    ret

------> offset: 0x45f0be
0x45f0be    xchg esi, eax
0x45f0bf    ret 0x394c

------> offset: 0x45f0bf
0x45f0bf    ret 0x394c

------> offset: 0x45f130
0x45f130    call far dword [rbx+0x5d]
0x45f133    pop r12
0x45f135    pop r13
0x45f137    pop r14
0x45f139    ret

------> offset: 0x45f1a0
0x45f1a0    test r8d, r8d
0x45f1a3    jnz 0x45f204
0x45f1a5    mov rax, r9
0x45f1a8    ret

------> offset: 0x45f1a1
0x45f1a1    test eax, eax
0x45f1a3    jnz 0x45f204
0x45f1a5    mov rax, r9
0x45f1a8    ret

------> offset: 0x45f1a2
0x45f1a2    sal byte [rbp+0x5f], 0x4c
0x45f1a6    mov eax, ecx
0x45f1a8    ret

------> offset: 0x45f1a3
0x45f1a3    jnz 0x45f204
0x45f1a5    mov rax, r9
0x45f1a8    ret

------> offset: 0x45f1a4
0x45f1a4    pop rdi
0x45f1a5    mov rax, r9
0x45f1a8    ret

------> offset: 0x45f1a5
0x45f1a5    mov rax, r9
0x45f1a8    ret

------> offset: 0x45f1d5
0x45f1d5    retf 0x8445

------> offset: 0x45f1df
0x45f1df    jz 0x45f1a8
0x45f1e1    cmp r10b, 0x3a
0x45f1e5    jz 0x45f1a0
0x45f1e7    ret

------> offset: 0x45f1e0
0x45f1e0    mov dword [rcx-0x80], 0xffffffffb9743afa
0x45f1e7    ret

------> offset: 0x45f1e1
0x45f1e1    cmp r10b, 0x3a
0x45f1e5    jz 0x45f1a0
0x45f1e7    ret

------> offset: 0x45f1e2
0x45f1e2    cmp dl, 0x3a
0x45f1e5    jz 0x45f1a0
0x45f1e7    ret

------> offset: 0x45f1e3
0x45f1e3    cli
0x45f1e4    cmp dh, [rcx+rdi*4-0xd]
0x45f1e8    ret

------> offset: 0x45f1e4
0x45f1e4    cmp dh, [rcx+rdi*4-0xd]
0x45f1e8    ret

------> offset: 0x45f1e5
0x45f1e5    jz 0x45f1a0
0x45f1e7    ret

------> offset: 0x45f22c
0x45f22c    cmp byte [rsi-0x2], 0x3a
0x45f230    cmovz rax, r9
0x45f234    ret

------> offset: 0x45f230
0x45f230    cmovz rax, r9
0x45f234    ret

------> offset: 0x45f231
0x45f231    cmovz eax, ecx
0x45f234    ret

------> offset: 0x45f290
0x45f290    mov dword [rcx], 0xffffffff8348c889
0x45f296    ret 0x8401

------> offset: 0x45f296
0x45f296    ret 0x8401

------> offset: 0x45f33e
0x45f33e    ror byte [rax-0x73], 0x65
0x45f342    pop rbx
0x45f344    pop r12
0x45f346    pop rbp
0x45f347    ret

------> offset: 0x45f33f
0x45f33f    lea rsp, [rbp-0x10]
0x45f343    pop rbx
0x45f344    pop r12
0x45f346    pop rbp
0x45f347    ret

------> offset: 0x45f340
0x45f340    lea esp, [rbp-0x10]
0x45f343    pop rbx
0x45f344    pop r12
0x45f346    pop rbp
0x45f347    ret

------> offset: 0x45f341
0x45f341    pop rbx
0x45f344    pop r12
0x45f346    pop rbp
0x45f347    ret

------> offset: 0x45f344
0x45f344    pop r12
0x45f346    pop rbp
0x45f347    ret

------> offset: 0x45f345
0x45f345    pop rsp
0x45f346    pop rbp
0x45f347    ret

------> offset: 0x45f3a3
0x45f3a3    add ecx, ebp
0x45f3a5    ret 0xfffe

------> offset: 0x45f3dc
0x45f3dc    dec dword [rax-0x77]
0x45f3e0    ret 0xe75

------> offset: 0x45f3e0
0x45f3e0    ret 0xe75

------> offset: 0x45f432
0x45f432    or [r8-0x7b], cl
0x45f436    sal byte [rdi+0x48], 0x89
0x45f43b    ret

------> offset: 0x45f433
0x45f433    or [rax-0x7b], cl
0x45f436    sal byte [rdi+0x48], 0x89
0x45f43b    ret

------> offset: 0x45f436
0x45f436    sal byte [rdi+0x48], 0x89
0x45f43b    ret

------> offset: 0x45f63f
0x45f63f    add al, bpl
0x45f642    retf 0xfa0c

------> offset: 0x45f640
0x45f640    add al, ch
0x45f642    retf 0xfa0c

------> offset: 0x45f642
0x45f642    retf 0xfa0c

------> offset: 0x45f792
0x45f792    test cl, 0xe1
0x45f795    or [rcx], al
0x45f797    retf 0xe2c1

------> offset: 0x45f795
0x45f795    or [rcx], al
0x45f797    retf 0xe2c1

------> offset: 0x45f797
0x45f797    retf 0xe2c1

------> offset: 0x45f965
0x45f965    add ecx, [rdi]
0x45f967    xchg ebp, eax
0x45f968    ret 0xe74

------> offset: 0x45f967
0x45f967    xchg ebp, eax
0x45f968    ret 0xe74

------> offset: 0x45f968
0x45f968    ret 0xe74

------> offset: 0x45fc6e
0x45fc6e    ret 0x7d77

------> offset: 0x4600de
0x4600de    add [rax+0x0], al
0x4600e1    add [rdi], cl
0x4600e3    xchg esp, eax
0x4600e4    ret 0xc283

------> offset: 0x4600e1
0x4600e1    add [rdi], cl
0x4600e3    xchg esp, eax
0x4600e4    ret 0xc283

------> offset: 0x4600e3
0x4600e3    xchg esp, eax
0x4600e4    ret 0xc283

------> offset: 0x4600e4
0x4600e4    ret 0xc283

------> offset: 0x4600e6
0x4600e6    ret 0x3d01

------> offset: 0x4602ea
0x4602ea    push rdx
0x4602eb    ret 0xfffb

------> offset: 0x460566
0x460566    ror byte [rdi], 0x84
0x460569    or [rax], eax
0x46056c    add [rax-0x77], cl
0x46056f    ret

------> offset: 0x460568
0x460568    test bl, dh
0x46056a    or [rax], eax
0x46056c    add [rax-0x77], cl
0x46056f    ret

------> offset: 0x46065f
0x46065f    ret 0x8116

------> offset: 0x4606ea
0x4606ea    ror byte [rax-0x7d], 0x1
0x4606ed    ret

------> offset: 0x460773
0x460773    add [rcx-0x77], ecx
0x460776    retf 0x2949

------> offset: 0x46078c
0x46078c    pop rbx
0x46078d    and [rbp-0x73], cl
0x460790    push rdi
0x460791    add [rcx-0x77], ecx
0x460794    iret

------> offset: 0x46078d
0x46078d    and [rbp-0x73], cl
0x460790    push rdi
0x460791    add [rcx-0x77], ecx
0x460794    iret

------> offset: 0x460790
0x460790    push rdi
0x460791    add [rcx-0x77], ecx
0x460794    iret

------> offset: 0x460791
0x460791    add [rcx-0x77], ecx
0x460794    iret

------> offset: 0x460994
0x460994    push rbx
0x460995    sub dh, dh
0x460997    ret 0xf04

------> offset: 0x460995
0x460995    sub dh, dh
0x460997    ret 0xf04

------> offset: 0x460a1a
0x460a1a    call 0xfffffffff7460a1d
0x460a1f    ret 0xf02

------> offset: 0x460a1d
0x460a1d    push rsi
0x460a1f    ret 0xf02

------> offset: 0x460a2c
0x460a2c    xchg ebx, eax
0x460a2d    add al, 0x0
0x460a2f    add [rax-0x7d], cl
0x460a32    ret

------> offset: 0x460a2d
0x460a2d    add al, 0x0
0x460a2f    add [rax-0x7d], cl
0x460a32    ret

------> offset: 0x460d78
0x460d78    ror byte [rdi], 0x85
0x460d7b    retf

------> offset: 0x46150b
0x46150b    test [rax], dh
0x46150d    add [rax], eax
0x46150f    add [rax-0x7d], cl
0x461512    ret 0x4101

------> offset: 0x46150d
0x46150d    add [rax], eax
0x46150f    add [rax-0x7d], cl
0x461512    ret 0x4101

------> offset: 0x46154c
0x46154c    ret 0x2175

------> offset: 0x461569
0x461569    ret 0x874

------> offset: 0x4615cb
0x4615cb    add [rax-0x7d], ecx
0x4615ce    ret 0x4502

------> offset: 0x4615ce
0x4615ce    ret 0x4502

------> offset: 0x46165d
0x46165d    inc dword [rbp-0x16368a13]
0x461663    retf

------> offset: 0x46169f
0x46169f    add [rdx+rdx*8-0x76b7bb8c], al
0x4616a6    retf

------> offset: 0x4616cb
0x4616cb    test edi, ebx
0x4616cd    add [rax], eax
0x4616cf    add [rcx-0x77], cl
0x4616d2    retf 0xcfeb

------> offset: 0x4616cd
0x4616cd    add [rax], eax
0x4616cf    add [rcx-0x77], cl
0x4616d2    retf 0xcfeb

------> offset: 0x4616cf
0x4616cf    add [rcx-0x77], cl
0x4616d2    retf 0xcfeb

------> offset: 0x4616d2
0x4616d2    retf 0xcfeb

------> offset: 0x4618ec
0x4618ec    sbb [rcx+0xf], cl
0x4618ef    retf 0xdae9

------> offset: 0x4618ef
0x4618ef    retf 0xdae9

------> offset: 0x461931
0x461931    ror byte [rcx+0xf], 0x44
0x461935    retf 0xb6e9

------> offset: 0x461934
0x461934    retf 0xb6e9

------> offset: 0x461a57
0x461a57    ret 0x5c41

------> offset: 0x461c3c
0x461c3c    fiadd dword [rbx+0x394c03e2]
0x461c42    retf 0xf49

------> offset: 0x461c42
0x461c42    retf 0xf49

------> offset: 0x462021
0x462021    adc [rbp+0x31], al
0x462024    ror [rcx-0x77], cl
0x462027    ret

------> offset: 0x462024
0x462024    ror [rcx-0x77], cl
0x462027    ret

------> offset: 0x462035
0x462035    cli
0x462036    cmp cl, [rdi+rcx+0x44]
0x46203a    ror dword [rcx-0x7d], 0x1
0x46203d    ret

------> offset: 0x462036
0x462036    cmp cl, [rdi+rcx+0x44]
0x46203a    ror dword [rcx-0x7d], 0x1
0x46203d    ret

------> offset: 0x462039
0x462039    ror dword [rcx-0x7d], 0x1
0x46203d    ret

------> offset: 0x462098
0x462098    pop r14
0x46209a    mov eax, 0x1
0x46209f    pop r15
0x4620a1    ret

------> offset: 0x462099
0x462099    pop rsi
0x46209a    mov eax, 0x1
0x46209f    pop r15
0x4620a1    ret

------> offset: 0x46209a
0x46209a    mov eax, 0x1
0x46209f    pop r15
0x4620a1    ret

------> offset: 0x46209b
0x46209b    add [rax], eax
0x46209d    add [rax], al
0x46209f    pop r15
0x4620a1    ret

------> offset: 0x46209c
0x46209c    add [rax], al
0x46209e    add [rcx+0x5f], al
0x4620a1    ret

------> offset: 0x46209d
0x46209d    add [rax], al
0x46209f    pop r15
0x4620a1    ret

------> offset: 0x46209e
0x46209e    add [rcx+0x5f], al
0x4620a1    ret

------> offset: 0x462157
0x462157    test [rsi+rdi*8-0x76b30001], cl
0x46215e    loopz 0x46214b
0x462160    iret

------> offset: 0x46215e
0x46215e    loopz 0x46214b
0x462160    iret

------> offset: 0x4622d7
0x4622d7    push rbx
0x4622d8    and [rcx+rcx*4+0x4b], cl
0x4622dc    sbb [rcx+0x1], cl
0x4622df    iret

------> offset: 0x4622d8
0x4622d8    and [rcx+rcx*4+0x4b], cl
0x4622dc    sbb [rcx+0x1], cl
0x4622df    iret

------> offset: 0x4622dc
0x4622dc    sbb [rcx+0x1], cl
0x4622df    iret

------> offset: 0x4622f7
0x4622f7    ror dword [rcx-0x77], 0x1
0x4622fa    ret 0x85eb

------> offset: 0x4622fa
0x4622fa    ret 0x85eb

------> offset: 0x46235d
0x46235d    ret 0xaa75

------> offset: 0x4625d7
0x4625d7    inc dword [rbx-0x76be0008]
0x4625dd    ret 0x840f

------> offset: 0x4625d9
0x4625d9    clc
0x4625da    inc dword [rcx-0x77]
0x4625dd    ret 0x840f

------> offset: 0x4625da
0x4625da    inc dword [rcx-0x77]
0x4625dd    ret 0x840f

------> offset: 0x4626ea
0x4626ea    inc dword [rbx-0x76be0008]
0x4626f0    ret 0x940f

------> offset: 0x4626ec
0x4626ec    clc
0x4626ed    inc dword [rcx-0x77]
0x4626f0    ret 0x940f

------> offset: 0x4626ed
0x4626ed    inc dword [rcx-0x77]
0x4626f0    ret 0x940f

------> offset: 0x4626f0
0x4626f0    ret 0x940f

------> offset: 0x46275e
0x46275e    jz 0x462784
0x462760    sub [rcx-0x77], al
0x462763    ret 0x8341

------> offset: 0x462760
0x462760    sub [rcx-0x77], al
0x462763    ret 0x8341

------> offset: 0x4628a1
0x4628a1    inc dword [rbx-0x76be0008]
0x4628a7    ret 0x5b74

------> offset: 0x4628a3
0x4628a3    clc
0x4628a4    inc dword [rcx-0x77]
0x4628a7    ret 0x5b74

------> offset: 0x4628a4
0x4628a4    inc dword [rcx-0x77]
0x4628a7    ret 0x5b74

------> offset: 0x4628a7
0x4628a7    ret 0x5b74

------> offset: 0x462962
0x462962    inc dword [rcx-0x77]
0x462965    ret 0x3e9

------> offset: 0x462965
0x462965    ret 0x3e9

------> offset: 0x4629f7
0x4629f7    inc dword [rbx-0x76be0008]
0x4629fd    ret 0x850f

------> offset: 0x4629f9
0x4629f9    clc
0x4629fa    inc dword [rcx-0x77]
0x4629fd    ret 0x850f

------> offset: 0x4629fa
0x4629fa    inc dword [rcx-0x77]
0x4629fd    ret 0x850f

------> offset: 0x462ad6
0x462ad6    add [rcx-0x77], al
0x462ada    ret 0x8b44

------> offset: 0x462ada
0x462ada    ret 0x8b44

------> offset: 0x462d3d
0x462d3d    loopnz 0x462cdf
0x462d3f    add al, bpl
0x462d42    retf 0xf9d5

------> offset: 0x462d3f
0x462d3f    add al, bpl
0x462d42    retf 0xf9d5

------> offset: 0x462d40
0x462d40    add al, ch
0x462d42    retf 0xf9d5

------> offset: 0x462d42
0x462d42    retf 0xf9d5

------> offset: 0x4630b2
0x4630b2    add [r8-0x73], r9b
0x4630b6    add r11d, r13d
0x4630b9    retf

------> offset: 0x4630b3
0x4630b3    add [rax-0x73], cl
0x4630b6    add r11d, r13d
0x4630b9    retf

------> offset: 0x4630b6
0x4630b6    add r11d, r13d
0x4630b9    retf

------> offset: 0x4630b7
0x4630b7    add ebx, ebp
0x4630b9    retf

------> offset: 0x4632d0
0x4632d0    adc al, ch
0x4632d2    retf 0xffec

------> offset: 0x4632d2
0x4632d2    retf 0xffec

------> offset: 0x4633d2
0x4633d2    retf 0xffeb

------> offset: 0x463426
0x463426    jge 0x46342e
0x463428    add [rdi], cl
0x46342a    xchg esp, eax
0x46342b    ret 0x5385

------> offset: 0x463428
0x463428    add [rdi], cl
0x46342a    xchg esp, eax
0x46342b    ret 0x5385

------> offset: 0x46342a
0x46342a    xchg esp, eax
0x46342b    ret 0x5385

------> offset: 0x46342b
0x46342b    ret 0x5385

------> offset: 0x4634c0
0x4634c0    call 0x5c879220
0x4634c5    pop r13
0x4634c7    ret

------> offset: 0x4637f8
0x4637f8    dec byte [rax-0x77]
0x4637fb    ret

------> offset: 0x463852
0x463852    and ecx, [rdi]
0x463854    xchg [rdi], bl
0x463856    add [rax], eax
0x463858    add [rax-0x77], cl
0x46385b    ret

------> offset: 0x463854
0x463854    xchg [rdi], bl
0x463856    add [rax], eax
0x463858    add [rax-0x77], cl
0x46385b    ret

------> offset: 0x463856
0x463856    add [rax], eax
0x463858    add [rax-0x77], cl
0x46385b    ret

------> offset: 0x463877
0x463877    retf 0xfff9

------> offset: 0x4638e0
0x4638e0    add cl, [rax+0x39]
0x4638e3    ret 0x860f

------> offset: 0x463b9e
0x463b9e    out dx, al
0x463b9f    ret

------> offset: 0x463caf
0x463caf    add [rax-0x7d], cl
0x463cb2    ret 0x8304

------> offset: 0x463ee1
0x463ee1    test bh, dh
0x463ee3    add eax, [rax]
0x463ee5    add [rcx-0x77], cl
0x463ee8    ret 0x8d48

------> offset: 0x463ee2
0x463ee2    test dword [rbx], 0xffffffff89490000
0x463ee8    ret 0x8d48

------> offset: 0x463ee3
0x463ee3    add eax, [rax]
0x463ee5    add [rcx-0x77], cl
0x463ee8    ret 0x8d48

------> offset: 0x463fc6
0x463fc6    add bh, dh
0x463fc8    ret 0x804

------> offset: 0x463fc8
0x463fc8    ret 0x804

------> offset: 0x4640dd
0x4640dd    ror [rax-0x7d], cl
0x4640e0    ret 0x4801

------> offset: 0x46419b
0x46419b    xor [rdi+rcx+0x44], cl
0x4641a0    retf 0x3980

------> offset: 0x46419f
0x46419f    retf 0x3980

------> offset: 0x464204
0x464204    xor eax, 0xffffffff8b480000
0x464209    mov r9b, r13b
0x46420c    ret

------> offset: 0x464206
0x464206    add [rax-0x75], cl
0x464209    mov r9b, r13b
0x46420c    ret

------> offset: 0x464209
0x464209    mov r9b, r13b
0x46420c    ret

------> offset: 0x46420a
0x46420a    mov cl, ch
0x46420c    ret

------> offset: 0x464254
0x464254    dec dword [rbp+0x39]
0x464257    iret

------> offset: 0x4642a5
0x4642a5    rol byte [rcx], 0x89
0x4642a8    ret 0x8b48

------> offset: 0x4642b8
0x4642b8    retf 0xe275

------> offset: 0x4645d5
0x4645d5    and [rax-0x7d], ecx
0x4645d8    ret 0x4c08

------> offset: 0x46468e
0x46468e    dec dword [rdi]
0x464690    xchg ebp, eax
0x464691    ret 0xdaf7

------> offset: 0x464734
0x464734    sbb al, 0xb0
0x464736    retf 0x81be

------> offset: 0x464736
0x464736    retf 0x81be

------> offset: 0x464806
0x464806    ret 0x3110

------> offset: 0x464818
0x464818    dec dword [rax-0x7d]
0x46481b    ret 0x4808

------> offset: 0x464829
0x464829    add eax, [rax]
0x46482b    add dh, dh
0x46482d    ret 0xf08

------> offset: 0x46482b
0x46482b    add dh, dh
0x46482d    ret 0xf08

------> offset: 0x46482d
0x46482d    ret 0xf08

------> offset: 0x464841
0x464841    add dh, [rsi+rcx*2-0x7d]
0x464845    retf 0x4108

------> offset: 0x464845
0x464845    retf 0x4108

------> offset: 0x46487f
0x46487f    rol dword [rcx], 0x39
0x464882    retf 0x5c76

------> offset: 0x464880
0x464880    add [rcx], edi
0x464882    retf 0x5c76

------> offset: 0x464882
0x464882    retf 0x5c76

------> offset: 0x464a99
0x464a99    sub eax, edx
0x464a9b    mov [rdi+0x308], rax
0x464aa2    ret

------> offset: 0x464a9b
0x464a9b    mov [rdi+0x308], rax
0x464aa2    ret

------> offset: 0x464a9c
0x464a9c    mov [rdi+0x308], eax
0x464aa2    ret

------> offset: 0x464a9e
0x464a9e    or [rbx], al
0x464aa0    add [rax], al
0x464aa2    ret

------> offset: 0x464ac5
0x464ac5    add [rax], al
0x464ac7    mov [rdi+0x300], rax
0x464ace    ret

------> offset: 0x464ac7
0x464ac7    mov [rdi+0x300], rax
0x464ace    ret

------> offset: 0x464ac8
0x464ac8    mov [rdi+0x300], eax
0x464ace    ret

------> offset: 0x464aca
0x464aca    add [rbx], al
0x464acc    add [rax], al
0x464ace    ret

------> offset: 0x464b81
0x464b81    add bl, ch
0x464b83    mov eax, 0x8c48348
0x464b88    pop rbx
0x464b89    pop rbp
0x464b8a    ret

------> offset: 0x464b82
0x464b82    jmp 0x464b3c
0x464b84    add rsp, 0x8
0x464b88    pop rbx
0x464b89    pop rbp
0x464b8a    ret

------> offset: 0x464b83
0x464b83    mov eax, 0x8c48348
0x464b88    pop rbx
0x464b89    pop rbp
0x464b8a    ret

------> offset: 0x464f17
0x464f17    or byte [rdi+0x315], 0x4
0x464f1e    xor eax, eax
0x464f20    ret

------> offset: 0x464f19
0x464f19    adc eax, 0x4000003
0x464f1e    xor eax, eax
0x464f20    ret

------> offset: 0x464f30
0x464f30    and eax, 0x48c03100
0x464f35    add esp, 0x8
0x464f38    ret

------> offset: 0x464fdd
0x464fdd    adc eax, 0x4000003
0x464fe2    add rsp, 0x8
0x464fe6    ret

------> offset: 0x464fde
0x464fde    add eax, [rax]
0x464fe0    add [rax+rcx*2], al
0x464fe3    add esp, 0x8
0x464fe6    ret

------> offset: 0x464fdf
0x464fdf    add [rax], al
0x464fe1    add al, 0x48
0x464fe3    add esp, 0x8
0x464fe6    ret

------> offset: 0x464fe0
0x464fe0    add [rax+rcx*2], al
0x464fe3    add esp, 0x8
0x464fe6    ret

------> offset: 0x464fe1
0x464fe1    add al, 0x48
0x464fe3    add esp, 0x8
0x464fe6    ret

------> offset: 0x464ff3
0x464ff3    ret 0x25

------> offset: 0x4650c7
0x4650c7    cld
0x4650c8    cld
0x4650c9    inc dword [rbp+0x5b0278c0]
0x4650cf    ret

------> offset: 0x4650c8
0x4650c8    cld
0x4650c9    inc dword [rbp+0x5b0278c0]
0x4650cf    ret

------> offset: 0x4650c9
0x4650c9    inc dword [rbp+0x5b0278c0]
0x4650cf    ret

------> offset: 0x4650ca
0x4650ca    test eax, eax
0x4650cc    js 0x4650d0
0x4650ce    pop rbx
0x4650cf    ret

------> offset: 0x4650cb
0x4650cb    sar byte [rax+0x2], 0x5b
0x4650cf    ret

------> offset: 0x4650cc
0x4650cc    js 0x4650d0
0x4650ce    pop rbx
0x4650cf    ret

------> offset: 0x465376
0x465376    sbb [rcx+0x39], cl
0x465379    ret

------> offset: 0x465a2d
0x465a2d    adc [r8-0x77], r9b
0x465a32    ret 0x98e8

------> offset: 0x465a2f
0x465a2f    adc [rax-0x77], cl
0x465a32    ret 0x98e8

------> offset: 0x465a32
0x465a32    ret 0x98e8

------> offset: 0x465b25
0x465b25    sbb [rcx-0x77], cl
0x465b28    xchg edi, eax
0x465b29    call 0xffffffffe9465b31
0x465b2e    retf

------> offset: 0x465b28
0x465b28    xchg edi, eax
0x465b29    call 0xffffffffe9465b31
0x465b2e    retf

------> offset: 0x465b29
0x465b29    call 0xffffffffe9465b31
0x465b2e    retf

------> offset: 0x465b2a
0x465b2a    add eax, [rax]
0x465b2c    add cl, ch
0x465b2e    retf

------> offset: 0x465f62
0x465f62    adc [r8-0x77], r9b
0x465f67    ret 0x63e8

------> offset: 0x465f64
0x465f64    adc [rax-0x77], cl
0x465f67    ret 0x63e8

------> offset: 0x4662b2
0x4662b2    sub [rax-0x77], cl
0x4662b5    ror byte [rax-0x9], 0x1
0x4662b8    fmul dword [rax-0x77]
0x4662bb    iret

------> offset: 0x4662b5
0x4662b5    ror byte [rax-0x9], 0x1
0x4662b8    fmul dword [rax-0x77]
0x4662bb    iret

------> offset: 0x4662b8
0x4662b8    fmul dword [rax-0x77]
0x4662bb    iret

------> offset: 0x4664f1
0x4664f1    ror [rcx-0x7d], cl
0x4664f4    std
0x4664f5    and al, 0xf
0x4664f7    xchg esp, eax
0x4664f8    ret 0xc031

------> offset: 0x4664f4
0x4664f4    std
0x4664f5    and al, 0xf
0x4664f7    xchg esp, eax
0x4664f8    ret 0xc031

------> offset: 0x4664f5
0x4664f5    and al, 0xf
0x4664f7    xchg esp, eax
0x4664f8    ret 0xc031

------> offset: 0x46668f
0x46668f    add [rbx-0x7cb7fbbd], cl
0x466695    ret 0x4803

------> offset: 0x4666ff
0x4666ff    add al, bpl
0x466702    retf 0xff85

------> offset: 0x466700
0x466700    add al, ch
0x466702    retf 0xff85

------> offset: 0x466702
0x466702    retf 0xff85

------> offset: 0x46676d
0x46676d    ror byte [rax+0x9], 0x5
0x466771    wait
0x466772    retf 0x25

------> offset: 0x466771
0x466771    wait
0x466772    retf 0x25

------> offset: 0x466772
0x466772    retf 0x25

------> offset: 0x466812
0x466812    mov [0x8348d889482673ce], eax
0x46681b    ret

------> offset: 0x466818
0x466818    fmul dword [rax-0x7d]
0x46681b    ret

------> offset: 0x466b03
0x466b03    add [rcx+rax+0x4a], ecx
0x466b07    or [rax-0x7d], cl
0x466b0a    ret 0x4810

------> offset: 0x466b06
0x466b06    or [rax-0x7d], cl
0x466b0a    ret 0x4810

------> offset: 0x466e15
0x466e15    add [rcx-0x77], cl
0x466e18    fmul dword [rdi+rcx+0x44]
0x466e1c    retf 0x8b48

------> offset: 0x466e18
0x466e18    fmul dword [rdi+rcx+0x44]
0x466e1c    retf 0x8b48

------> offset: 0x466fa2
0x466fa2    add esp, 0x140
0x466fa8    mov eax, ebx
0x466faa    pop rbx
0x466fab    ret

------> offset: 0x466fa6
0x466fa6    add [rax], al
0x466fa8    mov eax, ebx
0x466faa    pop rbx
0x466fab    ret

------> offset: 0x466fe6
0x466fe6    cmp [rax-0x77], cl
0x466fe9    ret

------> offset: 0x467075
0x467075    mov [rax+0x8], rdx
0x467079    ret

------> offset: 0x467076
0x467076    mov [rax+0x8], edx
0x467079    ret

------> offset: 0x467078
0x467078    or bl, al
0x46707a    nop word [rax+rax+0x0]
0x467080    ret

------> offset: 0x467117
0x467117    fld qword [rax+rax]
0x46711a    add [rax+0x63], cl
0x46711d    ret

------> offset: 0x467118
0x467118    add al, 0x0
0x46711a    add [rax+0x63], cl
0x46711d    ret

------> offset: 0x46711a
0x46711a    add [rax+0x63], cl
0x46711d    ret

------> offset: 0x46715b
0x46715b    add [rax], al
0x46715d    add [rax], al
0x46715f    add [rax-0x7d], cl
0x467162    ret 0xf01

------> offset: 0x46715d
0x46715d    add [rax], al
0x46715f    add [rax-0x7d], cl
0x467162    ret 0xf01

------> offset: 0x46715f
0x46715f    add [rax-0x7d], cl
0x467162    ret 0xf01

------> offset: 0x46720f
0x46720f    dec dword [rax-0x7d]
0x467212    ret 0xf01

------> offset: 0x467279
0x467279    add [rax], r8d
0x46727c    add [rax+0x63], cl
0x46727f    ret

------> offset: 0x46727a
0x46727a    add [rax], eax
0x46727c    add [rax+0x63], cl
0x46727f    ret

------> offset: 0x467322
0x467322    add [rax-0x7d], ecx
0x467325    ret 0x4101

------> offset: 0x46736c
0x46736c    cmp [rax+0x63], cl
0x46736f    retf

------> offset: 0x4673a3
0x4673a3    ror byte [rax+0xf], 0x1
0x4673a6    ret 0x8948

------> offset: 0x4673f5
0x4673f5    mov eax, 0xffffffff89fffffb
0x4673fa    ret 0xc083

------> offset: 0x46748a
0x46748a    ret 0x4118

------> offset: 0x4674d9
0x4674d9    ror [rax+0x29], cl
0x4674dc    ret 0x394c

------> offset: 0x467556
0x467556    dec dword [rax+0x63]
0x467559    ret

------> offset: 0x4675a4
0x4675a4    dec dword [rax+0x29]
0x4675a7    ret 0x35e9

------> offset: 0x4675a7
0x4675a7    ret 0x35e9

------> offset: 0x467694
0x467694    call 0x5c87d3f4
0x467699    pop r13
0x46769b    ret

------> offset: 0x467921
0x467921    add esp, 0x8
0x467924    xor edx, edx
0x467926    pop rbx
0x467927    mov eax, edx
0x467929    pop rbp
0x46792a    ret

------> offset: 0x467924
0x467924    xor edx, edx
0x467926    pop rbx
0x467927    mov eax, edx
0x467929    pop rbp
0x46792a    ret

------> offset: 0x467926
0x467926    pop rbx
0x467927    mov eax, edx
0x467929    pop rbp
0x46792a    ret

------> offset: 0x467927
0x467927    mov eax, edx
0x467929    pop rbp
0x46792a    ret

------> offset: 0x467946
0x467946    retf 0x5274

------> offset: 0x467994
0x467994    push rax
0x467995    add al, 0x48
0x467997    cmp edx, ecx
0x467999    jnz 0x467949
0x46799b    mov eax, [rdx]
0x46799d    ret

------> offset: 0x467995
0x467995    add al, 0x48
0x467997    cmp edx, ecx
0x467999    jnz 0x467949
0x46799b    mov eax, [rdx]
0x46799d    ret

------> offset: 0x467996
0x467996    cmp rdx, rcx
0x467999    jnz 0x467949
0x46799b    mov eax, [rdx]
0x46799d    ret

------> offset: 0x467997
0x467997    cmp edx, ecx
0x467999    jnz 0x467949
0x46799b    mov eax, [rdx]
0x46799d    ret

------> offset: 0x467998
0x467998    retf 0xae75

------> offset: 0x467999
0x467999    jnz 0x467949
0x46799b    mov eax, [rdx]
0x46799d    ret

------> offset: 0x46799a
0x46799a    scasb
0x46799b    mov eax, [rdx]
0x46799d    ret

------> offset: 0x46799b
0x46799b    mov eax, [rdx]
0x46799d    ret

------> offset: 0x4679ba
0x4679ba    add eax, 0x25c0d1
0x4679bf    add rsp, 0x8
0x4679c3    ret

------> offset: 0x4679bc
0x4679bc    shl byte [rip-0x3b7cb800], 0x8
0x4679c3    ret

------> offset: 0x467a8b
0x467a8b    mov eax, [rip+0x25bff7]
0x467a91    mov [rsi], rax
0x467a94    ret

------> offset: 0x467a8c
0x467a8c    add eax, 0x25bff7
0x467a91    mov [rsi], rax
0x467a94    ret

------> offset: 0x467a8f
0x467a8f    and eax, 0x6894800
0x467a94    ret

------> offset: 0x467a91
0x467a91    mov [rsi], rax
0x467a94    ret

------> offset: 0x467a92
0x467a92    mov [rsi], eax
0x467a94    ret

------> offset: 0x467ad0
0x467ad0    or [rax], eax
0x467ad2    add dh, dh
0x467ad4    ret

------> offset: 0x467af4
0x467af4    sal dword [rcx], 0x1
0x467af6    rol cl, 0xe9
0x467af9    add esi, esi
0x467afb    ret 0xf304

------> offset: 0x467af6
0x467af6    rol cl, 0xe9
0x467af9    add esi, esi
0x467afb    ret 0xf304

------> offset: 0x467af9
0x467af9    add esi, esi
0x467afb    ret 0xf304

------> offset: 0x467afb
0x467afb    ret 0xf304

------> offset: 0x467b37
0x467b37    push rbx
0x467b38    or [rax-0x77], cl
0x467b3b    fcomp dword [rbx+0x5d]
0x467b3e    pop r12
0x467b40    ret

------> offset: 0x467b38
0x467b38    or [rax-0x77], cl
0x467b3b    fcomp dword [rbx+0x5d]
0x467b3e    pop r12
0x467b40    ret

------> offset: 0x467b71
0x467b71    add al, 0xf6
0x467b73    ret 0x7402

------> offset: 0x467c9d
0x467c9d    adc [rax+0x29], cl
0x467ca0    iret

------> offset: 0x467cd0
0x467cd0    mov ebp, 0xffffffff8b480025
0x467cd5    or [rax-0x7d], cl
0x467cd8    ret

------> offset: 0x467cd2
0x467cd2    add [rax-0x75], cl
0x467cd5    or [rax-0x7d], cl
0x467cd8    ret

------> offset: 0x467cd9
0x467cd9    add [rax+0x39], ecx
0x467cdc    retf

------> offset: 0x467d1a
0x467d1a    or byte [rax+0x4], 0x0
0x467d1e    add [rax-0x7d], cl
0x467d21    ret

------> offset: 0x467d40
0x467d40    mov ebp, 0xffffffff8b480025
0x467d45    or [rax+0x39], cl
0x467d48    retf

------> offset: 0x467d42
0x467d42    add [rax-0x75], cl
0x467d45    or [rax+0x39], cl
0x467d48    retf

------> offset: 0x467e23
0x467e23    cli
0x467e24    dec dword [rax-0x7b]
0x467e27    ror byte [rdi], 0x84
0x467e2a    retf 0x0

------> offset: 0x467e24
0x467e24    dec dword [rax-0x7b]
0x467e27    ror byte [rdi], 0x84
0x467e2a    retf 0x0

------> offset: 0x467e27
0x467e27    ror byte [rdi], 0x84
0x467e2a    retf 0x0

------> offset: 0x467fac
0x467fac    adc ebx, [rbx+0x5d]
0x467faf    pop r12
0x467fb1    pop r13
0x467fb3    pop r14
0x467fb5    ret

------> offset: 0x46800b
0x46800b    cmp rdx, -0x1
0x46800f    cmovnz rax, rdx
0x468013    ret

------> offset: 0x46800c
0x46800c    cmp edx, -0x1
0x46800f    cmovnz rax, rdx
0x468013    ret

------> offset: 0x46800d
0x46800d    cli
0x46800e    dec dword [rax+0xf]
0x468011    ret 0x48c3

------> offset: 0x46800e
0x46800e    dec dword [rax+0xf]
0x468011    ret 0x48c3

------> offset: 0x468042
0x468042    add al, 0x48
0x468044    cmp ecx, [rsi+rdi]
0x468047    jae 0x468001
0x468049    xor eax, eax
0x46804b    ret

------> offset: 0x468043
0x468043    cmp rcx, [rsi+rdi]
0x468047    jae 0x468001
0x468049    xor eax, eax
0x46804b    ret

------> offset: 0x468044
0x468044    cmp ecx, [rsi+rdi]
0x468047    jae 0x468001
0x468049    xor eax, eax
0x46804b    ret

------> offset: 0x468045
0x468045    or al, 0x3e
0x468047    jae 0x468001
0x468049    xor eax, eax
0x46804b    ret

------> offset: 0x468046
0x468046    jae 0x468001
0x468049    xor eax, eax
0x46804b    ret

------> offset: 0x46806b
0x46806b    add [rax], al
0x46806d    add [rax], al
0x46806f    add [rax+0x29], cl
0x468072    ret

------> offset: 0x46806d
0x46806d    add [rax], al
0x46806f    add [rax+0x29], cl
0x468072    ret

------> offset: 0x468081
0x468081    add [r8+0x39], r9b
0x468085    ret

------> offset: 0x46809d
0x46809d    add [rax-0x77], ecx
0x4680a0    adc [r11+0x5d], r11b
0x4680a4    pop r12
0x4680a6    ret

------> offset: 0x46809e
0x46809e    mov [rbp+0x10], rax
0x4680a2    pop rbx
0x4680a3    pop rbp
0x4680a4    pop r12
0x4680a6    ret

------> offset: 0x46809f
0x46809f    mov [rbp+0x10], eax
0x4680a2    pop rbx
0x4680a3    pop rbp
0x4680a4    pop r12
0x4680a6    ret

------> offset: 0x4680a0
0x4680a0    adc [r11+0x5d], r11b
0x4680a4    pop r12
0x4680a6    ret

------> offset: 0x4681bf
0x4681bf    add [rax], al
0x4681c1    mov rax, rbp
0x4681c4    pop rbx
0x4681c5    pop rbp
0x4681c6    pop r12
0x4681c8    ret

------> offset: 0x4681c0
0x4681c0    add [rax-0x77], cl
0x4681c3    call 0x5c87df23
0x4681c8    ret

------> offset: 0x4681c1
0x4681c1    mov rax, rbp
0x4681c4    pop rbx
0x4681c5    pop rbp
0x4681c6    pop r12
0x4681c8    ret

------> offset: 0x4681c2
0x4681c2    mov eax, ebp
0x4681c4    pop rbx
0x4681c5    pop rbp
0x4681c6    pop r12
0x4681c8    ret

------> offset: 0x4681c3
0x4681c3    call 0x5c87df23
0x4681c8    ret

------> offset: 0x46823d
0x46823d    call far dword [rbx+0x48]
0x468240    mov eax, ebp
0x468242    pop rbp
0x468243    pop r12
0x468245    ret

------> offset: 0x46823e
0x46823e    pop rbx
0x46823f    mov rax, rbp
0x468242    pop rbp
0x468243    pop r12
0x468245    ret

------> offset: 0x46823f
0x46823f    mov rax, rbp
0x468242    pop rbp
0x468243    pop r12
0x468245    ret

------> offset: 0x468275
0x468275    add [rax-0x77], cl
0x468278    call 0x5c87dfd8
0x46827d    ret

------> offset: 0x468278
0x468278    call 0x5c87dfd8
0x46827d    ret

------> offset: 0x4682ae
0x4682ae    add [rax], al
0x4682b0    add [rbp-0x17f18a40], al
0x4682b6    retf

------> offset: 0x4682b0
0x4682b0    add [rbp-0x17f18a40], al
0x4682b6    retf

------> offset: 0x4682b2
0x4682b2    sal byte [rbp+0xe], 0xe8
0x4682b6    retf

------> offset: 0x468308
0x468308    retf 0xfffa

------> offset: 0x468348
0x468348    add [rax-0x77], cl
0x46834b    fucomip st0, st0
0x46834d    lahf
0x46834e    retf 0xfffa

------> offset: 0x46834b
0x46834b    fucomip st0, st0
0x46834d    lahf
0x46834e    retf 0xfffa

------> offset: 0x46834d
0x46834d    lahf
0x46834e    retf 0xfffa

------> offset: 0x468395
0x468395    add [rbx+0x258e730d], al
0x46839b    add [rcx], al
0x46839d    pop rbx
0x46839e    ret

------> offset: 0x468396
0x468396    or dword [rip+0x258e73], 0x1
0x46839d    pop rbx
0x46839e    ret

------> offset: 0x46839b
0x46839b    add [rcx], al
0x46839d    pop rbx
0x46839e    ret

------> offset: 0x46839c
0x46839c    add [rbx-0x3d], ebx
0x46839f    mov eax, 0x1
0x4683a4    pop rbx
0x4683a5    ret

------> offset: 0x46839f
0x46839f    mov eax, 0x1
0x4683a4    pop rbx
0x4683a5    ret

------> offset: 0x4683a0
0x4683a0    add [rax], eax
0x4683a2    add [rax], al
0x4683a4    pop rbx
0x4683a5    ret

------> offset: 0x4683a9
0x4683a9    sar bh, 0xff
0x4683ac    call far dword [rbx+0x64]
0x4683af    mov eax, [rax]
0x4683b1    ret

------> offset: 0x4683ac
0x4683ac    call far dword [rbx+0x64]
0x4683af    mov eax, [rax]
0x4683b1    ret

------> offset: 0x4683ad
0x4683ad    pop rbx
0x4683ae    mov eax, [fs:rax]
0x4683b1    ret

------> offset: 0x4683ae
0x4683ae    mov eax, [fs:rax]
0x4683b1    ret

------> offset: 0x4683af
0x4683af    mov eax, [rax]
0x4683b1    ret

------> offset: 0x468499
0x468499    add eax, [rax]
0x46849b    add dh, dh
0x46849d    ret 0x7510

------> offset: 0x4684a2
0x4684a2    retf 0xf610

------> offset: 0x4684cc
0x4684cc    add [rcx], edi
0x4684ce    retf

------> offset: 0x468519
0x468519    push rbx
0x46851a    ret 0xfffa

------> offset: 0x468647
0x468647    mov rax, rbx
0x46864a    add rsp, 0x8
0x46864e    pop rbx
0x46864f    pop rbp
0x468650    ret

------> offset: 0x468648
0x468648    mov eax, ebx
0x46864a    add rsp, 0x8
0x46864e    pop rbx
0x46864f    pop rbp
0x468650    ret

------> offset: 0x4687e1
0x4687e1    dec dword [rax-0x7d]
0x4687e4    retf 0x31ff

------> offset: 0x4687e4
0x4687e4    retf 0x31ff

------> offset: 0x468848
0x468848    fucomip st0, st0
0x46884a    ret 0xffe4

------> offset: 0x46884a
0x46884a    ret 0xffe4

------> offset: 0x468856
0x468856    dec dword [rax+0x69]
0x468859    ret

------> offset: 0x468d32
0x468d32    call 0xffffffff838f3bab
0x468d37    ret

------> offset: 0x468e55
0x468e55    retf 0x8b64

------> offset: 0x468e72
0x468e72    ret 0x2583

------> offset: 0x4690c9
0x4690c9    mov [0x8949c08548fffab6], eax
0x4690d2    ret

------> offset: 0x4690e7
0x4690e7    fisttp word [rax-0x77]
0x4690ea    ret 0x8948

------> offset: 0x469235
0x469235    ret 0x4aad

------> offset: 0x469377
0x469377    retf 0xe672

------> offset: 0x469379
0x469379    out 0x48, al
0x46937b    add esp, 0x8
0x46937e    xor eax, eax
0x469380    pop rbx
0x469381    pop rbp
0x469382    ret

------> offset: 0x4693c8
0x4693c8    or [rax+0x1], bh
0x4693ce    pop rbx
0x4693cf    pop rbp
0x4693d0    ret

------> offset: 0x4693fb
0x4693fb    mov eax, 0xffffffffbf004aaf
0x469400    ret

------> offset: 0x469467
0x469467    add [rax+0xf], al
0x46946a    test [rax], eax
0x46946c    or al, 0x0
0x46946e    add bl, dh
0x469470    ret

------> offset: 0x469468
0x469468    jnz 0x46a06f
0x46946f    ret

------> offset: 0x46946a
0x46946a    test [rax], eax
0x46946c    or al, 0x0
0x46946e    add bl, dh
0x469470    ret

------> offset: 0x46946b
0x46946b    add [rax+rax], cl
0x46946e    add bl, dh
0x469470    ret

------> offset: 0x46946c
0x46946c    or al, 0x0
0x46946e    add bl, dh
0x469470    ret

------> offset: 0x469580
0x469580    pop rdi
0x469581    add [rax], eax
0x469583    add [rax+0x63], cl
0x469586    ret 0x8b48

------> offset: 0x469581
0x469581    add [rax], eax
0x469583    add [rax+0x63], cl
0x469586    ret 0x8b48

------> offset: 0x469583
0x469583    add [rax+0x63], cl
0x469586    ret 0x8b48

------> offset: 0x4698a7
0x4698a7    add [rax-0x7d], cl
0x4698aa    ret 0x4808

------> offset: 0x4698d5
0x4698d5    ror [rax-0x7d], cl
0x4698d8    ret 0x4808

------> offset: 0x4698f2
0x4698f2    popf
0x4698f3    pop rax
0x4698f4    add eax, [rax]
0x4698f6    add [rbp+0x39], cl
0x4698f9    retf

------> offset: 0x4698f3
0x4698f3    pop rax
0x4698f4    add eax, [rax]
0x4698f6    add [rbp+0x39], cl
0x4698f9    retf

------> offset: 0x4698f4
0x4698f4    add eax, [rax]
0x4698f6    add [rbp+0x39], cl
0x4698f9    retf

------> offset: 0x4698f6
0x4698f6    add [rbp+0x39], cl
0x4698f9    retf

------> offset: 0x46993a
0x46993a    adc [rax-0x7d], ecx
0x46993d    ret 0x4808

------> offset: 0x469b1c
0x469b1c    rol byte [rbx], 0x0
0x469b1f    add al, ch
0x469b21    retf

------> offset: 0x469b1d
0x469b1d    add eax, [rax]
0x469b1f    add al, ch
0x469b21    retf

------> offset: 0x469d01
0x469d01    rol byte [rcx], 0x89
0x469d04    ret 0x8348

------> offset: 0x469da2
0x469da2    dec dword [rcx+0xc8b48c1]
0x469da9    retf 0x81f6

------> offset: 0x469da5
0x469da5    ror dword [rax-0x75], 0xc
0x469da9    retf 0x81f6

------> offset: 0x469da9
0x469da9    retf 0x81f6

------> offset: 0x469dc2
0x469dc2    inc dword [rcx-0x77]
0x469dc5    enter 0x8b4e, 0x4
0x469dc9    ret 0xf641

------> offset: 0x469dc5
0x469dc5    enter 0x8b4e, 0x4
0x469dc9    ret 0xf641

------> offset: 0x469f11
0x469f11    test bh, dh
0x469f13    add [rax], al
0x469f15    add [rax-0x77], cl
0x469f18    ret 0x2b49

------> offset: 0x469f12
0x469f12    test dword [rax], 0xffffffff89480000
0x469f18    ret 0x2b49

------> offset: 0x469f13
0x469f13    add [rax], al
0x469f15    add [rax-0x77], cl
0x469f18    ret 0x2b49

------> offset: 0x469f15
0x469f15    add [rax-0x77], cl
0x469f18    ret 0x2b49

------> offset: 0x469f33
0x469f33    add [rax+0x39], cl
0x469f36    iret

------> offset: 0x46a0fa
0x46a0fa    pop rbx
0x46a0fb    mov edi, 0x6c11e0
0x46a100    jmp rax
0x46a102    pop rbx
0x46a103    ret

------> offset: 0x46a0fb
0x46a0fb    mov edi, 0x6c11e0
0x46a100    jmp rax
0x46a102    pop rbx
0x46a103    ret

------> offset: 0x46a0fc
0x46a0fc    loopnz 0x46a10f
0x46a0fe    ins byte [rdi], dx
0x46a0ff    add bh, bh
0x46a101    loopnz 0x46a15e
0x46a103    ret

------> offset: 0x46a0fd
0x46a0fd    adc [rax+rax-0x1], ebp
0x46a101    loopnz 0x46a15e
0x46a103    ret

------> offset: 0x46a0fe
0x46a0fe    ins byte [rdi], dx
0x46a0ff    add bh, bh
0x46a101    loopnz 0x46a15e
0x46a103    ret

------> offset: 0x46a0ff
0x46a0ff    add bh, bh
0x46a101    loopnz 0x46a15e
0x46a103    ret

------> offset: 0x46a100
0x46a100    jmp rax
0x46a102    pop rbx
0x46a103    ret

------> offset: 0x46a101
0x46a101    loopnz 0x46a15e
0x46a103    ret

------> offset: 0x46a112
0x46a112    cli
0x46a113    retf

------> offset: 0x46a51c
0x46a51c    cmp [rcx-0x7d], cl
0x46a51f    ret 0x4908

------> offset: 0x46a5ed
0x46a5ed    fmul qword [rax-0x75]
0x46a5f0    sbb al, 0x24
0x46a5f2    add rsp, 0x30
0x46a5f6    ret

------> offset: 0x46a5ee
0x46a5ee    mov rbx, [rsp]
0x46a5f2    add rsp, 0x30
0x46a5f6    ret

------> offset: 0x46a5ef
0x46a5ef    mov ebx, [rsp]
0x46a5f2    add rsp, 0x30
0x46a5f6    ret

------> offset: 0x46a5f0
0x46a5f0    sbb al, 0x24
0x46a5f2    add rsp, 0x30
0x46a5f6    ret

------> offset: 0x46a5f1
0x46a5f1    and al, 0x48
0x46a5f3    add esp, 0x30
0x46a5f6    ret

------> offset: 0x46a5f2
0x46a5f2    add rsp, 0x30
0x46a5f6    ret

------> offset: 0x46a5f3
0x46a5f3    add esp, 0x30
0x46a5f6    ret

------> offset: 0x46a7b0
0x46a7b0    inc dword [rcx+rcx*4-0x3e]
0x46a7b4    sub edx, ecx
0x46a7b6    mov eax, edx
0x46a7b8    ret

------> offset: 0x46a7b1
0x46a7b1    mov edx, r8d
0x46a7b4    sub edx, ecx
0x46a7b6    mov eax, edx
0x46a7b8    ret

------> offset: 0x46a7b2
0x46a7b2    mov edx, eax
0x46a7b4    sub edx, ecx
0x46a7b6    mov eax, edx
0x46a7b8    ret

------> offset: 0x46a7b3
0x46a7b3    ret 0xca29

------> offset: 0x46a7b4
0x46a7b4    sub edx, ecx
0x46a7b6    mov eax, edx
0x46a7b8    ret

------> offset: 0x46a7b5
0x46a7b5    retf 0xd089

------> offset: 0x46a7c4
0x46a7c4    and al, 0x38
0x46a7c6    ret 0x2875

------> offset: 0x46a7e1
0x46a7e1    movsx edx, al
0x46a7e4    neg edx
0x46a7e6    mov eax, edx
0x46a7e8    ret

------> offset: 0x46a7e4
0x46a7e4    neg edx
0x46a7e6    mov eax, edx
0x46a7e8    ret

------> offset: 0x46a7e7
0x46a7e7    rol bl, 0x1
0x46a7e9    mov edx, 0xffffffffffffffff
0x46a7ee    mov eax, edx
0x46a7f0    ret

------> offset: 0x46a7e9
0x46a7e9    mov edx, 0xffffffffffffffff
0x46a7ee    mov eax, edx
0x46a7f0    ret

------> offset: 0x46a7ed
0x46a7ed    dec dword [rcx-0x3dd63c30]
0x46a7f3    mov eax, edx
0x46a7f5    ret

------> offset: 0x46a7ef
0x46a7ef    rol bl, 0x1
0x46a7f1    sub edx, eax
0x46a7f3    mov eax, edx
0x46a7f5    ret

------> offset: 0x46a7f1
0x46a7f1    sub edx, eax
0x46a7f3    mov eax, edx
0x46a7f5    ret

------> offset: 0x46a7f2
0x46a7f2    ret 0xd089

------> offset: 0x46a7f4
0x46a7f4    rol bl, 0x1
0x46a7f6    mov edx, 0x1
0x46a7fb    mov eax, edx
0x46a7fd    ret

------> offset: 0x46a7f6
0x46a7f6    mov edx, 0x1
0x46a7fb    mov eax, edx
0x46a7fd    ret

------> offset: 0x46a7f7
0x46a7f7    add [rax], eax
0x46a7f9    add [rax], al
0x46a7fb    mov eax, edx
0x46a7fd    ret

------> offset: 0x46a7f9
0x46a7f9    add [rax], al
0x46a7fb    mov eax, edx
0x46a7fd    ret

------> offset: 0x46a83b
0x46a83b    ror dword [rbp-0x74b3ffdb], 0x25
0x46a842    retf 0x258d

------> offset: 0x46a83c
0x46a83c    lea esp, [rip+0x258b4c00]
0x46a842    retf 0x258d

------> offset: 0x46a83d
0x46a83d    and eax, 0x258b4c00
0x46a842    retf 0x258d

------> offset: 0x46a83e
0x46a83e    add [rbx+rcx*4+0x25], cl
0x46a842    retf 0x258d

------> offset: 0x46a842
0x46a842    retf 0x258d

------> offset: 0x46a8f7
0x46a8f7    ror byte [rdi], 0x84
0x46a8fa    ret 0x1

------> offset: 0x46aacb
0x46aacb    add al, 0x0
0x46aacd    add [rcx-0x73], al
0x46aad0    pop rsi
0x46aad1    dec dword [rax+0x63]
0x46aad4    ret

------> offset: 0x46aacd
0x46aacd    add [rcx-0x73], al
0x46aad0    pop rsi
0x46aad1    dec dword [rax+0x63]
0x46aad4    ret

------> offset: 0x46aad0
0x46aad0    pop rsi
0x46aad1    dec dword [rax+0x63]
0x46aad4    ret

------> offset: 0x46ab38
0x46ab38    jz 0x46ab5e
0x46ab3a    sub [rax+0x63], cl
0x46ab3d    ret

------> offset: 0x46ab3a
0x46ab3a    sub [rax+0x63], cl
0x46ab3d    ret

------> offset: 0x46ab72
0x46ab72    shr bl, cl
0x46ab74    or al, 0x83
0x46ab76    ret

------> offset: 0x46ab74
0x46ab74    or al, 0x83
0x46ab76    ret

------> offset: 0x46b06f
0x46b06f    add [rbx], al
0x46b071    add eax, [rax]
0x46b073    add [rcx+rdi*2-0x7d], dh
0x46b077    ret

------> offset: 0x46b071
0x46b071    add eax, [rax]
0x46b073    add [rcx+rdi*2-0x7d], dh
0x46b077    ret

------> offset: 0x46b073
0x46b073    add [rcx+rdi*2-0x7d], dh
0x46b077    ret

------> offset: 0x46b075
0x46b075    jns 0x46affa
0x46b077    ret

------> offset: 0x46b081
0x46b081    ret 0xe7e9

------> offset: 0x46b0ba
0x46b0ba    add [rbx], al
0x46b0bc    add eax, [rax]
0x46b0be    add [rdx+rbp*2-0x7d], dh
0x46b0c2    ret

------> offset: 0x46b0bc
0x46b0bc    add eax, [rax]
0x46b0be    add [rdx+rbp*2-0x7d], dh
0x46b0c2    ret

------> offset: 0x46b0be
0x46b0be    add [rdx+rbp*2-0x7d], dh
0x46b0c2    ret

------> offset: 0x46b0c0
0x46b0c0    push -0x7d
0x46b0c2    ret

------> offset: 0x46b168
0x46b168    lea eax, [rdi-0x1]
0x46b16b    cmp rax, -0x3
0x46b16f    jbe 0x46b178
0x46b171    ret

------> offset: 0x46b169
0x46b169    dec dword [r8-0x7d]
0x46b16d    clc
0x46b16e    std
0x46b16f    jbe 0x46b178
0x46b171    ret

------> offset: 0x46b16a
0x46b16a    dec dword [rax-0x7d]
0x46b16d    clc
0x46b16e    std
0x46b16f    jbe 0x46b178
0x46b171    ret

------> offset: 0x46b16b
0x46b16b    cmp rax, -0x3
0x46b16f    jbe 0x46b178
0x46b171    ret

------> offset: 0x46b16c
0x46b16c    cmp eax, -0x3
0x46b16f    jbe 0x46b178
0x46b171    ret

------> offset: 0x46b16d
0x46b16d    clc
0x46b16e    std
0x46b16f    jbe 0x46b178
0x46b171    ret

------> offset: 0x46b16e
0x46b16e    std
0x46b16f    jbe 0x46b178
0x46b171    ret

------> offset: 0x46b16f
0x46b16f    jbe 0x46b178
0x46b171    ret

------> offset: 0x46b18f
0x46b18f    add [rax], al
0x46b191    add [rax], al
0x46b193    add rsp, 0x8
0x46b197    ret

------> offset: 0x46b217
0x46b217    mov [rbx+0x18], rax
0x46b21b    add rsp, 0x10
0x46b21f    pop rbx
0x46b220    ret

------> offset: 0x46b218
0x46b218    mov [rbx+0x18], eax
0x46b21b    add rsp, 0x10
0x46b21f    pop rbx
0x46b220    ret

------> offset: 0x46b21b
0x46b21b    add rsp, 0x10
0x46b21f    pop rbx
0x46b220    ret

------> offset: 0x46b21c
0x46b21c    add esp, 0x10
0x46b21f    pop rbx
0x46b220    ret

------> offset: 0x46b291
0x46b291    mov [rbx+0x10], rax
0x46b295    add rsp, 0x30
0x46b299    pop rbx
0x46b29a    ret

------> offset: 0x46b292
0x46b292    mov [rbx+0x10], eax
0x46b295    add rsp, 0x30
0x46b299    pop rbx
0x46b29a    ret

------> offset: 0x46b295
0x46b295    add rsp, 0x30
0x46b299    pop rbx
0x46b29a    ret

------> offset: 0x46b296
0x46b296    add esp, 0x30
0x46b299    pop rbx
0x46b29a    ret

------> offset: 0x46b2dd
0x46b2dd    mov [rbx+0x10], rax
0x46b2e1    add rsp, 0x10
0x46b2e5    pop rbx
0x46b2e6    ret

------> offset: 0x46b2de
0x46b2de    mov [rbx+0x10], eax
0x46b2e1    add rsp, 0x10
0x46b2e5    pop rbx
0x46b2e6    ret

------> offset: 0x46b2eb
0x46b2eb    add [rax], al
0x46b2ed    add [rax], al
0x46b2ef    add cl, ch
0x46b2f1    retf

------> offset: 0x46b330
0x46b330    and al, 0x30
0x46b332    add [rbp+0xb], dh
0x46b335    add rsp, 0x48
0x46b339    ret

------> offset: 0x46b331
0x46b331    xor [rax], al
0x46b333    jnz 0x46b340
0x46b335    add rsp, 0x48
0x46b339    ret

------> offset: 0x46b332
0x46b332    add [rbp+0xb], dh
0x46b335    add rsp, 0x48
0x46b339    ret

------> offset: 0x46b333
0x46b333    jnz 0x46b340
0x46b335    add rsp, 0x48
0x46b339    ret

------> offset: 0x46b335
0x46b335    add rsp, 0x48
0x46b339    ret

------> offset: 0x46b336
0x46b336    add esp, 0x48
0x46b339    ret

------> offset: 0x46b35c
0x46b35c    dec dword [rbx+0x480c2444]
0x46b362    add esp, 0x48
0x46b365    ret

------> offset: 0x46b35d
0x46b35d    mov eax, [rsp+0xc]
0x46b361    add rsp, 0x48
0x46b365    ret

------> offset: 0x46b35e
0x46b35e    and al, 0xc
0x46b361    add rsp, 0x48
0x46b365    ret

------> offset: 0x46b360
0x46b360    or al, 0x48
0x46b362    add esp, 0x48
0x46b365    ret

------> offset: 0x46b3c0
0x46b3c0    add rax, [rdx+0x8]
0x46b3c5    add rsp, 0x58
0x46b3c9    ret

------> offset: 0x46b3c2
0x46b3c2    add eax, [rdx+0x8]
0x46b3c5    add rsp, 0x58
0x46b3c9    ret

------> offset: 0x46b3c5
0x46b3c5    add rsp, 0x58
0x46b3c9    ret

------> offset: 0x46b3c6
0x46b3c6    add esp, 0x58
0x46b3c9    ret

------> offset: 0x46b3c8
0x46b3c8    pop rax
0x46b3c9    ret

------> offset: 0x46b3d3
0x46b3d3    add [rbp+0xa], dh
0x46b3d6    xor eax, eax
0x46b3d8    add rsp, 0x58
0x46b3dc    ret

------> offset: 0x46b3d4
0x46b3d4    jnz 0x46b3e0
0x46b3d6    xor eax, eax
0x46b3d8    add rsp, 0x58
0x46b3dc    ret

------> offset: 0x46b3d6
0x46b3d6    xor eax, eax
0x46b3d8    add rsp, 0x58
0x46b3dc    ret

------> offset: 0x46b4ac
0x46b4ac    add [rbp+0x11], dh
0x46b4af    xor eax, eax
0x46b4b1    add rsp, 0x78
0x46b4b5    ret

------> offset: 0x46b4ad
0x46b4ad    jnz 0x46b4c0
0x46b4af    xor eax, eax
0x46b4b1    add rsp, 0x78
0x46b4b5    ret

------> offset: 0x46b4af
0x46b4af    xor eax, eax
0x46b4b1    add rsp, 0x78
0x46b4b5    ret

------> offset: 0x46b4b1
0x46b4b1    add rsp, 0x78
0x46b4b5    ret

------> offset: 0x46b4b2
0x46b4b2    add esp, 0x78
0x46b4b5    ret

------> offset: 0x46b4ea
0x46b4ea    mov rax, [rsp+0x48]
0x46b4ef    add rsp, 0x78
0x46b4f3    ret

------> offset: 0x46b4eb
0x46b4eb    mov eax, [rsp+0x48]
0x46b4ef    add rsp, 0x78
0x46b4f3    ret

------> offset: 0x46b4ec
0x46b4ec    and al, 0x48
0x46b4ef    add rsp, 0x78
0x46b4f3    ret

------> offset: 0x46b564
0x46b564    jnz 0x46b570
0x46b566    xor eax, eax
0x46b568    add rsp, 0x58
0x46b56c    ret

------> offset: 0x46b565
0x46b565    or dh, [rcx]
0x46b567    ror byte [rax-0x7d], 0xc4
0x46b56b    pop rax
0x46b56c    ret

------> offset: 0x46b567
0x46b567    ror byte [rax-0x7d], 0xc4
0x46b56b    pop rax
0x46b56c    ret

------> offset: 0x46b5df
0x46b5df    add ah, [rax+0x48006c1b]
0x46b5e5    add esp, 0x58
0x46b5e8    ret

------> offset: 0x46b5e1
0x46b5e1    sbb ebp, [rax+rax+0x48]
0x46b5e5    add esp, 0x58
0x46b5e8    ret

------> offset: 0x46b5fb
0x46b5fb    call 0x414df0
0x46b600    add rsp, 0x58
0x46b604    ret

------> offset: 0x46b617
0x46b617    add [rax], al
0x46b619    add rax, 0xfffffffffffffff0
0x46b61f    ret

------> offset: 0x46b619
0x46b619    add rax, 0xfffffffffffffff0
0x46b61f    ret

------> offset: 0x46b61a
0x46b61a    add eax, 0xfffffffffffffff0
0x46b61f    ret

------> offset: 0x46b7af
0x46b7af    mov [0x874f03948078b48], al
0x46b7b8    ret

------> offset: 0x46b7b0
0x46b7b0    mov rax, [rdi]
0x46b7b3    cmp rax, rsi
0x46b7b6    jz 0x46b7c0
0x46b7b8    ret

------> offset: 0x46b7b1
0x46b7b1    mov eax, [rdi]
0x46b7b3    cmp rax, rsi
0x46b7b6    jz 0x46b7c0
0x46b7b8    ret

------> offset: 0x46b7b3
0x46b7b3    cmp rax, rsi
0x46b7b6    jz 0x46b7c0
0x46b7b8    ret

------> offset: 0x46b7b4
0x46b7b4    cmp eax, esi
0x46b7b6    jz 0x46b7c0
0x46b7b8    ret

------> offset: 0x46b7b5
0x46b7b5    jz 0x46b7c0
0x46b7b8    ret

------> offset: 0x46b7e4
0x46b7e4    add rsp, 0x8
0x46b7e8    jmp rax
0x46b7ea    pop rax
0x46b7eb    ret

------> offset: 0x46b7e5
0x46b7e5    add esp, 0x8
0x46b7e8    jmp rax
0x46b7ea    pop rax
0x46b7eb    ret

------> offset: 0x46b7e7
0x46b7e7    or bh, bh
0x46b7e9    loopnz 0x46b843
0x46b7eb    ret

------> offset: 0x46b7e8
0x46b7e8    jmp rax
0x46b7ea    pop rax
0x46b7eb    ret

------> offset: 0x46b7e9
0x46b7e9    loopnz 0x46b843
0x46b7eb    ret

------> offset: 0x46b80b
0x46b80b    add byte [rax], 0x0
0x46b80e    add [rax], al
0x46b810    mov rax, [rax+0x8]
0x46b814    ret

------> offset: 0x46b80c
0x46b80c    add [rax], al
0x46b80e    add [rax], al
0x46b810    mov rax, [rax+0x8]
0x46b814    ret

------> offset: 0x46b80e
0x46b80e    add [rax], al
0x46b810    mov rax, [rax+0x8]
0x46b814    ret

------> offset: 0x46b810
0x46b810    mov rax, [rax+0x8]
0x46b814    ret

------> offset: 0x46b811
0x46b811    mov eax, [rax+0x8]
0x46b814    ret

------> offset: 0x46b824
0x46b824    sub rax, [fs:0x0]
0x46b82d    ret

------> offset: 0x46b825
0x46b825    sub rax, [0x0]
0x46b82d    ret

------> offset: 0x46b826
0x46b826    sub eax, [0x0]
0x46b82d    ret

------> offset: 0x46b94c
0x46b94c    sar rax, 0x3f
0x46b950    not eax
0x46b952    and eax, ecx
0x46b954    ret

------> offset: 0x46b94d
0x46b94d    sar eax, 0x3f
0x46b950    not eax
0x46b952    and eax, ecx
0x46b954    ret

------> offset: 0x46b950
0x46b950    not eax
0x46b952    and eax, ecx
0x46b954    ret

------> offset: 0x46b952
0x46b952    and eax, ecx
0x46b954    ret

------> offset: 0x46b96e
0x46b96e    ret 0x2148

------> offset: 0x46b97a
0x46b97a    jg 0x46b9c5
0x46b97d    sub eax, edx
0x46b97f    shr rax, 0x3f
0x46b983    ret

------> offset: 0x46b97c
0x46b97c    sub rax, rdx
0x46b97f    shr rax, 0x3f
0x46b983    ret

------> offset: 0x46b97d
0x46b97d    sub eax, edx
0x46b97f    shr rax, 0x3f
0x46b983    ret

------> offset: 0x46b97f
0x46b97f    shr rax, 0x3f
0x46b983    ret

------> offset: 0x46b980
0x46b980    shr eax, 0x3f
0x46b983    ret

------> offset: 0x46b9ba
0x46b9ba    jg 0x46b9bc
0x46b9bc    add [rcx], cl
0x46b9be    ret 0xd089

------> offset: 0x46b9bc
0x46b9bc    add [rcx], cl
0x46b9be    ret 0xd089

------> offset: 0x46b9ca
0x46b9ca    sar eax, 0x1f
0x46b9cd    sub edx, ecx
0x46b9cf    not eax
0x46b9d1    and eax, edx
0x46b9d3    ret

------> offset: 0x46b9cd
0x46b9cd    sub edx, ecx
0x46b9cf    not eax
0x46b9d1    and eax, edx
0x46b9d3    ret

------> offset: 0x46b9ce
0x46b9ce    retf 0xd0f7

------> offset: 0x46b9cf
0x46b9cf    not eax
0x46b9d1    and eax, edx
0x46b9d3    ret

------> offset: 0x46b9d1
0x46b9d1    and eax, edx
0x46b9d3    ret

------> offset: 0x46b9ff
0x46b9ff    fimul dword [rcx]
0x46ba01    ret 0xb70f

------> offset: 0x46ba09
0x46ba09    ret 0xfeb8

------> offset: 0x46ba0d
0x46ba0d    add [rax], al
0x46ba0f    sub eax, edx
0x46ba11    sar eax, 0x10
0x46ba14    ret

------> offset: 0x46ba0f
0x46ba0f    sub eax, edx
0x46ba11    sar eax, 0x10
0x46ba14    ret

------> offset: 0x46ba11
0x46ba11    sar eax, 0x10
0x46ba14    ret

------> offset: 0x46ba43
0x46ba43    add [rax], al
0x46ba45    add [rax-0x3f], cl
0x46ba48    retf 0x6411

------> offset: 0x46ba45
0x46ba45    add [rax-0x3f], cl
0x46ba48    retf 0x6411

------> offset: 0x46ba48
0x46ba48    retf 0x6411

------> offset: 0x46ba99
0x46ba99    rcr dword [rcx], 0xc0
0x46ba9c    and eax, 0x2
0x46ba9f    sub eax, 0x1
0x46baa2    ret

------> offset: 0x46ba9a
0x46ba9a    sbb eax, eax
0x46ba9c    and eax, 0x2
0x46ba9f    sub eax, 0x1
0x46baa2    ret

------> offset: 0x46ba9b
0x46ba9b    rol byte [rbx-0x177cfd20], 0x1
0x46baa2    ret

------> offset: 0x46ba9c
0x46ba9c    and eax, 0x2
0x46ba9f    sub eax, 0x1
0x46baa2    ret

------> offset: 0x46ba9d
0x46ba9d    loopnz 0x46baa1
0x46ba9f    sub eax, 0x1
0x46baa2    ret

------> offset: 0x46baa1
0x46baa1    add ebx, eax
0x46baa3    nop dword [rax+rax+0x0]
0x46baa8    xor eax, eax
0x46baaa    ret

------> offset: 0x46bb59
0x46bb59    adc [rcx+0x29], cl
0x46bb5c    ret

------> offset: 0x46bb8a
0x46bb8a    fmul qword [rax+0xf]
0x46bb8d    ret 0x8948

------> offset: 0x46bc31
0x46bc31    retf 0x877

------> offset: 0x46bcb8
0x46bcb8    cqo
0x46bcba    pop r14
0x46bcbc    idiv r9
0x46bcbf    pop r15
0x46bcc1    ret

------> offset: 0x46bcb9
0x46bcb9    cdq
0x46bcba    pop r14
0x46bcbc    idiv r9
0x46bcbf    pop r15
0x46bcc1    ret

------> offset: 0x46bcba
0x46bcba    pop r14
0x46bcbc    idiv r9
0x46bcbf    pop r15
0x46bcc1    ret

------> offset: 0x46bcbb
0x46bcbb    pop rsi
0x46bcbc    idiv r9
0x46bcbf    pop r15
0x46bcc1    ret

------> offset: 0x46bcbc
0x46bcbc    idiv r9
0x46bcbf    pop r15
0x46bcc1    ret

------> offset: 0x46bcbd
0x46bcbd    idiv ecx
0x46bcbf    pop r15
0x46bcc1    ret

------> offset: 0x46bcbe
0x46bcbe    stc
0x46bcbf    pop r15
0x46bcc1    ret

------> offset: 0x46bd12
0x46bd12    or [rax-0x73], cl
0x46bd15    ins byte [rdi], dx
0x46bd16    retf 0x45f0

------> offset: 0x46bd15
0x46bd15    ins byte [rdi], dx
0x46bd16    retf 0x45f0

------> offset: 0x46bd16
0x46bd16    retf 0x45f0

------> offset: 0x46bd67
0x46bd67    retf 0xf749

------> offset: 0x46bd7b
0x46bd7b    add [rax], al
0x46bd7d    add [rax], al
0x46bd7f    add [rax+0x39], cl
0x46bd82    retf 0xa77

------> offset: 0x46bd7d
0x46bd7d    add [rax], al
0x46bd7f    add [rax+0x39], cl
0x46bd82    retf 0xa77

------> offset: 0x46bd7f
0x46bd7f    add [rax+0x39], cl
0x46bd82    retf 0xa77

------> offset: 0x46bd82
0x46bd82    retf 0xa77

------> offset: 0x46bd8c
0x46bd8c    retf 0x1075

------> offset: 0x46bdc6
0x46bdc6    loopnz 0x46be09
0x46bdc8    pop rsp
0x46bdc9    pop r13
0x46bdcb    pop r14
0x46bdcd    pop r15
0x46bdcf    ret

------> offset: 0x46be11
0x46be11    dec dword [rax+0x29]
0x46be14    ret 0x8948

------> offset: 0x46beb2
0x46beb2    retf 0xb441

------> offset: 0x46bf82
0x46bf82    adc bl, ch
0x46bf84    jno 0x46bfcf
0x46bf86    shl ecx, cl
0x46bf88    mov [rdi], r9
0x46bf8b    ret

------> offset: 0x46bf83
0x46bf83    jmp 0x46bff6
0x46bf85    shl r9, cl
0x46bf88    mov [rdi], r9
0x46bf8b    ret

------> offset: 0x46bf84
0x46bf84    jno 0x46bfcf
0x46bf86    shl ecx, cl
0x46bf88    mov [rdi], r9
0x46bf8b    ret

------> offset: 0x46bf85
0x46bf85    shl r9, cl
0x46bf88    mov [rdi], r9
0x46bf8b    ret

------> offset: 0x46bf86
0x46bf86    shl ecx, cl
0x46bf88    mov [rdi], r9
0x46bf8b    ret

------> offset: 0x46bf87
0x46bf87    loopz 0x46bfd5
0x46bf89    mov [rdi], ecx
0x46bf8b    ret

------> offset: 0x46bf88
0x46bf88    mov [rdi], r9
0x46bf8b    ret

------> offset: 0x46bfb4
0x46bfb4    mov [rdi], eax
0x46bfb6    shl r9, cl
0x46bfb9    mov [rdi-0x8], r9
0x46bfbd    ret

------> offset: 0x46bfb6
0x46bfb6    shl r9, cl
0x46bfb9    mov [rdi-0x8], r9
0x46bfbd    ret

------> offset: 0x46bfb7
0x46bfb7    shl ecx, cl
0x46bfb9    mov [rdi-0x8], r9
0x46bfbd    ret

------> offset: 0x46bfb8
0x46bfb8    loopz 0x46c006
0x46bfba    mov [rdi-0x8], ecx
0x46bfbd    ret

------> offset: 0x46bfb9
0x46bfb9    mov [rdi-0x8], r9
0x46bfbd    ret

------> offset: 0x46bfdf
0x46bfdf    add [rbp+0xf], cl
0x46bfe2    movsd
0x46bfe3    ret

------> offset: 0x46bfe2
0x46bfe2    movsd
0x46bfe3    ret

------> offset: 0x46c029
0x46c029    clc
0x46c02b    shl r9, cl
0x46c02e    mov [rdi-0x10], r9
0x46c032    ret

------> offset: 0x46c02b
0x46c02b    shl r9, cl
0x46c02e    mov [rdi-0x10], r9
0x46c032    ret

------> offset: 0x46c02c
0x46c02c    shl ecx, cl
0x46c02e    mov [rdi-0x10], r9
0x46c032    ret

------> offset: 0x46c02d
0x46c02d    loopz 0x46c07b
0x46c02f    mov [rdi-0x10], ecx
0x46c032    ret

------> offset: 0x46c02e
0x46c02e    mov [rdi-0x10], r9
0x46c032    ret

------> offset: 0x46c02f
0x46c02f    mov [rdi-0x10], ecx
0x46c032    ret

------> offset: 0x46c08c
0x46c08c    jmp 0x46c106
0x46c08f    shr r9, cl
0x46c092    mov [rdi], r9
0x46c095    ret

------> offset: 0x46c08e
0x46c08e    ja 0x46c0d9
0x46c090    shr ecx, cl
0x46c092    mov [rdi], r9
0x46c095    ret

------> offset: 0x46c08f
0x46c08f    shr r9, cl
0x46c092    mov [rdi], r9
0x46c095    ret

------> offset: 0x46c090
0x46c090    shr ecx, cl
0x46c092    mov [rdi], r9
0x46c095    ret

------> offset: 0x46c0be
0x46c0be    mov [rdi], eax
0x46c0c0    shr r9, cl
0x46c0c3    mov [rdi+0x8], r9
0x46c0c7    ret

------> offset: 0x46c0c0
0x46c0c0    shr r9, cl
0x46c0c3    mov [rdi+0x8], r9
0x46c0c7    ret

------> offset: 0x46c0c1
0x46c0c1    shr ecx, cl
0x46c0c3    mov [rdi+0x8], r9
0x46c0c7    ret

------> offset: 0x46c0c2
0x46c0c2    jmp 0x8964a13
0x46c0c7    ret

------> offset: 0x46c0c3
0x46c0c3    mov [rdi+0x8], r9
0x46c0c7    ret

------> offset: 0x46c0c4
0x46c0c4    mov [rdi+0x8], ecx
0x46c0c7    ret

------> offset: 0x46c0ef
0x46c0ef    add [rbp+0xf], cl
0x46c0f2    lodsd
0x46c0f3    ret

------> offset: 0x46c0f2
0x46c0f2    lodsd
0x46c0f3    ret

------> offset: 0x46c139
0x46c139    or [r9-0x2d], r9b
0x46c13d    jmp 0x10964a8e
0x46c142    ret

------> offset: 0x46c13a
0x46c13a    or [rcx-0x2d], cl
0x46c13d    jmp 0x10964a8e
0x46c142    ret

------> offset: 0x46c13b
0x46c13b    shr r9, cl
0x46c13e    mov [rdi+0x10], r9
0x46c142    ret

------> offset: 0x46c13c
0x46c13c    shr ecx, cl
0x46c13e    mov [rdi+0x10], r9
0x46c142    ret

------> offset: 0x46c13d
0x46c13d    jmp 0x10964a8e
0x46c142    ret

------> offset: 0x46c13e
0x46c13e    mov [rdi+0x10], r9
0x46c142    ret

------> offset: 0x46c33a
0x46c33a    ror dword [rbp+0x1], 0x1
0x46c33d    retf 0x8b48

------> offset: 0x46c444
0x46c444    adc cl, [rax+0x1]
0x46c447    ror byte [rax+0x39], 0x1
0x46c44a    ret 0x8949

------> offset: 0x46c447
0x46c447    ror byte [rax+0x39], 0x1
0x46c44a    ret 0x8949

------> offset: 0x46c491
0x46c491    xor ecx, [rax+0x39]
0x46c494    ret

------> offset: 0x46c4a9
0x46c4a9    mov [gs:rbx+rcx*4+0x75], cl
0x46c4ae    test al, 0xe9
0x46c4b0    retf 0xfffd

------> offset: 0x46c4aa
0x46c4aa    mov [rbx+rcx*4+0x75], cl
0x46c4ae    test al, 0xe9
0x46c4b0    retf 0xfffd

------> offset: 0x46c4ae
0x46c4ae    test al, 0xe9
0x46c4b0    retf 0xfffd

------> offset: 0x46c551
0x46c551    fisttp dword [rax-0x77]
0x46c554    ret

------> offset: 0x46c56b
0x46c56b    fisttp dword [rcx-0x77]
0x46c56e    ret 0x8b4a

------> offset: 0x46c56e
0x46c56e    ret 0x8b4a

------> offset: 0x46c5ae
0x46c5ae    adc [rax+0x1], cl
0x46c5b1    ret

------> offset: 0x46c5eb
0x46c5eb    ret 0x894e

------> offset: 0x46c5ef
0x46c5ef    fisttp word [rax]
0x46c5f1    add rdx, r8
0x46c5f4    mov rax, rdx
0x46c5f7    pop rbx
0x46c5f8    ret

------> offset: 0x46c5f0
0x46c5f0    or [rcx+rax-0x3e], cl
0x46c5f4    mov rax, rdx
0x46c5f7    pop rbx
0x46c5f8    ret

------> offset: 0x46c5f1
0x46c5f1    add rdx, r8
0x46c5f4    mov rax, rdx
0x46c5f7    pop rbx
0x46c5f8    ret

------> offset: 0x46c5f2
0x46c5f2    add edx, eax
0x46c5f4    mov rax, rdx
0x46c5f7    pop rbx
0x46c5f8    ret

------> offset: 0x46c5f4
0x46c5f4    mov rax, rdx
0x46c5f7    pop rbx
0x46c5f8    ret

------> offset: 0x46c691
0x46c691    add bl, ch
0x46c693    retf 0x1f0f

------> offset: 0x46c92f
0x46c92f    ror byte [rax+0x39], 0x1
0x46c932    ret 0x8948

------> offset: 0x46c9ac
0x46c9ac    add [rax+0x39], ecx
0x46c9b0    ret 0x8948

------> offset: 0x46cbe5
0x46cbe5    ror [rax-0x7d], cl
0x46cbe8    in al, dx
0x46cbe9    cmp dh, dh
0x46cbeb    ret 0x7401

------> offset: 0x46cbe8
0x46cbe8    in al, dx
0x46cbe9    cmp dh, dh
0x46cbeb    ret 0x7401

------> offset: 0x46cbe9
0x46cbe9    cmp dh, dh
0x46cbeb    ret 0x7401

------> offset: 0x46cecc
0x46cecc    add [rax-0x77], cl
0x46cecf    dec byte [rax-0x77]
0x46ced2    ret 0x8948

------> offset: 0x46cecf
0x46cecf    dec byte [rax-0x77]
0x46ced2    ret 0x8948

------> offset: 0x46cf66
0x46cf66    and eax, -0x10
0x46cf69    call 0x46c700
0x46cf6e    leave
0x46cf6f    ret

------> offset: 0x46cf67
0x46cf67    loopnz 0x46cf59
0x46cf69    call 0x46c700
0x46cf6e    leave
0x46cf6f    ret

------> offset: 0x46cf68
0x46cf68    call 0x46c700
0x46cf6e    leave
0x46cf6f    ret

------> offset: 0x46cf6a
0x46cf6a    xchg edx, eax
0x46cf6b    idiv edi
0x46cf6d    dec ecx
0x46cf6f    ret

------> offset: 0x46cf6b
0x46cf6b    idiv edi
0x46cf6d    dec ecx
0x46cf6f    ret

------> offset: 0x46cf6d
0x46cf6d    dec ecx
0x46cf6f    ret

------> offset: 0x46cf70
0x46cf70    call 0x46c600
0x46cf75    leave
0x46cf76    ret

------> offset: 0x46cf72
0x46cf72    idiv bh
0x46cf74    dec ecx
0x46cf76    ret

------> offset: 0x46cf86
0x46cf86    retf 0x77f

------> offset: 0x46cf87
0x46cf87    jg 0x46cf90
0x46cf89    call 0x46caf0
0x46cf8e    leave
0x46cf8f    ret

------> offset: 0x46cf89
0x46cf89    call 0x46caf0
0x46cf8e    leave
0x46cf8f    ret

------> offset: 0x46cfa4
0x46cfa4    and ecx, -0x10
0x46cfa7    call 0x46cbd0
0x46cfac    leave
0x46cfad    ret

------> offset: 0x46cfa5
0x46cfa5    loopz 0x46cf97
0x46cfa7    call 0x46cbd0
0x46cfac    leave
0x46cfad    ret

------> offset: 0x46cfa6
0x46cfa6    call 0x46cbd0
0x46cfac    leave
0x46cfad    ret

------> offset: 0x46cfc0
0x46cfc0    push rsp
0x46cfc1    retf 0x48f8

------> offset: 0x46cfc1
0x46cfc1    retf 0x48f8

------> offset: 0x46d003
0x46d003    mov [rdi+0x8], r10
0x46d007    mov eax, ecx
0x46d009    adc eax, eax
0x46d00b    ret

------> offset: 0x46d004
0x46d004    mov [rdi+0x8], edx
0x46d007    mov eax, ecx
0x46d009    adc eax, eax
0x46d00b    ret

------> offset: 0x46d007
0x46d007    mov eax, ecx
0x46d009    adc eax, eax
0x46d00b    ret

------> offset: 0x46d009
0x46d009    adc eax, eax
0x46d00b    ret

------> offset: 0x46d017
0x46d017    retf 0x4de8

------> offset: 0x46d01c
0x46d01c    fimul dword [rcx+rcx*4+0x54]
0x46d020    iret

------> offset: 0x46d01f
0x46d01f    push rsp
0x46d020    iret

------> offset: 0x46d029
0x46d029    pop rsp
0x46d02a    retf 0x4df0

------> offset: 0x46d02a
0x46d02a    retf 0x4df0

------> offset: 0x46d02e
0x46d02e    enter 0x894c, 0x44
0x46d032    iret

------> offset: 0x46d03b
0x46d03b    retf 0x4df8

------> offset: 0x46d04d
0x46d04d    retf 0x194d

------> offset: 0x46d050
0x46d050    enter 0x894c, 0x4
0x46d054    iret

------> offset: 0x46d0dc
0x46d0dc    fimul word [rbp+0x11]
0x46d0df    retf

------> offset: 0x46d11c
0x46d11c    ret 0x114d

------> offset: 0x46d137
0x46d137    add [rbx+rcx*4+0x57], cl
0x46d13b    or [rcx+0x29], cl
0x46d13e    ret 0x894c

------> offset: 0x46d13a
0x46d13a    push rdi
0x46d13b    or [rcx+0x29], cl
0x46d13e    ret 0x894c

------> offset: 0x46d13b
0x46d13b    or [rcx+0x29], cl
0x46d13e    ret 0x894c

------> offset: 0x46d141
0x46d141    push rdi
0x46d142    or [rcx-0x2feeb728], cl
0x46d148    pop rbp
0x46d149    pop rbx
0x46d14a    ret

------> offset: 0x46d142
0x46d142    or [rcx-0x2feeb728], cl
0x46d148    pop rbp
0x46d149    pop rbx
0x46d14a    ret

------> offset: 0x46d143
0x46d143    mov eax, ebx
0x46d145    adc rax, rdx
0x46d148    pop rbp
0x46d149    pop rbx
0x46d14a    ret

------> offset: 0x46d144
0x46d144    fmul dword [rax+0x11]
0x46d147    rcr byte [rbp+0x5b], 0x1
0x46d14a    ret

------> offset: 0x46d145
0x46d145    adc rax, rdx
0x46d148    pop rbp
0x46d149    pop rbx
0x46d14a    ret

------> offset: 0x46d146
0x46d146    adc eax, edx
0x46d148    pop rbp
0x46d149    pop rbx
0x46d14a    ret

------> offset: 0x46d147
0x46d147    rcr byte [rbp+0x5b], 0x1
0x46d14a    ret

------> offset: 0x46d148
0x46d148    pop rbp
0x46d149    pop rbx
0x46d14a    ret

------> offset: 0x46d1af
0x46d1af    mov [rdi], esi
0x46d1b1    mov eax, 0x1
0x46d1b6    mov [rdx], ecx
0x46d1b8    ret

------> offset: 0x46d1b1
0x46d1b1    mov eax, 0x1
0x46d1b6    mov [rdx], ecx
0x46d1b8    ret

------> offset: 0x46d1b2
0x46d1b2    add [rax], eax
0x46d1b4    add [rax], al
0x46d1b6    mov [rdx], ecx
0x46d1b8    ret

------> offset: 0x46d1b4
0x46d1b4    add [rax], al
0x46d1b6    mov [rdx], ecx
0x46d1b8    ret

------> offset: 0x46d1cc
0x46d1cc    mov [rdi], rax
0x46d1d0    mov eax, 0x1
0x46d1d5    ret

------> offset: 0x46d1ce
0x46d1ce    mov [rdi], eax
0x46d1d0    mov eax, 0x1
0x46d1d5    ret

------> offset: 0x46d261
0x46d261    sub eax, eax
0x46d263    mov [rdx], eax
0x46d265    mov eax, 0x1
0x46d26a    ret

------> offset: 0x46d263
0x46d263    mov [rdx], eax
0x46d265    mov eax, 0x1
0x46d26a    ret

------> offset: 0x46d264
0x46d264    add bh, [rax+0x1]
0x46d26a    ret

------> offset: 0x46d57f
0x46d57f    and cl, [rax-0x39]
0x46d582    ret 0xfffe

------> offset: 0x46d60e
0x46d60e    test ebp, eax
0x46d610    adc eax, 0x39480000
0x46d615    retf

------> offset: 0x46d610
0x46d610    adc eax, 0x39480000
0x46d615    retf

------> offset: 0x46d671
0x46d671    or byte [rbp+0xfd04144], 0xb6
0x46d678    retf

------> offset: 0x46d849
0x46d849    retf 0x3c80

------> offset: 0x46da54
0x46da54    test [rax-0x7c000002], eax
0x46da5a    ret 0x8908

------> offset: 0x46db67
0x46db67    add dh, al
0x46db69    add al, 0x6
0x46db6b    add [rax-0x7d], ecx
0x46db6e    ret 0xf01

------> offset: 0x46db69
0x46db69    add al, 0x6
0x46db6b    add [rax-0x7d], ecx
0x46db6e    ret 0xf01

------> offset: 0x46db6b
0x46db6b    add [rax-0x7d], ecx
0x46db6e    ret 0xf01

------> offset: 0x46ddae
0x46ddae    or [rdi+rcx-0x4a], al
0x46ddb2    xor [rcx-0x7d], cl
0x46ddb5    ret 0x4401

------> offset: 0x46ddb2
0x46ddb2    xor [rcx-0x7d], cl
0x46ddb5    ret 0x4401

------> offset: 0x46ddb5
0x46ddb5    ret 0x4401

------> offset: 0x46e5a9
0x46e5a9    retf 0x1f

------> offset: 0x46e612
0x46e612    adc [rdi], cl
0x46e614    test [rax+rdi*8-0x1], cl
0x46e618    dec dword [rax-0x77]
0x46e61b    retf

------> offset: 0x46e614
0x46e614    test [rax+rdi*8-0x1], cl
0x46e618    dec dword [rax-0x77]
0x46e61b    retf

------> offset: 0x46e657
0x46e657    or [rdi+rcx-0x4a], al
0x46e65b    xor [rcx-0x7d], cl
0x46e65e    ret 0xe901

------> offset: 0x46e65b
0x46e65b    xor [rcx-0x7d], cl
0x46e65e    ret 0xe901

------> offset: 0x46e65f
0x46e65f    add ecx, ebp
0x46e661    retf

------> offset: 0x46e6eb
0x46e6eb    add ecx, [rcx-0x7d]
0x46e6ee    ret 0x4101

------> offset: 0x46e72e
0x46e72e    add [rdi], cl
0x46e730    xchg [rcx], ebx
0x46e732    xor al, [rax]
0x46e734    add [rax-0x7d], cl
0x46e737    ret

------> offset: 0x46e730
0x46e730    xchg [rcx], ebx
0x46e732    xor al, [rax]
0x46e734    add [rax-0x7d], cl
0x46e737    ret

------> offset: 0x46e732
0x46e732    xor al, [rax]
0x46e734    add [rax-0x7d], cl
0x46e737    ret

------> offset: 0x46e85f
0x46e85f    cmp cl, ch
0x46e861    retf

------> offset: 0x46e9f7
0x46e9f7    or [rdi+rcx-0x4a], al
0x46e9fb    xor [rcx-0x7d], cl
0x46e9fe    ret 0x4101

------> offset: 0x46e9fb
0x46e9fb    xor [rcx-0x7d], cl
0x46e9fe    ret 0x4101

------> offset: 0x46eaf6
0x46eaf6    ret 0xe181

------> offset: 0x46eebe
0x46eebe    mov esp, 0xffffffff8300001a
0x46eec3    ret 0x8308

------> offset: 0x46f077
0x46f077    add ebx, ebp
0x46f079    ret 0x9d8b

------> offset: 0x46f079
0x46f079    ret 0x9d8b

------> offset: 0x46f1d7
0x46f1d7    dec dword [rcx-0x77]
0x46f1da    ret 0x8b48

------> offset: 0x46f3a8
0x46f3a8    pop rsp
0x46f3a9    in eax, 0xff
0x46f3ab    dec dword [rax-0x39]
0x46f3ae    ret 0xffc0

------> offset: 0x46f3a9
0x46f3a9    in eax, 0xff
0x46f3ab    dec dword [rax-0x39]
0x46f3ae    ret 0xffc0

------> offset: 0x46f4d2
0x46f4d2    ret 0xffeb

------> offset: 0x46f5cb
0x46f5cb    adc eax, 0xffffffff83480000
0x46f5d0    ret

------> offset: 0x46f844
0x46f844    sar ch, 0xff
0x46f847    dec dword [rax-0x7d]
0x46f84a    ret

------> offset: 0x46fea2
0x46fea2    adc eax, [eax]
0x46fea5    add [rax-0x77], cl
0x46fea8    ror byte [rax-0x7d], 0x1
0x46feab    ret

------> offset: 0x46fea3
0x46fea3    adc eax, [rax]
0x46fea5    add [rax-0x77], cl
0x46fea8    ror byte [rax-0x7d], 0x1
0x46feab    ret

------> offset: 0x46fea5
0x46fea5    add [rax-0x77], cl
0x46fea8    ror byte [rax-0x7d], 0x1
0x46feab    ret

------> offset: 0x46fee2
0x46fee2    dec dword [rcx-0x77]
0x46fee5    ret 0x6e9

------> offset: 0x46fee5
0x46fee5    ret 0x6e9

------> offset: 0x4702a3
0x4702a3    rol [rbp-0x7b], cl
0x4702a6    ror byte [rdi], 0x9f
0x4702a9    ret 0x9529

------> offset: 0x4702a6
0x4702a6    ror byte [rdi], 0x9f
0x4702a9    ret 0x9529

------> offset: 0x4702a8
0x4702a8    lahf
0x4702a9    ret 0x9529

------> offset: 0x4702a9
0x4702a9    ret 0x9529

------> offset: 0x47085c
0x47085c    ret 0x11

------> offset: 0x470984
0x470984    in eax, 0xff
0x470986    dec dword [rax-0x7d]
0x470989    ret 0xeb08

------> offset: 0x470986
0x470986    dec dword [rax-0x7d]
0x470989    ret 0xeb08

------> offset: 0x470989
0x470989    ret 0xeb08

------> offset: 0x470d0b
0x470d0b    stc
0x470d0c    retf

------> offset: 0x470e81
0x470e81    add [rbp+0x7e850fc0], al
0x470e87    retf 0xffff

------> offset: 0x470e95
0x470e95    outs dx, dword [rsi]
0x470e96    retf 0xffff

------> offset: 0x470e9b
0x470e9b    add [rax], al
0x470e9d    add cl, ch
0x470e9f    retf 0xffff

------> offset: 0x470e9d
0x470e9d    add cl, ch
0x470e9f    retf 0xffff

------> offset: 0x470ffb
0x470ffb    adc al, 0x83
0x470ffd    ret 0x8308

------> offset: 0x471201
0x471201    cmp [rbp-0x77], cl
0x471204    iret

------> offset: 0x471212
0x471212    fsub st1, st0
0x471214    int1
0x471215    ret 0xffff

------> offset: 0x471214
0x471214    int1
0x471215    ret 0xffff

------> offset: 0x471410
0x471410    push rax
0x471411    fcos
0x471413    dec dword [rax-0x7d]
0x471416    ret 0xeb08

------> offset: 0x471411
0x471411    fcos
0x471413    dec dword [rax-0x7d]
0x471416    ret 0xeb08

------> offset: 0x471506
0x471506    jmp 0x471507
0x471508    dec dword [rax-0x7d]
0x47150b    ret 0xeb08

------> offset: 0x47168f
0x47168f    ret 0x5ce9

------> offset: 0x4716ee
0x4716ee    ret 0xfde9

------> offset: 0x471856
0x471856    ins byte [rdi], dx
0x471857    retf

------> offset: 0x471945
0x471945    add [rax], al
0x471947    add [rax-0x7d], cl
0x47194a    ret 0xeb08

------> offset: 0x471947
0x471947    add [rax-0x7d], cl
0x47194a    ret 0xeb08

------> offset: 0x471b42
0x471b42    add [rcx-0x77], cl
0x471b45    fmul dword [rcx-0x77]
0x471b48    ret

------> offset: 0x471b45
0x471b45    fmul dword [rcx-0x77]
0x471b48    ret

------> offset: 0x471d02
0x471d02    retf 0xf9b8

------> offset: 0x47210b
0x47210b    test [rdx], ebp
0x47210d    fcos
0x47210f    dec dword [rax-0x39]
0x472112    ret 0xffc0

------> offset: 0x47210d
0x47210d    fcos
0x47210f    dec dword [rax-0x39]
0x472112    ret 0xffc0

------> offset: 0x4721fe
0x4721fe    test [rdi-0x1600002f], al
0x472204    pop rdx
0x472205    ret

------> offset: 0x472354
0x472354    add dword [rax], 0xffffffff83480000
0x47235a    ret

------> offset: 0x472397
0x472397    dec dword [rax-0x77]
0x47239a    dec byte [rax-0x77]
0x47239d    iret

------> offset: 0x47239a
0x47239a    dec byte [rax-0x77]
0x47239d    iret

------> offset: 0x47263e
0x47263e    add [rax], al
0x472640    add cl, ch
0x472642    ret 0xffb2

------> offset: 0x472640
0x472640    add cl, ch
0x472642    ret 0xffb2

------> offset: 0x472642
0x472642    ret 0xffb2

------> offset: 0x4726fe
0x4726fe    mov r14b, 0xff
0x472701    dec dword [rax-0x39]
0x472704    ret 0xffc0

------> offset: 0x4726ff
0x4726ff    mov dh, 0xff
0x472701    dec dword [rax-0x39]
0x472704    ret 0xffc0

------> offset: 0x4727d6
0x4727d6    jmp 0x4727e7
0x4727d8    xchg eax, ebp
0x4727da    or al, 0x0
0x4727dc    add [rax-0x7d], cl
0x4727df    ret

------> offset: 0x4727d8
0x4727d8    xchg eax, ebp
0x4727da    or al, 0x0
0x4727dc    add [rax-0x7d], cl
0x4727df    ret

------> offset: 0x4727da
0x4727da    or al, 0x0
0x4727dc    add [rax-0x7d], cl
0x4727df    ret

------> offset: 0x4728f2
0x4728f2    retf 0xfec5

------> offset: 0x47295c
0x47295c    ror byte [rdi], 0x84
0x47295f    iret

------> offset: 0x4729ce
0x4729ce    fisttp qword [rcx-0x7c09ce35]
0x4729d4    ret

------> offset: 0x472bdc
0x472bdc    xor [rcx+0xf], al
0x472bdf    mov dh, 0x45
0x472be1    add [rax-0x7d], cl
0x472be4    ret

------> offset: 0x472bdf
0x472bdf    mov dh, 0x45
0x472be1    add [rax-0x7d], cl
0x472be4    ret

------> offset: 0x472be0
0x472be0    add [r8-0x7d], r9b
0x472be4    ret

------> offset: 0x472c4c
0x472c4c    dec dword [rax+0x1]
0x472c4f    ret

------> offset: 0x472def
0x472def    add eax, [rax]
0x472df1    add [rax-0x7d], cl
0x472df4    ret

------> offset: 0x472ee5
0x472ee5    push rdi
0x472ee6    or [rdi+rcx-0x4a], al
0x472eea    xor [rax-0x7d], cl
0x472eed    ret

------> offset: 0x472ee6
0x472ee6    or [rdi+rcx-0x4a], al
0x472eea    xor [rax-0x7d], cl
0x472eed    ret

------> offset: 0x472eea
0x472eea    xor [rax-0x7d], cl
0x472eed    ret

------> offset: 0x472fff
0x472fff    add [rax+0x1], ecx
0x473002    ret

------> offset: 0x47325b
0x47325b    enter 0xfffd, 0xff
0x47325f    add ecx, ebp
0x473261    retf

------> offset: 0x47360e
0x47360e    test [rdx], ebp
0x473610    mov ah, 0xff
0x473612    dec dword [rax-0x39]
0x473615    ret 0xffc0

------> offset: 0x473610
0x473610    mov ah, 0xff
0x473612    dec dword [rax-0x39]
0x473615    ret 0xffc0

------> offset: 0x473681
0x473681    test [rax+rax-0x76b40000], ah
0x473688    ret 0x894c

------> offset: 0x47368b
0x47368b    fimul word [rax-0x77]
0x47368e    iret

------> offset: 0x473948
0x473948    mov al, 0xff
0x47394a    dec dword [rax-0x39]
0x47394d    ret 0xffc0

------> offset: 0x4739bf
0x4739bf    sar edi, 0x1
0x4739c1    dec dword [rax-0x39]
0x4739c4    ret 0xffc0

------> offset: 0x473a81
0x473a81    jmp qword [rsp+rax*2-0x75]
0x473a85    and cl, [rax-0x39]
0x473a88    ret 0xfffe

------> offset: 0x473b81
0x473b81    xchg [rdi-0x77000000], esp
0x473b87    ret 0x348

------> offset: 0x473b9c
0x473b9c    xchg esi, eax
0x473b9d    sar edi, cl
0x473b9f    dec dword [rax-0x7d]
0x473ba2    ret 0xeb08

------> offset: 0x473b9d
0x473b9d    sar edi, cl
0x473b9f    dec dword [rax-0x7d]
0x473ba2    ret 0xeb08

------> offset: 0x473d5e
0x473d5e    xchg [rbx-0x77000000], esp
0x473d64    ret 0x348

------> offset: 0x473edd
0x473edd    rol [rbp-0x7b], cl
0x473ee0    ror [rdi], cl
0x473ee2    lahf
0x473ee3    ret 0x9529

------> offset: 0x473ee0
0x473ee0    ror [rdi], cl
0x473ee2    lahf
0x473ee3    ret 0x9529

------> offset: 0x47407a
0x47407a    add [rax], eax
0x47407c    add [rax+0xf], cl
0x47407f    retf

------> offset: 0x47407c
0x47407c    add [rax+0xf], cl
0x47407f    retf

------> offset: 0x4747cd
0x4747cd    ror byte [rdi], 0x94
0x4747d0    ret 0xd189

------> offset: 0x4747cf
0x4747cf    xchg esp, eax
0x4747d0    ret 0xd189

------> offset: 0x4747d0
0x4747d0    ret 0xd189

------> offset: 0x47484d
0x47484d    add [rax], al
0x47484f    add [rax], al
0x474851    add [rax-0x77], cl
0x474854    ret 0x36e8

------> offset: 0x47484f
0x47484f    add [rax], al
0x474851    add [rax-0x77], cl
0x474854    ret 0x36e8

------> offset: 0x474851
0x474851    add [rax-0x77], cl
0x474854    ret 0x36e8

------> offset: 0x474854
0x474854    ret 0x36e8

------> offset: 0x47492c
0x47492c    ret 0xf039

------> offset: 0x4749ee
0x4749ee    add [rax+0x1], ecx
0x4749f1    ret 0x148

------> offset: 0x474a38
0x474a38    dec dword [rdi]
0x474a3a    test [rsi], bl
0x474a3c    ret 0xffff

------> offset: 0x474a3a
0x474a3a    test [rsi], bl
0x474a3c    ret 0xffff

------> offset: 0x475018
0x475018    out 0xe8, eax
0x47501a    ret 0xf9fe

------> offset: 0x47501a
0x47501a    ret 0xf9fe

------> offset: 0x475061
0x475061    add [rdi], cl
0x475063    xchg [rbx], esi
0x475065    add al, [rax]
0x475067    add [rax-0x7d], cl
0x47506a    ret

------> offset: 0x475063
0x475063    xchg [rbx], esi
0x475065    add al, [rax]
0x475067    add [rax-0x7d], cl
0x47506a    ret

------> offset: 0x4750a2
0x4750a2    sub cl, bh
0x4750a4    cli
0x4750a5    dec dword [rcx-0x77]
0x4750a8    ret 0x92e9

------> offset: 0x4750a4
0x4750a4    cli
0x4750a5    dec dword [rcx-0x77]
0x4750a8    ret 0x92e9

------> offset: 0x4750a5
0x4750a5    dec dword [rcx-0x77]
0x4750a8    ret 0x92e9

------> offset: 0x4750a8
0x4750a8    ret 0x92e9

------> offset: 0x4753f3
0x4753f3    out 0xe8, eax
0x4753f5    xlat byte [rbx+al]
0x4753f6    retf

------> offset: 0x475421
0x475421    enter 0xfffd, 0xff
0x475425    add [rcx-0x77], ecx
0x475428    ret 0x12e9

------> offset: 0x475425
0x475425    add [rcx-0x77], ecx
0x475428    ret 0x12e9

------> offset: 0x475428
0x475428    ret 0x12e9

------> offset: 0x4754da
0x4754da    fisub dword [rdi-0x38b70001]
0x4754e0    ret 0xffc0

------> offset: 0x47556f
0x47556f    dec dword [rdi]
0x475571    test [rcx], ebp
0x475573    ret

------> offset: 0x475571
0x475571    test [rcx], ebp
0x475573    ret

------> offset: 0x475873
0x475873    ret 0xffa5

------> offset: 0x475b94
0x475b94    cmp cl, [rax-0x7f]
0x475b97    in al, dx
0x475b98    add byte [rax], 0x0
0x475b9b    add al, ch
0x475b9d    iret

------> offset: 0x475b97
0x475b97    in al, dx
0x475b98    add byte [rax], 0x0
0x475b9b    add al, ch
0x475b9d    iret

------> offset: 0x475b98
0x475b98    add byte [rax], 0x0
0x475b9b    add al, ch
0x475b9d    iret

------> offset: 0x475b99
0x475b99    add [rax], al
0x475b9b    add al, ch
0x475b9d    iret

------> offset: 0x475bb7
0x475bb7    adc [rbx-0x3f7a8fb9], cl
0x475bbd    js 0x475bc8
0x475bbf    ret

------> offset: 0x475bb8
0x475bb8    mov eax, [rdi+0x70]
0x475bbb    test eax, eax
0x475bbd    js 0x475bc8
0x475bbf    ret

------> offset: 0x475bb9
0x475bb9    jo 0x475b41
0x475bbc    sar byte [rax+0x9], 0xf3
0x475bc0    ret

------> offset: 0x475bbb
0x475bbb    test eax, eax
0x475bbd    js 0x475bc8
0x475bbf    ret

------> offset: 0x475bbc
0x475bbc    sar byte [rax+0x9], 0xf3
0x475bc0    ret

------> offset: 0x475bbd
0x475bbd    js 0x475bc8
0x475bbf    ret

------> offset: 0x475bbe
0x475bbe    or ebx, esi
0x475bc0    ret

------> offset: 0x475c58
0x475c58    ror [rax-0x7d], cl
0x475c5b    clc
0x475c5c    dec dword [rdi]
0x475c5e    xchg esp, eax
0x475c5f    ret 0xdaf7

------> offset: 0x475c5b
0x475c5b    clc
0x475c5c    dec dword [rdi]
0x475c5e    xchg esp, eax
0x475c5f    ret 0xdaf7

------> offset: 0x475c5c
0x475c5c    dec dword [rdi]
0x475c5e    xchg esp, eax
0x475c5f    ret 0xdaf7

------> offset: 0x475c5e
0x475c5e    xchg esp, eax
0x475c5f    ret 0xdaf7

------> offset: 0x475d9a
0x475d9a    fadd qword [rax]
0x475d9c    add [rax-0x77], cl
0x475d9f    ret 0x38b

------> offset: 0x475d9c
0x475d9c    add [rax-0x77], cl
0x475d9f    ret 0x38b

------> offset: 0x475d9f
0x475d9f    ret 0x38b

------> offset: 0x475dd1
0x475dd1    cmp edx, -0x1
0x475dd4    jz 0x475de0
0x475dd6    mov rax, rdx
0x475dd9    pop rbx
0x475dda    ret

------> offset: 0x475dd2
0x475dd2    cli
0x475dd3    push qword [rdx+rcx+0x48]
0x475dd7    mov eax, edx
0x475dd9    pop rbx
0x475dda    ret

------> offset: 0x475dd3
0x475dd3    push qword [rdx+rcx+0x48]
0x475dd7    mov eax, edx
0x475dd9    pop rbx
0x475dda    ret

------> offset: 0x475dd4
0x475dd4    jz 0x475de0
0x475dd6    mov rax, rdx
0x475dd9    pop rbx
0x475dda    ret

------> offset: 0x475df0
0x475df0    add [rip+0x48000000], al
0x475df6    mov eax, edx
0x475df8    pop rbx
0x475df9    ret

------> offset: 0x475df1
0x475df1    add eax, 0x48000000
0x475df6    mov eax, edx
0x475df8    pop rbx
0x475df9    ret

------> offset: 0x475df3
0x475df3    add [rax], al
0x475df5    mov rax, rdx
0x475df8    pop rbx
0x475df9    ret

------> offset: 0x475e2a
0x475e2a    retf 0x8aeb

------> offset: 0x475ed3
0x475ed3    test rbx, rbx
0x475ed6    jnz 0x475ee0
0x475ed8    pop rbx
0x475ed9    pop rbp
0x475eda    pop r12
0x475edc    ret

------> offset: 0x475ed4
0x475ed4    test ebx, ebx
0x475ed6    jnz 0x475ee0
0x475ed8    pop rbx
0x475ed9    pop rbp
0x475eda    pop r12
0x475edc    ret

------> offset: 0x475ed6
0x475ed6    jnz 0x475ee0
0x475ed8    pop rbx
0x475ed9    pop rbp
0x475eda    pop r12
0x475edc    ret

------> offset: 0x475edf
0x475edf    add [rax-0x77], cl
0x475ee2    fimul dword [rax-0x77]
0x475ee5    dec byte [rax-0x77]
0x475ee8    iret

------> offset: 0x475ee2
0x475ee2    fimul dword [rax-0x77]
0x475ee5    dec byte [rax-0x77]
0x475ee8    iret

------> offset: 0x475eea
0x475eea    jp 0x475ee6
0x475eed    dec dword [rax-0x77]
0x475ef0    ret 0x894c

------> offset: 0x475eec
0x475eec    stc
0x475eed    dec dword [rax-0x77]
0x475ef0    ret 0x894c

------> offset: 0x475eed
0x475eed    dec dword [rax-0x77]
0x475ef0    ret 0x894c

------> offset: 0x475efc
0x475efc    xor edx, edx
0x475efe    pop rbx
0x475eff    div rbp
0x475f02    pop rbp
0x475f03    pop r12
0x475f05    ret

------> offset: 0x475efd
0x475efd    rcr [rbx+0x48], cl
0x475f00    div ebp
0x475f02    pop rbp
0x475f03    pop r12
0x475f05    ret

------> offset: 0x475efe
0x475efe    pop rbx
0x475eff    div rbp
0x475f02    pop rbp
0x475f03    pop r12
0x475f05    ret

------> offset: 0x475eff
0x475eff    div rbp
0x475f02    pop rbp
0x475f03    pop r12
0x475f05    ret

------> offset: 0x475f00
0x475f00    div ebp
0x475f02    pop rbp
0x475f03    pop r12
0x475f05    ret

------> offset: 0x475f01
0x475f01    cmc
0x475f02    pop rbp
0x475f03    pop r12
0x475f05    ret

------> offset: 0x475f2d
0x475f2d    push rax
0x475f2e    ins byte [rdi], dx
0x475f30    add al, ch
0x475f32    retf 0xb8a0

------> offset: 0x475f2e
0x475f2e    ins byte [rdi], dx
0x475f30    add al, ch
0x475f32    retf 0xb8a0

------> offset: 0x475f30
0x475f30    add al, ch
0x475f32    retf 0xb8a0

------> offset: 0x475f32
0x475f32    retf 0xb8a0

------> offset: 0x475f40
0x475f40    add [rax+0x48006c36], al
0x475f46    add esp, 0x8
0x475f49    ret

------> offset: 0x475fcf
0x475fcf    mov eax, [rsp]
0x475fd2    add rsp, 0x18
0x475fd6    pop rbx
0x475fd7    pop rbp
0x475fd8    ret

------> offset: 0x475fd0
0x475fd0    add al, 0x24
0x475fd2    add rsp, 0x18
0x475fd6    pop rbx
0x475fd7    pop rbp
0x475fd8    ret

------> offset: 0x475fd1
0x475fd1    and al, 0x48
0x475fd3    add esp, 0x18
0x475fd6    pop rbx
0x475fd7    pop rbp
0x475fd8    ret

------> offset: 0x476050
0x476050    add [rax], al
0x476052    add rsp, 0x18
0x476056    pop rbx
0x476057    pop rbp
0x476058    ret

------> offset: 0x47612b
0x47612b    mov edi, [rip+0x24d51f]
0x476131    jmp rax
0x476133    pop rbx
0x476134    ret

------> offset: 0x47612c
0x47612c    cmp eax, 0x24d51f
0x476131    jmp rax
0x476133    pop rbx
0x476134    ret

------> offset: 0x47612f
0x47612f    and al, 0x0
0x476131    jmp rax
0x476133    pop rbx
0x476134    ret

------> offset: 0x476130
0x476130    add bh, bh
0x476132    loopnz 0x47618f
0x476134    ret

------> offset: 0x476132
0x476132    loopnz 0x47618f
0x476134    ret

------> offset: 0x4761a5
0x4761a5    ror [rax-0x7b], cl
0x4761a8    ror byte [rdi], 0x94
0x4761ab    ret 0x950f

------> offset: 0x4761a8
0x4761a8    ror byte [rdi], 0x94
0x4761ab    ret 0x950f

------> offset: 0x4761aa
0x4761aa    xchg esp, eax
0x4761ab    ret 0x950f

------> offset: 0x4761ab
0x4761ab    ret 0x950f

------> offset: 0x4761b0
0x4761b0    push rbx
0x4761b1    add al, 0xf
0x4761b3    mov dh, 0xc0
0x4761b5    pop rbx
0x4761b6    pop rbp
0x4761b7    pop r12
0x4761b9    ret

------> offset: 0x4761b1
0x4761b1    add al, 0xf
0x4761b3    mov dh, 0xc0
0x4761b5    pop rbx
0x4761b6    pop rbp
0x4761b7    pop r12
0x4761b9    ret

------> offset: 0x4761b2
0x4761b2    movzx eax, al
0x4761b5    pop rbx
0x4761b6    pop rbp
0x4761b7    pop r12
0x4761b9    ret

------> offset: 0x4761b3
0x4761b3    mov dh, 0xc0
0x4761b5    pop rbx
0x4761b6    pop rbp
0x4761b7    pop r12
0x4761b9    ret

------> offset: 0x476265
0x476265    add al, al
0x476267    sbb ebp, [rax+rax+0x48]
0x47626b    add esp, 0x8
0x47626e    ret

------> offset: 0x476267
0x476267    sbb ebp, [rax+rax+0x48]
0x47626b    add esp, 0x8
0x47626e    ret

------> offset: 0x4762e0
0x4762e0    mov rdx, [rbx+0x18]
0x4762e4    mov [rdx], rax
0x4762e7    pop rbx
0x4762e8    ret

------> offset: 0x4762e1
0x4762e1    mov edx, [rbx+0x18]
0x4762e4    mov [rdx], rax
0x4762e7    pop rbx
0x4762e8    ret

------> offset: 0x4762e4
0x4762e4    mov [rdx], rax
0x4762e7    pop rbx
0x4762e8    ret

------> offset: 0x4762e5
0x4762e5    mov [rdx], eax
0x4762e7    pop rbx
0x4762e8    ret

------> offset: 0x4762f4
0x4762f4    mov rdx, [rdi+0x30]
0x4762f8    mov [rax], rdx
0x4762fb    pop rbx
0x4762fc    ret

------> offset: 0x4762f5
0x4762f5    mov edx, [rdi+0x30]
0x4762f8    mov [rax], rdx
0x4762fb    pop rbx
0x4762fc    ret

------> offset: 0x4762f8
0x4762f8    mov [rax], rdx
0x4762fb    pop rbx
0x4762fc    ret

------> offset: 0x4762f9
0x4762f9    mov [rax], edx
0x4762fb    pop rbx
0x4762fc    ret

------> offset: 0x476300
0x476300    mov rax, [rbx+0x18]
0x476304    mov [rax], rdi
0x476307    pop rbx
0x476308    ret

------> offset: 0x476301
0x476301    mov eax, [rbx+0x18]
0x476304    mov [rax], rdi
0x476307    pop rbx
0x476308    ret

------> offset: 0x476304
0x476304    mov [rax], rdi
0x476307    pop rbx
0x476308    ret

------> offset: 0x476305
0x476305    mov [rax], edi
0x476307    pop rbx
0x476308    ret

------> offset: 0x476358
0x476358    add [rax], al
0x47635a    mov [rax], rdx
0x47635d    pop rbx
0x47635e    ret

------> offset: 0x4763a8
0x4763a8    add rsp, 0x28
0x4763ac    movzx eax, al
0x4763af    neg eax
0x4763b1    ret

------> offset: 0x4763a9
0x4763a9    add esp, 0x28
0x4763ac    movzx eax, al
0x4763af    neg eax
0x4763b1    ret

------> offset: 0x4763ab
0x4763ab    sub [rdi], cl
0x4763ad    mov dh, 0xc0
0x4763af    neg eax
0x4763b1    ret

------> offset: 0x4763ac
0x4763ac    movzx eax, al
0x4763af    neg eax
0x4763b1    ret

------> offset: 0x4763ad
0x4763ad    mov dh, 0xc0
0x4763af    neg eax
0x4763b1    ret

------> offset: 0x4763ae
0x4763ae    sal bh, 0xd8
0x4763b1    ret

------> offset: 0x4763af
0x4763af    neg eax
0x4763b1    ret

------> offset: 0x476470
0x476470    and al, 0x18
0x476472    mov rax, rdx
0x476475    add rsp, 0x38
0x476479    ret

------> offset: 0x476472
0x476472    mov rax, rdx
0x476475    add rsp, 0x38
0x476479    ret

------> offset: 0x476473
0x476473    mov eax, edx
0x476475    add rsp, 0x38
0x476479    ret

------> offset: 0x476475
0x476475    add rsp, 0x38
0x476479    ret

------> offset: 0x476476
0x476476    add esp, 0x38
0x476479    ret

------> offset: 0x47648f
0x47648f    test rax, rax
0x476492    jz 0x476499
0x476494    pop rbx
0x476495    pop rbp
0x476496    pop r12
0x476498    ret

------> offset: 0x476490
0x476490    test eax, eax
0x476492    jz 0x476499
0x476494    pop rbx
0x476495    pop rbp
0x476496    pop r12
0x476498    ret

------> offset: 0x476491
0x476491    sal byte [rbp+rax+0x5b], 0x5d
0x476496    pop r12
0x476498    ret

------> offset: 0x476492
0x476492    jz 0x476499
0x476494    pop rbx
0x476495    pop rbp
0x476496    pop r12
0x476498    ret

------> offset: 0x476493
0x476493    add eax, 0x5c415d5b
0x476498    ret

------> offset: 0x4764b2
0x4764b2    retf 0x24dc

------> offset: 0x476585
0x476585    ins byte [rdi], dx
0x476587    add [rax+0xf], cl
0x47658a    retf 0x8948

------> offset: 0x476587
0x476587    add [rax+0xf], cl
0x47658a    retf 0x8948

------> offset: 0x4766cf
0x4766cf    retf 0xc085

------> offset: 0x47670b
0x47670b    sub eax, ebp
0x47670d    pop rbp
0x47670e    pop r12
0x476710    pop r13
0x476712    pop r14
0x476714    ret

------> offset: 0x47670c
0x47670c    call 0x41a3a86e
0x476711    pop rbp
0x476712    pop r14
0x476714    ret

------> offset: 0x476721
0x476721    test eax, 0xffffffffe9004a60
0x476726    iret

------> offset: 0x476723
0x476723    add cl, bpl
0x476726    iret

------> offset: 0x4767a6
0x4767a6    add al, bpl
0x4767a9    ret

------> offset: 0x47684d
0x47684d    cli
0x47684e    or cl, [rax+0x29]
0x476851    ret 0x5589

------> offset: 0x47684e
0x47684e    or cl, [rax+0x29]
0x476851    ret 0x5589

------> offset: 0x476851
0x476851    ret 0x5589

------> offset: 0x476966
0x476966    xor cl, [rax-0x77]
0x476969    ret 0xc148

------> offset: 0x476a0d
0x476a0d    or byte [rax-0x3f], 0xe0
0x476a11    add cl, [rax+0x29]
0x476a14    ret 0x8948

------> offset: 0x476a11
0x476a11    add cl, [rax+0x29]
0x476a14    ret 0x8948

------> offset: 0x476b73
0x476b73    ror byte [rax-0x73], 0x14
0x476b77    add [rax+0x1], cl
0x476b7a    ret 0x8d48

------> offset: 0x476b77
0x476b77    add [rax+0x1], cl
0x476b7a    ret 0x8d48

------> offset: 0x476bb7
0x476bb7    or al, 0x5b
0x476bb9    pop rbp
0x476bba    pop r12
0x476bbc    pop r13
0x476bbe    pop r14
0x476bc0    ret

------> offset: 0x476c58
0x476c58    ror byte [rcx-0x77], 0x1
0x476c5b    ret 0x8948

------> offset: 0x476d4a
0x476d4a    cli
0x476d4b    add ebp, [rcx]
0x476d4d    ret 0x48d

------> offset: 0x476d4b
0x476d4b    add ebp, [rcx]
0x476d4d    ret 0x48d

------> offset: 0x476ed2
0x476ed2    and [rbp+0x29], cl
0x476ed5    retf

------> offset: 0x476f68
0x476f68    dec dword [rax+0xf]
0x476f6b    ret 0x3949

------> offset: 0x476fb2
0x476fb2    ror [rdi], cl
0x476fb4    xchg ebp, eax
0x476fb5    ret 0xd138

------> offset: 0x476fb4
0x476fb4    xchg ebp, eax
0x476fb5    ret 0xd138

------> offset: 0x476fb5
0x476fb5    ret 0xd138

------> offset: 0x477004
0x477004    ror [rax+0x1], cl
0x477007    ret 0x3948

------> offset: 0x47700a
0x47700a    ret 0xd889

------> offset: 0x477022
0x477022    ror byte [rax+0x39], 0x1
0x477025    ret 0x9e0f

------> offset: 0x477025
0x477025    ret 0x9e0f

------> offset: 0x477027
0x477027    sahf
0x477028    ret 0xe9c1

------> offset: 0x477028
0x477028    ret 0xe9c1

------> offset: 0x47715e
0x47715e    dec byte [rax+0xf]
0x477161    ret 0x3949

------> offset: 0x477183
0x477183    ror byte [rdi], 0x94
0x477186    ret

------> offset: 0x477188
0x477188    ror byte [rdi], 0x94
0x47718b    ret 0x5c88

------> offset: 0x47718a
0x47718a    xchg esp, eax
0x47718b    ret 0x5c88

------> offset: 0x47718b
0x47718b    ret 0x5c88

------> offset: 0x47723f
0x47723f    ror byte [rdi], 0x94
0x477242    ret 0x543a

------> offset: 0x477241
0x477241    xchg esp, eax
0x477242    ret 0x543a

------> offset: 0x477242
0x477242    ret 0x543a

------> offset: 0x477309
0x477309    ror [rdi], cl
0x47730b    xchg ebp, eax
0x47730c    ret 0xb60f

------> offset: 0x47730b
0x47730b    xchg ebp, eax
0x47730c    ret 0xb60f

------> offset: 0x4773c1
0x4773c1    test [rax+rbp*8], ah
0x4773c4    add [rax], al
0x4773c6    add [rax+0x29], cl
0x4773c9    ret

------> offset: 0x4773c2
0x4773c2    and al, 0xe8
0x4773c4    add [rax], al
0x4773c6    add [rax+0x29], cl
0x4773c9    ret

------> offset: 0x4773de
0x4773de    rol ecx, cl
0x4773e0    cli
0x4773e1    add ch, [rcx]
0x4773e3    retf

------> offset: 0x4773e0
0x4773e0    cli
0x4773e1    add ch, [rcx]
0x4773e3    retf

------> offset: 0x4773e1
0x4773e1    add ch, [rcx]
0x4773e3    retf

------> offset: 0x477401
0x477401    jz 0x477427
0x477403    sbb [rcx], al
0x477405    retf 0x542b

------> offset: 0x477403
0x477403    sbb [rcx], al
0x477405    retf 0x542b

------> offset: 0x477405
0x477405    retf 0x542b

------> offset: 0x477505
0x477505    and al, 0x90
0x477507    add [rax], al
0x477509    add [rax+0x1], cl
0x47750c    ret 0x8948

------> offset: 0x477506
0x477506    nop
0x477507    add [rax], al
0x477509    add [rax+0x1], cl
0x47750c    ret 0x8948

------> offset: 0x477507
0x477507    add [rax], al
0x477509    add [rax+0x1], cl
0x47750c    ret 0x8948

------> offset: 0x477509
0x477509    add [rax+0x1], cl
0x47750c    ret 0x8948

------> offset: 0x4778e1
0x4778e1    jl 0x477907
0x4778e3    sbb [rcx+0x29], cl
0x4778e6    ret 0x6348

------> offset: 0x4778e3
0x4778e3    sbb [rcx+0x29], cl
0x4778e6    ret 0x6348

------> offset: 0x4778f3
0x4778f3    cmp [rcx+0x29], cl
0x4778f6    ret

------> offset: 0x477dc4
0x477dc4    mov dh, 0xc1
0x477dc6    cli
0x477dc7    add ebp, [rcx]
0x477dc9    ret 0x294c

------> offset: 0x477dc6
0x477dc6    cli
0x477dc7    add ebp, [rcx]
0x477dc9    ret 0x294c

------> offset: 0x477dc7
0x477dc7    add ebp, [rcx]
0x477dc9    ret 0x294c

------> offset: 0x477df3
0x477df3    test [rax+rbx*8], ah
0x477df6    add [rax], al
0x477df8    add [rax+0x29], cl
0x477dfb    ret

------> offset: 0x477df4
0x477df4    and al, 0xd8
0x477df6    add [rax], al
0x477df8    add [rax+0x29], cl
0x477dfb    ret

------> offset: 0x477e0d
0x477e0d    ror dword [rbx+0x1382454], 0x1
0x477e13    retf 0x542b

------> offset: 0x477e11
0x477e11    cmp [rcx], al
0x477e13    retf 0x542b

------> offset: 0x477eb4
0x477eb4    ror dword [rdi], 0x84
0x477eb7    iret

------> offset: 0x477f15
0x477f15    and al, 0x80
0x477f17    add [rax], al
0x477f19    add [rax+0x1], cl
0x477f1c    ret 0x894c

------> offset: 0x477f16
0x477f16    add byte [rax], 0x0
0x477f19    add [rax+0x1], cl
0x477f1c    ret 0x894c

------> offset: 0x477f17
0x477f17    add [rax], al
0x477f19    add [rax+0x1], cl
0x477f1c    ret 0x894c

------> offset: 0x477f19
0x477f19    add [rax+0x1], cl
0x477f1c    ret 0x894c

------> offset: 0x478057
0x478057    add [rbx-0x2f76ff06], al
0x47805d    jle 0x478061
0x47805f    ret

------> offset: 0x478058
0x478058    cmp edx, 0x0
0x47805b    mov eax, edx
0x47805d    jle 0x478061
0x47805f    ret

------> offset: 0x478059
0x478059    cli
0x47805a    add [rcx-0xcfd8130], cl
0x478060    ret

------> offset: 0x47805a
0x47805a    add [rcx-0xcfd8130], cl
0x478060    ret

------> offset: 0x47805b
0x47805b    mov eax, edx
0x47805d    jle 0x478061
0x47805f    ret

------> offset: 0x47805c
0x47805c    sar byte [rsi+0x2], 0x1
0x47805f    ret

------> offset: 0x47805d
0x47805d    jle 0x478061
0x47805f    ret

------> offset: 0x478081
0x478081    frstor [rcx+rcx*4+0x34]
0x478085    and eax, 0x2d0
0x47808a    ret

------> offset: 0x478082
0x478082    mov [fs:0x2d0], esi
0x47808a    ret

------> offset: 0x478083
0x478083    mov [0x2d0], esi
0x47808a    ret

------> offset: 0x478084
0x478084    xor al, 0x25
0x478086    rol byte [rdx], 0x1
0x478088    add [rax], al
0x47808a    ret

------> offset: 0x478085
0x478085    and eax, 0x2d0
0x47808a    ret

------> offset: 0x478086
0x478086    rol byte [rdx], 0x1
0x478088    add [rax], al
0x47808a    ret

------> offset: 0x4780c2
0x4780c2    mov [rbx+0x20], rax
0x4780c6    pop rbx
0x4780c7    ret

------> offset: 0x4780c3
0x4780c3    mov [rbx+0x20], eax
0x4780c6    pop rbx
0x4780c7    ret

------> offset: 0x47816c
0x47816c    retf 0x8820

------> offset: 0x478570
0x478570    pop rbp
0x478571    pop r14
0x478573    sar rax, 0x3
0x478577    pop r15
0x478579    ret

------> offset: 0x478571
0x478571    pop r14
0x478573    sar rax, 0x3
0x478577    pop r15
0x478579    ret

------> offset: 0x478572
0x478572    pop rsi
0x478573    sar rax, 0x3
0x478577    pop r15
0x478579    ret

------> offset: 0x478573
0x478573    sar rax, 0x3
0x478577    pop r15
0x478579    ret

------> offset: 0x478574
0x478574    sar eax, 0x3
0x478577    pop r15
0x478579    ret

------> offset: 0x478575
0x478575    clc
0x478576    add eax, [rcx+0x5f]
0x478579    ret

------> offset: 0x478576
0x478576    add eax, [rcx+0x5f]
0x478579    ret

------> offset: 0x478a16
0x478a16    adc [rax-0x75], cl
0x478a19    or cl, [rax-0x7d]
0x478a1c    ret 0xf08

------> offset: 0x478a19
0x478a19    or cl, [rax-0x7d]
0x478a1c    ret 0xf08

------> offset: 0x478a29
0x478a29    enter 0x4c20, 0x39
0x478a2d    ret 0x8188

------> offset: 0x478a2d
0x478a2d    ret 0x8188

------> offset: 0x478a6d
0x478a6d    add [rcx], edi
0x478a6f    ret

------> offset: 0x478afb
0x478afb    ret 0x3901

------> offset: 0x478afc
0x478afc    add [rcx], edi
0x478afe    ret 0xdf75

------> offset: 0x478afe
0x478afe    ret 0xdf75

------> offset: 0x478b75
0x478b75    fld qword [rax]
0x478b77    add [rax], al
0x478b79    add [rax-0x77], cl
0x478b7c    ret 0x8948

------> offset: 0x478b77
0x478b77    add [rax], al
0x478b79    add [rax-0x77], cl
0x478b7c    ret 0x8948

------> offset: 0x478c52
0x478c52    inc dword [rcx-0x77]
0x478c55    iret

------> offset: 0x478c72
0x478c72    jmp far dword [rcx]
0x478c74    retf 0x8b48

------> offset: 0x478da3
0x478da3    xchg al, bl
0x478da5    add al, 0x0
0x478da7    add [rcx-0x77], al
0x478daa    iret

------> offset: 0x478da4
0x478da4    fadd dword [rax+rax]
0x478da7    add [rcx-0x77], al
0x478daa    iret

------> offset: 0x478da5
0x478da5    add al, 0x0
0x478da7    add [rcx-0x77], al
0x478daa    iret

------> offset: 0x478da7
0x478da7    add [rcx-0x77], al
0x478daa    iret

------> offset: 0x4790ab
0x4790ab    cmp [rsi+0x39480024], ebp
0x4790b1    ret 0xf48

------> offset: 0x4790ae
0x4790ae    add [rax+0x39], cl
0x4790b1    ret 0xf48

------> offset: 0x479305
0x479305    xchg al, bh
0x479307    dec dword [rax-0x77]
0x47930a    iret

------> offset: 0x479306
0x479306    clc
0x479307    dec dword [rax-0x77]
0x47930a    iret

------> offset: 0x4793b1
0x4793b1    adc [rcx+0xf], cl
0x4793b4    retf

------> offset: 0x4794b5
0x4794b5    add ecx, [rax-0x77]
0x4794b8    ret 0x8948

------> offset: 0x479721
0x479721    add [rax], al
0x479723    add [rax-0x77], cl
0x479726    iret

------> offset: 0x4797cf
0x4797cf    push rdx
0x4797d0    or [rbp+rcx*4+0x4], cl
0x4797d4    retf 0x8b48

------> offset: 0x4797d0
0x4797d0    or [rbp+rcx*4+0x4], cl
0x4797d4    retf 0x8b48

------> offset: 0x4798d0
0x4798d0    mov [rbx], rax
0x4798d3    add rsp, 0x20
0x4798d7    pop rbx
0x4798d8    ret

------> offset: 0x4798d1
0x4798d1    mov [rbx], eax
0x4798d3    add rsp, 0x20
0x4798d7    pop rbx
0x4798d8    ret

------> offset: 0x479a20
0x479a20    add al, [rax]
0x479a22    add [rbp+rcx*4+0x4], cl
0x479a26    retf 0x8b41

------> offset: 0x479a22
0x479a22    add [rbp+rcx*4+0x4], cl
0x479a26    retf 0x8b41

------> offset: 0x479a29
0x479a29    push rax
0x479a2a    or [rbp+0x440f4cd2], al
0x479a30    ret

------> offset: 0x479a2a
0x479a2a    or [rbp+0x440f4cd2], al
0x479a30    ret

------> offset: 0x479a2c
0x479a2c    ror [rdi+rcx+0x44], cl
0x479a30    ret

------> offset: 0x479afb
0x479afb    ror [rax-0x77], cl
0x479afe    ret

------> offset: 0x479c10
0x479c10    sal byte [rax-0x7d], 0xe8
0x479c15    add [rbp+rcx*4+0x74], ecx
0x479c19    ret

------> offset: 0x479c14
0x479c14    call 0x74d4e81a
0x479c19    ret

------> offset: 0x479c15
0x479c15    add [rbp+rcx*4+0x74], ecx
0x479c19    ret

------> offset: 0x479c29
0x479c29    adc ecx, [rax-0x7d]
0x479c2c    ret

------> offset: 0x479c32
0x479c32    in eax, dx
0x479c33    pop rbx
0x479c34    pop rbp
0x479c35    pop r12
0x479c37    pop r13
0x479c39    pop r14
0x479c3b    ret

------> offset: 0x479c49
0x479c49    test [rbx+0x5d], bl
0x479c4c    pop r12
0x479c4e    pop r13
0x479c50    pop r14
0x479c52    ret

------> offset: 0x479d6a
0x479d6a    jl 0x479d3c
0x479d6c    or [rax-0x77], cl
0x479d6f    ret

------> offset: 0x479d6c
0x479d6c    or [rax-0x77], cl
0x479d6f    ret

------> offset: 0x479e2b
0x479e2b    pop rcx
0x479e2c    add [rcx-0x77], eax
0x479e2f    iret

------> offset: 0x479e2c
0x479e2c    add [rcx-0x77], eax
0x479e2f    iret

------> offset: 0x479e92
0x479e92    pop rax
0x479e93    sub [rax+0x39], cl
0x479e96    ret

------> offset: 0x479e93
0x479e93    sub [rax+0x39], cl
0x479e96    ret

------> offset: 0x479ecd
0x479ecd    add [rax], al
0x479ecf    add [rax-0x7d], cl
0x479ed2    ret 0x4808

------> offset: 0x479fba
0x479fba    ret 0xb76

------> offset: 0x47a039
0x47a039    dec dword [rax-0x7d]
0x47a03c    ret 0x4908

------> offset: 0x47a48b
0x47a48b    add [rax], al
0x47a48d    add [rax], al
0x47a48f    add [rcx-0x77], al
0x47a492    ret

------> offset: 0x47a48d
0x47a48d    add [rax], al
0x47a48f    add [rcx-0x77], al
0x47a492    ret

------> offset: 0x47a4f0
0x47a4f0    sbb [rcx-0x77], al
0x47a4f3    iret

------> offset: 0x47a51f
0x47a51f    jae 0x47a509
0x47a521    retf

------> offset: 0x47a625
0x47a625    add [rax], al
0x47a627    add [rax+0x1], cl
0x47a62a    ret

------> offset: 0x47a627
0x47a627    add [rax+0x1], cl
0x47a62a    ret

------> offset: 0x47a719
0x47a719    add [r8-0x77], cl
0x47a71d    ret

------> offset: 0x47a7f6
0x47a7f6    ret 0xf201

------> offset: 0x47aae7
0x47aae7    ret 0xd3e8

------> offset: 0x47abdf
0x47abdf    add ecx, [rax+0x1]
0x47abe2    retf 0xb70f

------> offset: 0x47abe2
0x47abe2    retf 0xb70f

------> offset: 0x47ac57
0x47ac57    add [rax+0x1], cl
0x47ac5a    retf 0x42f6

------> offset: 0x47ac5a
0x47ac5a    retf 0x42f6

------> offset: 0x47adc9
0x47adc9    or [rcx+0x415d5be8], cl
0x47adcf    pop rsp
0x47add0    pop r13
0x47add2    ret

------> offset: 0x47adcb
0x47adcb    call 0x5c890b2b
0x47add0    pop r13
0x47add2    ret

------> offset: 0x47ae63
0x47ae63    retf 0x2348

------> offset: 0x47ae69
0x47ae69    ret 0xec75

------> offset: 0x47ae9f
0x47ae9f    add ecx, [rax-0x46]
0x47aea2    ret

------> offset: 0x47aea7
0x47aea7    ret 0x28f5

------> offset: 0x47b15c
0x47b15c    retf 0x3040

------> offset: 0x47b172
0x47b172    retf 0xfa12

------> offset: 0x47b34e
0x47b34e    xchg esi, eax
0x47b34f    and dword [rax+rax], -0x77
0x47b353    iret

------> offset: 0x47b34f
0x47b34f    and dword [rax+rax], -0x77
0x47b353    iret

------> offset: 0x47b522
0x47b522    add [r9], sil
0x47b525    shr al, 0xf5
0x47b528    ret 0xfffe

------> offset: 0x47b523
0x47b523    add [rcx], dh
0x47b525    shr al, 0xf5
0x47b528    ret 0xfffe

------> offset: 0x47b525
0x47b525    shr al, 0xf5
0x47b528    ret 0xfffe

------> offset: 0x47b527
0x47b527    cmc
0x47b528    ret 0xfffe

------> offset: 0x47b5e1
0x47b5e1    and dword [rax+rax], 0x39138b41
0x47b5e8    ret 0x840f

------> offset: 0x47b5e3
0x47b5e3    add [rcx-0x75], al
0x47b5e6    adc edi, [rcx]
0x47b5e8    ret 0x840f

------> offset: 0x47b5e6
0x47b5e6    adc edi, [rcx]
0x47b5e8    ret 0x840f

------> offset: 0x47b687
0x47b687    add [rcx-0x75], al
0x47b68a    adc edi, [rcx]
0x47b68c    ret 0x8175

------> offset: 0x47b68a
0x47b68a    adc edi, [rcx]
0x47b68c    ret 0x8175

------> offset: 0x47b68c
0x47b68c    ret 0x8175

------> offset: 0x47b73b
0x47b73b    lock inc dword [rdx+0x10]
0x47b73f    pop rbx
0x47b740    pop rbp
0x47b741    pop r12
0x47b743    ret

------> offset: 0x47b73c
0x47b73c    inc dword [rdx+0x10]
0x47b73f    pop rbx
0x47b740    pop rbp
0x47b741    pop r12
0x47b743    ret

------> offset: 0x47b82d
0x47b82d    retf 0x114d

------> offset: 0x47b917
0x47b917    add [rbx+rcx*4+0x57], cl
0x47b91b    or [rcx+0x1], cl
0x47b91e    ret 0x894c

------> offset: 0x47b91a
0x47b91a    push rdi
0x47b91b    or [rcx+0x1], cl
0x47b91e    ret 0x894c

------> offset: 0x47b91b
0x47b91b    or [rcx+0x1], cl
0x47b91e    ret 0x894c

------> offset: 0x47ba1f
0x47ba1f    mov esi, 0x448d4813
0x47ba24    lodsd
0x47ba25    add [rax-0x7d], cl
0x47ba28    ret

------> offset: 0x47ba20
0x47ba20    adc ecx, [rax-0x73]
0x47ba23    lodsd
0x47ba25    add [rax-0x7d], cl
0x47ba28    ret

------> offset: 0x47ba23
0x47ba23    lodsd
0x47ba25    add [rax-0x7d], cl
0x47ba28    ret

------> offset: 0x47bbae
0x47bbae    sbb byte [rbx], 0x4b
0x47bbb1    add [rax+0x1], cl
0x47bbb4    ret 0x8b48

------> offset: 0x47bbb0
0x47bbb0    add [r8+0x1], cl
0x47bbb4    ret 0x8b48

------> offset: 0x47bbb1
0x47bbb1    add [rax+0x1], cl
0x47bbb4    ret 0x8b48

------> offset: 0x47bc29
0x47bc29    mov ecx, 0x1b8
0x47bc2e    add [rax+0x1], cl
0x47bc31    ret

------> offset: 0x47be54
0x47be54    and [rax+0x3], bl
0x47be57    add [rax-0x39], cl
0x47be5a    ret 0xffc0

------> offset: 0x47be99
0x47be99    pop rbp
0x47be9a    pop r14
0x47be9c    mulss xmm0, xmm0
0x47bea0    pop r15
0x47bea2    ret

------> offset: 0x47be9a
0x47be9a    pop r14
0x47be9c    mulss xmm0, xmm0
0x47bea0    pop r15
0x47bea2    ret

------> offset: 0x47be9b
0x47be9b    pop rsi
0x47be9c    mulss xmm0, xmm0
0x47bea0    pop r15
0x47bea2    ret

------> offset: 0x47be9c
0x47be9c    mulss xmm0, xmm0
0x47bea0    pop r15
0x47bea2    ret

------> offset: 0x47be9d
0x47be9d    mulps xmm0, xmm0
0x47bea0    pop r15
0x47bea2    ret

------> offset: 0x47bee4
0x47bee4    xchg ebp, eax
0x47bee5    ret 0xe083

------> offset: 0x47bf9d
0x47bf9d    ror dword [rdi], 0x95
0x47bfa0    ret 0xd349

------> offset: 0x47bf9f
0x47bf9f    xchg ebp, eax
0x47bfa0    ret 0xd349

------> offset: 0x47bfa0
0x47bfa0    ret 0xd349

------> offset: 0x47c06b
0x47c06b    sti
0x47c06c    add dword [rax], 0xffffffff840f0000
0x47c072    retf

------> offset: 0x47c06c
0x47c06c    add dword [rax], 0xffffffff840f0000
0x47c072    retf

------> offset: 0x47c34f
0x47c34f    xchg ebp, eax
0x47c350    ret 0x2948

------> offset: 0x47c3f4
0x47c3f4    add [rax-0x48], cl
0x47c3f7    ret 0xffff

------> offset: 0x47c425
0x47c425    ror [rcx-0x3f], cl
0x47c428    sti
0x47c429    add cl, [rcx+0x29]
0x47c42c    ret

------> offset: 0x47c428
0x47c428    sti
0x47c429    add cl, [rcx+0x29]
0x47c42c    ret

------> offset: 0x47c429
0x47c429    add cl, [rcx+0x29]
0x47c42c    ret

------> offset: 0x47c44e
0x47c44e    cli
0x47c44f    add cl, [rax+0x29]
0x47c452    ret 0x8d48

------> offset: 0x47c44f
0x47c44f    add cl, [rax+0x29]
0x47c452    ret 0x8d48

------> offset: 0x47c465
0x47c465    retf 0x1c

------> offset: 0x47c7a6
0x47c7a6    fisttp qword [rax-0x77]
0x47c7a9    ret

------> offset: 0x47c7ef
0x47c7ef    and al, 0xe8
0x47c7f1    retf

------> offset: 0x47c899
0x47c899    jl 0x47c8bf
0x47c89b    adc al, ch
0x47c89d    iret

------> offset: 0x47c89b
0x47c89b    adc al, ch
0x47c89d    iret

------> offset: 0x47c938
0x47c938    fisttp word [rax+0x63]
0x47c93b    retf 0xd285

------> offset: 0x47c93b
0x47c93b    retf 0xd285

------> offset: 0x47c97a
0x47c97a    fimul word [rax+0x63]
0x47c97d    retf 0xd285

------> offset: 0x47ca71
0x47ca71    fisttp qword [rax]
0x47ca73    add [rax], al
0x47ca75    add [rcx], dh
0x47ca77    imul al
0x47ca79    ret

------> offset: 0x47ca73
0x47ca73    add [rax], al
0x47ca75    add [rcx], dh
0x47ca77    imul al
0x47ca79    ret

------> offset: 0x47ca75
0x47ca75    add [rcx], dh
0x47ca77    imul al
0x47ca79    ret

------> offset: 0x47ca77
0x47ca77    imul al
0x47ca79    ret

------> offset: 0x47cb40
0x47cb40    sbb [rax-0x77], cl
0x47cb43    retf 0x8b48

------> offset: 0x47cb79
0x47cb79    retf 0xc77

------> offset: 0x47cf78
0x47cf78    retf 0xf641

------> offset: 0x47d179
0x47d179    add [rcx+0xf], ecx
0x47d17c    retf 0xc148

------> offset: 0x47d180
0x47d180    stc
0x47d181    add cl, [rcx+0x39]
0x47d184    iret

------> offset: 0x47d181
0x47d181    add cl, [rcx+0x39]
0x47d184    iret

------> offset: 0x47d1ea
0x47d1ea    mov esi, 0xffffffffbe0f4813
0x47d1ef    retf 0x44f6

------> offset: 0x47d365
0x47d365    xchg edx, eax
0x47d366    jz 0x47d3b2
0x47d368    add [rax-0x77], cl
0x47d36b    fucomip st0, st0
0x47d36d    iret

------> offset: 0x47d366
0x47d366    jz 0x47d3b2
0x47d368    add [rax-0x77], cl
0x47d36b    fucomip st0, st0
0x47d36d    iret

------> offset: 0x47d394
0x47d394    add [r8-0x7d], cl
0x47d398    ret

------> offset: 0x47d525
0x47d525    retf 0xfd83

------> offset: 0x47d5ca
0x47d5ca    dec dword [rax+0x63]
0x47d5cd    ret 0x50e9

------> offset: 0x47d5cd
0x47d5cd    ret 0x50e9

------> offset: 0x47d6c3
0x47d6c3    add [rax-0x39], cl
0x47d6c6    ret

------> offset: 0x47d7c7
0x47d7c7    loopz 0x47d7c8
0x47d7c9    dec dword [rax-0x77]
0x47d7cc    ret

------> offset: 0x47d9d3
0x47d9d3    ret 0x4d09

------> offset: 0x47da85
0x47da85    fimul dword [rax+0x39]
0x47da88    ret 0xf48

------> offset: 0x47dab9
0x47dab9    add [rax], al
0x47dabc    add [rcx-0x77], cl
0x47dabf    ret 0x894c

------> offset: 0x47dabc
0x47dabc    add [rcx-0x77], cl
0x47dabf    ret 0x894c

------> offset: 0x47db83
0x47db83    xchg esp, eax
0x47db84    and al, 0xb0
0x47db86    add [rax], al
0x47db88    add [rax-0x77], cl
0x47db8b    ret

------> offset: 0x47db84
0x47db84    and al, 0xb0
0x47db86    add [rax], al
0x47db88    add [rax-0x77], cl
0x47db8b    ret

------> offset: 0x47dc32
0x47dc32    retf 0xfe81

------> offset: 0x47dcf6
0x47dcf6    mov al, [0xc748c03145000000]
0x47dcff    ret

------> offset: 0x47dd0c
0x47dd0c    retf 0xfff1

------> offset: 0x47dd6f
0x47dd6f    sbb al, ch
0x47dd71    retf

------> offset: 0x47ddc3
0x47ddc3    sub ecx, [rax+0x63]
0x47ddc6    retf

------> offset: 0x47e2be
0x47e2be    add r8b, bpl
0x47e2c1    stosd
0x47e2c2    clc
0x47e2c4    dec dword [rax-0x77]
0x47e2c7    ret

------> offset: 0x47e2bf
0x47e2bf    add al, ch
0x47e2c1    stosd
0x47e2c2    clc
0x47e2c4    dec dword [rax-0x77]
0x47e2c7    ret

------> offset: 0x47e2c1
0x47e2c1    stosd
0x47e2c2    clc
0x47e2c4    dec dword [rax-0x77]
0x47e2c7    ret

------> offset: 0x47e323
0x47e323    add [rcx+0x1], ecx
0x47e326    ret

------> offset: 0x47e329
0x47e329    mov esi, 0xffffffff8349016b
0x47e32e    ret

------> offset: 0x47e59f
0x47e59f    add r8b, bpl
0x47e5a2    retf 0xf833

------> offset: 0x47e5a0
0x47e5a0    add al, ch
0x47e5a2    retf 0xf833

------> offset: 0x47e5a2
0x47e5a2    retf 0xf833

------> offset: 0x47e628
0x47e628    ret 0x5

------> offset: 0x47ebc4
0x47ebc4    adc [rip-0x38b7fffd], ch
0x47ebca    ret 0xffc0

------> offset: 0x47ebc5
0x47ebc5    sub eax, 0xffffffffc7480003
0x47ebca    ret 0xffc0

------> offset: 0x47ec09
0x47ec09    pop rbp
0x47ec0a    pop r14
0x47ec0c    mulsd xmm0, xmm0
0x47ec10    pop r15
0x47ec12    ret

------> offset: 0x47ec0a
0x47ec0a    pop r14
0x47ec0c    mulsd xmm0, xmm0
0x47ec10    pop r15
0x47ec12    ret

------> offset: 0x47ec0b
0x47ec0b    pop rsi
0x47ec0c    mulsd xmm0, xmm0
0x47ec10    pop r15
0x47ec12    ret

------> offset: 0x47ec0c
0x47ec0c    mulsd xmm0, xmm0
0x47ec10    pop r15
0x47ec12    ret

------> offset: 0x47f390
0x47f390    xchg [rdx], esi
0x47f392    sbb [rax], eax
0x47f394    add [rax-0x77], cl
0x47f397    retf 0x8b48

------> offset: 0x47f392
0x47f392    sbb [rax], eax
0x47f394    add [rax-0x77], cl
0x47f397    retf 0x8b48

------> offset: 0x47f394
0x47f394    add [rax-0x77], cl
0x47f397    retf 0x8b48

------> offset: 0x47f6a5
0x47f6a5    push rsi
0x47f6a6    or eax, 0xffffffff894c0000
0x47f6ab    ret

------> offset: 0x47f6a6
0x47f6a6    or eax, 0xffffffff894c0000
0x47f6ab    ret

------> offset: 0x47f6ca
0x47f6ca    ret 0xa77

------> offset: 0x47f6cf
0x47f6cf    sal byte [rbp+rdx+0x4c], 0x39
0x47f6d4    ret 0x1075

------> offset: 0x47f6d4
0x47f6d4    ret 0x1075

------> offset: 0x47f899
0x47f899    sbb [rcx+0x39], cl
0x47f89c    ret 0x840f

------> offset: 0x47fc86
0x47fc86    retf 0xc

------> offset: 0x47fda0
0x47fda0    imul eax
0x47fda2    stosb
0x47fda3    ret

------> offset: 0x480034
0x480034    adc [rcx-0x77], cl
0x480037    fisttp qword [rax-0x77]
0x48003a    retf

------> offset: 0x480037
0x480037    fisttp qword [rax-0x77]
0x48003a    retf

------> offset: 0x4800f0
0x4800f0    jz 0x480116
0x4800f2    cmp [rax-0x77], cl
0x4800f5    fucomip st0, st0
0x4800f7    iret

------> offset: 0x4800f2
0x4800f2    cmp [rax-0x77], cl
0x4800f5    fucomip st0, st0
0x4800f7    iret

------> offset: 0x48024f
0x48024f    add [rax-0x48], cl
0x480252    retf 0xfffe

------> offset: 0x480289
0x480289    dec dword [rax+0x63]
0x48028c    ret 0x11e9

------> offset: 0x48028c
0x48028c    ret 0x11e9

------> offset: 0x4802b3
0x4802b3    push rsi
0x4802b4    retf

------> offset: 0x4802bc
0x4802bc    ret 0xffc1

------> offset: 0x4802ff
0x4802ff    add [rax-0x7d], cl
0x480302    ror byte [rax], 0x83
0x480305    ret 0x4801

------> offset: 0x480302
0x480302    ror byte [rax], 0x83
0x480305    ret 0x4801

------> offset: 0x48041b
0x48041b    test [rdx+rax+0x0], bl
0x48041f    add [rax-0x39], cl
0x480422    ret

------> offset: 0x48041c
0x48041c    pop rsp
0x48041d    add al, [rax]
0x48041f    add [rax-0x39], cl
0x480422    ret

------> offset: 0x48041d
0x48041d    add al, [rax]
0x48041f    add [rax-0x39], cl
0x480422    ret

------> offset: 0x480744
0x480744    ret 0x8136

------> offset: 0x480749
0x480749    add al, 0x0
0x48074b    add [rdi], cl
0x48074d    ret 0xc801

------> offset: 0x48074b
0x48074b    add [rdi], cl
0x48074d    ret 0xc801

------> offset: 0x48074d
0x48074d    ret 0xc801

------> offset: 0x48087f
0x48087f    dec dword [rcx+0x63]
0x480882    retf 0xb848

------> offset: 0x480882
0x480882    retf 0xb848

------> offset: 0x4809bd
0x4809bd    mov esp, 0xffffffffe9fffff4
0x4809c2    ret

------> offset: 0x480a27
0x480a27    add [rax], al
0x480a29    add [rcx+0x29], cl
0x480a2c    ret

------> offset: 0x480e60
0x480e60    test [rax], bl
0x480e62    in al, 0xff
0x480e64    dec dword [rax+0x39]
0x480e67    ret

------> offset: 0x480e62
0x480e62    in al, 0xff
0x480e64    dec dword [rax+0x39]
0x480e67    ret

------> offset: 0x4812ab
0x4812ab    add [rax], al
0x4812ad    add [rax], al
0x4812af    add [rax-0x7d], cl
0x4812b2    ret 0x4808

------> offset: 0x481387
0x481387    sti
0x481388    ret 0xffbf

------> offset: 0x481388
0x481388    ret 0xffbf

------> offset: 0x481401
0x481401    pop rsp
0x481402    pop r13
0x481404    pop r14
0x481406    pop r15
0x481408    fmulp
0x48140a    ret

------> offset: 0x481402
0x481402    pop r13
0x481404    pop r14
0x481406    pop r15
0x481408    fmulp
0x48140a    ret

------> offset: 0x481403
0x481403    pop rbp
0x481404    pop r14
0x481406    pop r15
0x481408    fmulp
0x48140a    ret

------> offset: 0x481404
0x481404    pop r14
0x481406    pop r15
0x481408    fmulp
0x48140a    ret

------> offset: 0x481405
0x481405    pop rsi
0x481406    pop r15
0x481408    fmulp
0x48140a    ret

------> offset: 0x481406
0x481406    pop r15
0x481408    fmulp
0x48140a    ret

------> offset: 0x481407
0x481407    pop rdi
0x481408    fmulp
0x48140a    ret

------> offset: 0x481408
0x481408    fmulp
0x48140a    ret

------> offset: 0x4815ed
0x4815ed    and al, 0x73
0x4815ef    ror byte [rax-0x7d], 0x1
0x4815f2    ret

------> offset: 0x4819d6
0x4819d6    ror [rax+0xf], cl
0x4819d9    retf 0x8349

------> offset: 0x481b7c
0x481b7c    and [rax-0x7b], cl
0x481b7f    ror byte [rdi], 0x84
0x481b82    ret 0x5

------> offset: 0x481b7f
0x481b7f    ror byte [rdi], 0x84
0x481b82    ret 0x5

------> offset: 0x481c8a
0x481c8a    jl 0x481cb0
0x481c8c    xor [rax+0x29], cl
0x481c8f    ret 0x2948

------> offset: 0x481c8c
0x481c8c    xor [rax+0x29], cl
0x481c8f    ret 0x2948

------> offset: 0x481dbb
0x481dbb    and [rax-0x77], cl
0x481dbe    ret

------> offset: 0x481e46
0x481e46    fimul word [rax-0x77]
0x481e49    ret

------> offset: 0x481f6f
0x481f6f    sal byte [rbp+rdx+0x48], 0x39
0x481f74    retf 0x1075

------> offset: 0x4821d2
0x4821d2    and eax, 0x441f0f
0x4821d7    add [rax-0x7d], cl
0x4821da    ret

------> offset: 0x48220c
0x48220c    or [rax], eax
0x48220e    add [rax+0x63], cl
0x482211    ret 0x8b44

------> offset: 0x48220e
0x48220e    add [rax+0x63], cl
0x482211    ret 0x8b44

------> offset: 0x48286d
0x48286d    add [rcx-0x43], al
0x482870    add [rax], al
0x482873    add [rax-0x77], cl
0x482876    ret

------> offset: 0x48293f
0x48293f    ror [rax-0x7d], cl
0x482942    ret

------> offset: 0x482999
0x482999    fucomip st0, st0
0x48299b    shl esi, 0xff
0x48299e    dec dword [rax-0x77]
0x4829a1    ret

------> offset: 0x48299b
0x48299b    shl esi, 0xff
0x48299e    dec dword [rax-0x77]
0x4829a1    ret

------> offset: 0x48299c
0x48299c    out 0xff, al
0x48299e    dec dword [rax-0x77]
0x4829a1    ret

------> offset: 0x482a29
0x482a29    fmul qword [rax-0x77]
0x482a2c    retf

------> offset: 0x482b60
0x482b60    and al, 0x90
0x482b62    add [rax], al
0x482b64    add [rax+0x63], cl
0x482b67    imul al
0x482b69    ret

------> offset: 0x482b61
0x482b61    nop
0x482b62    add [rax], al
0x482b64    add [rax+0x63], cl
0x482b67    imul al
0x482b69    ret

------> offset: 0x482b62
0x482b62    add [rax], al
0x482b64    add [rax+0x63], cl
0x482b67    imul al
0x482b69    ret

------> offset: 0x482b64
0x482b64    add [rax+0x63], cl
0x482b67    imul al
0x482b69    ret

------> offset: 0x482c6a
0x482c6a    ret 0xffe6

------> offset: 0x482f4e
0x482f4e    dec dword [rax+0x29]
0x482f51    ret 0x894c

------> offset: 0x482f5c
0x482f5c    pushf
0x482f5d    and al, 0x90
0x482f5f    add [rax], al
0x482f61    add [rcx-0x7d], al
0x482f64    ret

------> offset: 0x482f5d
0x482f5d    and al, 0x90
0x482f5f    add [rax], al
0x482f61    add [rcx-0x7d], al
0x482f64    ret

------> offset: 0x482f5e
0x482f5e    nop
0x482f5f    add [rax], al
0x482f61    add [rcx-0x7d], al
0x482f64    ret

------> offset: 0x482f5f
0x482f5f    add [rax], al
0x482f61    add [rcx-0x7d], al
0x482f64    ret

------> offset: 0x482f61
0x482f61    add [rcx-0x7d], al
0x482f64    ret

------> offset: 0x482fab
0x482fab    ret 0x8141

------> offset: 0x483037
0x483037    add [rax-0x7d], cl
0x48303a    ret 0x8001

------> offset: 0x483069
0x483069    add [rax], al
0x48306b    add bl, ch
0x48306d    fmul qword [rcx+0x63]
0x483070    retf 0xb848

------> offset: 0x48306b
0x48306b    add bl, ch
0x48306d    fmul qword [rcx+0x63]
0x483070    retf 0xb848

------> offset: 0x48306d
0x48306d    fmul qword [rcx+0x63]
0x483070    retf 0xb848

------> offset: 0x4833e7
0x4833e7    fisttp dword [rcx-0x77]
0x4833ea    fiadd dword [rcx-0x77]
0x4833ed    ret

------> offset: 0x4833ea
0x4833ea    fiadd dword [rcx-0x77]
0x4833ed    ret

------> offset: 0x483506
0x483506    add [rax], eax
0x483508    add [rcx+0x39], cl
0x48350b    ret 0x840f

------> offset: 0x483508
0x483508    add [rcx+0x39], cl
0x48350b    ret 0x840f

------> offset: 0x48350e
0x48350e    out 0xff, al
0x483511    dec dword [rax+0x39]
0x483514    ret

------> offset: 0x4838c2
0x4838c2    mov [rbp+0x0], ebx
0x4838c5    add rsp, 0x28
0x4838c9    pop rbx
0x4838ca    pop rbp
0x4838cb    ret

------> offset: 0x483a48
0x483a48    retf 0x5489

------> offset: 0x483a4c
0x483a4c    adc al, 0x9
0x483a4e    ret 0xa374

------> offset: 0x483a4e
0x483a4e    ret 0xa374

------> offset: 0x483c0b
0x483c0b    ret 0x3f7

------> offset: 0x483c48
0x483c48    adc [rax-0x77], cl
0x483c4b    rcr byte [rbx+0x5d], 0x1
0x483c4e    pop r12
0x483c50    ret

------> offset: 0x483c49
0x483c49    mov rax, rdx
0x483c4c    pop rbx
0x483c4d    pop rbp
0x483c4e    pop r12
0x483c50    ret

------> offset: 0x483c4a
0x483c4a    mov eax, edx
0x483c4c    pop rbx
0x483c4d    pop rbp
0x483c4e    pop r12
0x483c50    ret

------> offset: 0x483ca3
0x483ca3    sar bh, 0xff
0x483ca6    dec dword [rax-0x39]
0x483ca9    ret 0xffff

------> offset: 0x483ca6
0x483ca6    dec dword [rax-0x39]
0x483ca9    ret 0xffff

------> offset: 0x483e0b
0x483e0b    and al, 0x10
0x483e0d    mov rax, rdx
0x483e10    add rsp, 0x28
0x483e14    ret

------> offset: 0x483e0d
0x483e0d    mov rax, rdx
0x483e10    add rsp, 0x28
0x483e14    ret

------> offset: 0x483e0e
0x483e0e    mov eax, edx
0x483e10    add rsp, 0x28
0x483e14    ret

------> offset: 0x483e46
0x483e46    add rsp, 0x8
0x483e4a    movzx eax, al
0x483e4d    neg eax
0x483e4f    ret

------> offset: 0x483e47
0x483e47    add esp, 0x8
0x483e4a    movzx eax, al
0x483e4d    neg eax
0x483e4f    ret

------> offset: 0x483e49
0x483e49    or [rdi], cl
0x483e4b    mov dh, 0xc0
0x483e4d    neg eax
0x483e4f    ret

------> offset: 0x483e62
0x483e62    add [rax], al
0x483e64    mov [rbx+0x18], rax
0x483e68    pop rbx
0x483e69    ret

------> offset: 0x483e64
0x483e64    mov [rbx+0x18], rax
0x483e68    pop rbx
0x483e69    ret

------> offset: 0x483e65
0x483e65    mov [rbx+0x18], eax
0x483e68    pop rbx
0x483e69    ret

------> offset: 0x483ebb
0x483ebb    add rsp, 0x20
0x483ebf    mov rax, rbx
0x483ec2    pop rbx
0x483ec3    ret

------> offset: 0x483ebc
0x483ebc    add esp, 0x20
0x483ebf    mov rax, rbx
0x483ec2    pop rbx
0x483ec3    ret

------> offset: 0x483ee6
0x483ee6    add [rax], al
0x483ee8    mov [rbx+0x20], rax
0x483eec    pop rbx
0x483eed    ret

------> offset: 0x483f65
0x483f65    add rsp, 0x40
0x483f69    mov rax, rbx
0x483f6c    pop rbx
0x483f6d    ret

------> offset: 0x483f66
0x483f66    add esp, 0x40
0x483f69    mov rax, rbx
0x483f6c    pop rbx
0x483f6d    ret

------> offset: 0x484012
0x484012    add [rcx], dh
0x484014    ror [rax], cl
0x484016    leave
0x484017    cmovz rax, rdx
0x48401b    ret

------> offset: 0x484013
0x484013    xor edx, edx
0x484015    or cl, cl
0x484017    cmovz rax, rdx
0x48401b    ret

------> offset: 0x484014
0x484014    ror [rax], cl
0x484016    leave
0x484017    cmovz rax, rdx
0x48401b    ret

------> offset: 0x484015
0x484015    or cl, cl
0x484017    cmovz rax, rdx
0x48401b    ret

------> offset: 0x484016
0x484016    leave
0x484017    cmovz rax, rdx
0x48401b    ret

------> offset: 0x484017
0x484017    cmovz rax, rdx
0x48401b    ret

------> offset: 0x48402a
0x48402a    ret 0xfb48

------> offset: 0x48405e
0x48405e    jnz 0x484067
0x484060    lea rax, [rip+0x79]
0x484067    ret

------> offset: 0x484063
0x484063    jns 0x484065
0x484065    add [rax], al
0x484067    ret

------> offset: 0x4840c1
0x4840c1    jnz 0x4840ca
0x4840c3    lea rax, [rip+0x6]
0x4840ca    ret

------> offset: 0x484294
0x484294    pop rcx
0x484295    and al, 0x0
0x484297    add [rbp-0x77], cl
0x48429a    retf

------> offset: 0x484295
0x484295    and al, 0x0
0x484297    add [rbp-0x77], cl
0x48429a    retf

------> offset: 0x48443e
0x48443e    and al, [rax]
0x484440    add [rbp-0x77], cl
0x484443    retf

------> offset: 0x48468e
0x48468e    and [rax], al
0x484690    add [rbp-0x77], cl
0x484693    retf

------> offset: 0x484b2c
0x484b2c    test al, al
0x484b2e    sbb eax, [rax]
0x484b30    add [rbp-0x77], cl
0x484b33    retf

------> offset: 0x484b2d
0x484b2d    rcr byte [rbx], 0x0
0x484b30    add [rbp-0x77], cl
0x484b33    retf

------> offset: 0x484b2e
0x484b2e    sbb eax, [rax]
0x484b30    add [rbp-0x77], cl
0x484b33    retf

------> offset: 0x484d7e
0x484d7e    sbb [rax], eax
0x484d80    add [rbp-0x77], cl
0x484d83    retf

------> offset: 0x48521c
0x48521c    test al, dl
0x48521e    adc al, 0x0
0x485220    add [rbp-0x77], cl
0x485223    retf

------> offset: 0x48521d
0x48521d    rcl byte [rax+rax], 0x1
0x485220    add [rbp-0x77], cl
0x485223    retf

------> offset: 0x48546d
0x48546d    adc byte [rdx], 0x0
0x485470    add [rbp-0x77], cl
0x485473    retf

------> offset: 0x48546e
0x48546e    adc al, [rax]
0x485470    add [rbp-0x77], cl
0x485473    retf

------> offset: 0x4856bc
0x4856bc    test [rax], dh
0x4856be    adc [rax], al
0x4856c0    add [rbp-0x77], cl
0x4856c3    retf

------> offset: 0x48590c
0x48590c    test al, ah
0x48590e    or eax, 0xffffffff894d0000
0x485913    retf

------> offset: 0x485b5d
0x485b5d    nop
0x485b5e    or eax, [rax]
0x485b60    add [rbp-0x77], cl
0x485b63    retf

------> offset: 0x485dad
0x485dad    or [rax], eax
0x485db0    add [rbp-0x77], cl
0x485db3    retf

------> offset: 0x48649d
0x48649d    push rax
0x48649e    add al, [rax]
0x4864a0    add [rbp-0x77], cl
0x4864a3    retf

------> offset: 0x4868dd
0x4868dd    sbb eax, 0xffffffff894d0000
0x4868e2    retf

------> offset: 0x4869d3
0x4869d3    sbb al, 0x0
0x4869d5    add [rcx+0x29], cl
0x4869d8    retf

------> offset: 0x4869d5
0x4869d5    add [rcx+0x29], cl
0x4869d8    retf

------> offset: 0x486a78
0x486a78    test [rsp+rbx+0x0], al
0x486a7c    add [rbp-0x77], cl
0x486a7f    retf

------> offset: 0x486a79
0x486a79    sbb al, 0x0
0x486a7c    add [rbp-0x77], cl
0x486a7f    retf

------> offset: 0x486a9c
0x486a9c    adc [rax], al
0x486a9e    add [rax-0x77], cl
0x486aa1    retf 0x6666

------> offset: 0x486b20
0x486b20    popf
0x486b21    sbb eax, [rax]
0x486b23    add [rax-0x7d], cl
0x486b26    ret 0x4910

------> offset: 0x486b21
0x486b21    sbb eax, [rax]
0x486b23    add [rax-0x7d], cl
0x486b26    ret 0x4910

------> offset: 0x486b27
0x486b27    adc [rcx-0x7d], cl
0x486b2a    ret 0xf10

------> offset: 0x486b99
0x486b99    sbb eax, [rax]
0x486b9b    add [rax-0x7d], cl
0x486b9e    ret 0xe910

------> offset: 0x486c58
0x486c58    test [rdx+rbx+0x0], ah
0x486c5c    add [rbp-0x77], cl
0x486c5f    retf

------> offset: 0x486c59
0x486c59    sbb al, [fs:rax]
0x486c5c    add [rbp-0x77], cl
0x486c5f    retf

------> offset: 0x486c5a
0x486c5a    sbb al, [rax]
0x486c5c    add [rbp-0x77], cl
0x486c5f    retf

------> offset: 0x486d01
0x486d01    sbb [rax], eax
0x486d03    add [rax-0x7d], cl
0x486d06    ret 0x4910

------> offset: 0x486d78
0x486d78    sbb [r8], r8d
0x486d7b    add [rax-0x7d], cl
0x486d7e    ret 0xe910

------> offset: 0x486d79
0x486d79    sbb [rax], eax
0x486d7b    add [rax-0x7d], cl
0x486d7e    ret 0xe910

------> offset: 0x486e38
0x486e38    test [rax+rbx-0x76b30000], al
0x486e3f    retf

------> offset: 0x486e3a
0x486e3a    sbb [rax], al
0x486e3c    add [rbp-0x77], cl
0x486e3f    retf

------> offset: 0x487008
0x487008    test [rsi+rdx-0x76b30000], dh
0x48700f    retf

------> offset: 0x487128
0x487128    xchg ebp, eax
0x487129    adc eax, 0xffffffff83480000
0x48712e    ret 0xe910

------> offset: 0x4871e8
0x4871e8    test ah, dl
0x4871ea    adc al, 0x0
0x4871ec    add [rbp-0x77], cl
0x4871ef    retf

------> offset: 0x487309
0x487309    adc eax, [rax]
0x48730b    add [rax-0x7d], cl
0x48730e    ret 0xe910

------> offset: 0x4873c8
0x4873c8    test ah, dh
0x4873ca    adc al, [rax]
0x4873cc    add [rbp-0x77], cl
0x4873cf    retf

------> offset: 0x4873c9
0x4873c9    hlt
0x4873ca    adc al, [rax]
0x4873cc    add [rbp-0x77], cl
0x4873cf    retf

------> offset: 0x487470
0x487470    adc r8b, [r8]
0x487473    add [rax-0x7d], cl
0x487476    ret 0x4910

------> offset: 0x4874e7
0x4874e7    xchg ch, dl
0x4874e9    adc [rax], eax
0x4874eb    add [rax-0x7d], cl
0x4874ee    ret 0xe910

------> offset: 0x487650
0x487650    ins dword [rdi], dx
0x487651    adc [rax], al
0x487653    add [rax-0x7d], cl
0x487656    ret 0x4910

------> offset: 0x487968
0x487968    test [rbp+rcx+0x0], dl
0x48796c    add [rbp-0x77], cl
0x48796f    retf

------> offset: 0x487969
0x487969    push rsp
0x48796a    or eax, 0xffffffff894d0000
0x48796f    retf

------> offset: 0x487a10
0x487a10    lodsd
0x487a11    or al, 0x0
0x487a13    add [rax-0x7d], cl
0x487a16    ret 0x4910

------> offset: 0x487b48
0x487b48    test [rbx+rcx+0x0], dh
0x487b4c    add [rbp-0x77], cl
0x487b4f    retf

------> offset: 0x487bef
0x487bef    xchg ch, cl
0x487bf1    or al, [rax]
0x487bf3    add [rax-0x7d], cl
0x487bf6    ret 0x4910

------> offset: 0x487c68
0x487c68    push rbp
0x487c69    or al, [rax]
0x487c6b    add [rax-0x7d], cl
0x487c6e    ret 0xe910

------> offset: 0x487d28
0x487d28    test [rcx+rcx-0x76b30000], dl
0x487d2f    retf

------> offset: 0x487d29
0x487d29    xchg esp, eax
0x487d2a    or [rax], eax
0x487d2c    add [rbp-0x77], cl
0x487d2f    retf

------> offset: 0x487dcf
0x487dcf    xchg ch, ch
0x487dd1    or [rax], al
0x487dd3    add [rax-0x7d], cl
0x487dd6    ret 0x4910

------> offset: 0x487dd0
0x487dd0    in eax, dx
0x487dd1    or [rax], al
0x487dd3    add [rax-0x7d], cl
0x487dd6    ret 0x4910

------> offset: 0x487f08
0x487f08    test [rdi+rax-0x76b30000], dh
0x487f0f    retf

------> offset: 0x4880e8
0x4880e8    test ah, dl
0x4880ea    add eax, 0xffffffff894d0000
0x4880ef    retf

------> offset: 0x4882c8
0x4882c8    test ah, dh
0x4882ca    add eax, [rax]
0x4882cc    add [rbp-0x77], cl
0x4882cf    retf

------> offset: 0x4882c9
0x4882c9    hlt
0x4882ca    add eax, [rax]
0x4882cc    add [rbp-0x77], cl
0x4882cf    retf

------> offset: 0x4882ca
0x4882ca    add eax, [rax]
0x4882cc    add [rbp-0x77], cl
0x4882cf    retf

------> offset: 0x488370
0x488370    add r8, [r8]
0x488373    add [rax-0x7d], cl
0x488376    ret 0x4910

------> offset: 0x4883e7
0x4883e7    xchg ch, dl
0x4883e9    add al, [rax]
0x4883eb    add [rax-0x7d], cl
0x4883ee    ret 0xe910

------> offset: 0x488550
0x488550    ins dword [rdi], dx
0x488551    add [rax], eax
0x488553    add [rax-0x7d], cl
0x488556    ret 0x4910

------> offset: 0x4885c7
0x4885c7    xchg ch, dh
0x4885c9    add [rax], al
0x4885cb    add [rax-0x7d], cl
0x4885ce    ret 0xe910

------> offset: 0x4885c8
0x4885c8    cmc
0x4885c9    add [rax], al
0x4885cb    add [rax-0x7d], cl
0x4885ce    ret 0xe910

------> offset: 0x488993
0x488993    jmp 0x7a0e5a90
0x488998    xlat byte [rbx+al]
0x488999    retf 0xead3

------> offset: 0x488994
0x488994    clc
0x488995    rol ch, 0x1
0x488997    jns 0x488970
0x488999    retf 0xead3

------> offset: 0x488995
0x488995    rol ch, 0x1
0x488997    jns 0x488970
0x488999    retf 0xead3

------> offset: 0x488997
0x488997    jns 0x488970
0x488999    retf 0xead3

------> offset: 0x488aa1
0x488aa1    xchg bl, cl
0x488aa3    adc eax, 0xffffffff83480000
0x488aa8    ret 0xe910

------> offset: 0x488b13
0x488b13    jmp 0x7a0e5c10
0x488b18    xlat byte [rbx+al]
0x488b19    retf 0xead3

------> offset: 0x488b14
0x488b14    clc
0x488b15    rol ch, 0x1
0x488b17    jns 0x488af0
0x488b19    retf 0xead3

------> offset: 0x488b15
0x488b15    rol ch, 0x1
0x488b17    jns 0x488af0
0x488b19    retf 0xead3

------> offset: 0x488b17
0x488b17    jns 0x488af0
0x488b19    retf 0xead3

------> offset: 0x488b3e
0x488b3e    test [rsi], ch
0x488b40    adc eax, 0xffffffff894d0000
0x488b45    retf

------> offset: 0x488b3f
0x488b3f    adc eax, 0xffffffff894d0000
0x488b45    retf

------> offset: 0x488bc7
0x488bc7    cmpsb
0x488bc8    adc al, 0x0
0x488bca    add [rax-0x7d], cl
0x488bcd    ret 0x4910

------> offset: 0x488c22
0x488c22    adc al, 0x0
0x488c25    add [rax-0x7d], cl
0x488c28    ret 0xe910

------> offset: 0x488c93
0x488c93    jmp 0x7a0e5d90
0x488c98    xlat byte [rbx+al]
0x488c99    retf 0xead3

------> offset: 0x488c94
0x488c94    clc
0x488c95    rol ch, 0x1
0x488c97    jns 0x488c70
0x488c99    retf 0xead3

------> offset: 0x488c95
0x488c95    rol ch, 0x1
0x488c97    jns 0x488c70
0x488c99    retf 0xead3

------> offset: 0x488c97
0x488c97    jns 0x488c70
0x488c99    retf 0xead3

------> offset: 0x488cbf
0x488cbf    scasb
0x488cc0    adc eax, [rax]
0x488cc2    add [rbp-0x77], cl
0x488cc5    retf

------> offset: 0x488d3e
0x488d3e    xchg [rsi], ch
0x488d40    adc eax, [rax]
0x488d42    add [rax-0x7d], cl
0x488d45    ret 0x4910

------> offset: 0x488d99
0x488d99    xchg bl, dl
0x488d9b    adc al, [rax]
0x488d9d    add [rax-0x7d], cl
0x488da0    ret 0xe910

------> offset: 0x488e13
0x488e13    jmp 0x7a0e5f10
0x488e18    xlat byte [rbx+al]
0x488e19    retf 0xead3

------> offset: 0x488e14
0x488e14    clc
0x488e15    rol ch, 0x1
0x488e17    jns 0x488df0
0x488e19    retf 0xead3

------> offset: 0x488e15
0x488e15    rol ch, 0x1
0x488e17    jns 0x488df0
0x488e19    retf 0xead3

------> offset: 0x488e17
0x488e17    jns 0x488df0
0x488e19    retf 0xead3

------> offset: 0x488e3e
0x488e3e    test [rsi], ch
0x488e40    adc al, [rax]
0x488e42    add [rbp-0x77], cl
0x488e45    retf

------> offset: 0x488ec7
0x488ec7    cmpsb
0x488ec8    adc [rax], eax
0x488eca    add [rax-0x7d], cl
0x488ecd    ret 0x4910

------> offset: 0x488f22
0x488f22    adc [r8], rax
0x488f25    add [rax-0x7d], cl
0x488f28    ret 0xe910

------> offset: 0x488f93
0x488f93    jmp 0x7a0e6090
0x488f98    xlat byte [rbx+al]
0x488f99    retf 0xead3

------> offset: 0x488f94
0x488f94    clc
0x488f95    rol ch, 0x1
0x488f97    jns 0x488f70
0x488f99    retf 0xead3

------> offset: 0x488f95
0x488f95    rol ch, 0x1
0x488f97    jns 0x488f70
0x488f99    retf 0xead3

------> offset: 0x488f97
0x488f97    jns 0x488f70
0x488f99    retf 0xead3

------> offset: 0x488fbf
0x488fbf    scasb
0x488fc0    adc [rax], al
0x488fc2    add [rbp-0x77], cl
0x488fc5    retf

------> offset: 0x489046
0x489046    xchg [rsi], ah
0x489048    adc [rax], al
0x48904a    add [rax-0x7d], cl
0x48904d    ret 0x4910

------> offset: 0x489113
0x489113    jmp 0x7a0e6210
0x489118    xlat byte [rbx+al]
0x489119    retf 0xead3

------> offset: 0x489114
0x489114    clc
0x489115    rol ch, 0x1
0x489117    jns 0x4890f0
0x489119    retf 0xead3

------> offset: 0x489115
0x489115    rol ch, 0x1
0x489117    jns 0x4890f0
0x489119    retf 0xead3

------> offset: 0x489117
0x489117    jns 0x4890f0
0x489119    retf 0xead3

------> offset: 0x489293
0x489293    jmp 0x7a0e6390
0x489298    xlat byte [rbx+al]
0x489299    retf 0xead3

------> offset: 0x489294
0x489294    clc
0x489295    rol ch, 0x1
0x489297    jns 0x489270
0x489299    retf 0xead3

------> offset: 0x489295
0x489295    rol ch, 0x1
0x489297    jns 0x489270
0x489299    retf 0xead3

------> offset: 0x489297
0x489297    jns 0x489270
0x489299    retf 0xead3

------> offset: 0x4892bf
0x4892bf    scasb
0x4892c0    or eax, 0xffffffff894d0000
0x4892c5    retf

------> offset: 0x489346
0x489346    xchg [rsi], ah
0x489348    or eax, 0xffffffff83480000
0x48934d    ret 0x4910

------> offset: 0x4893a1
0x4893a1    xchg bl, cl
0x4893a3    or al, 0x0
0x4893a5    add [rax-0x7d], cl
0x4893a8    ret 0xe910

------> offset: 0x489413
0x489413    jmp 0x7a0e6510
0x489418    xlat byte [rbx+al]
0x489419    retf 0xead3

------> offset: 0x489414
0x489414    clc
0x489415    rol ch, 0x1
0x489417    jns 0x4893f0
0x489419    retf 0xead3

------> offset: 0x489415
0x489415    rol ch, 0x1
0x489417    jns 0x4893f0
0x489419    retf 0xead3

------> offset: 0x489417
0x489417    jns 0x4893f0
0x489419    retf 0xead3

------> offset: 0x48943e
0x48943e    test [rsi], ch
0x489440    or al, 0x0
0x489442    add [rbp-0x77], cl
0x489445    retf

------> offset: 0x48943f
0x48943f    or al, 0x0
0x489442    add [rbp-0x77], cl
0x489445    retf

------> offset: 0x4894c7
0x4894c7    cmpsb
0x4894c8    or eax, [rax]
0x4894ca    add [rax-0x7d], cl
0x4894cd    ret 0x4910

------> offset: 0x489522
0x489522    or rax, [r8]
0x489525    add [rax-0x7d], cl
0x489528    ret 0xe910

------> offset: 0x489593
0x489593    jmp 0x7a0e6690
0x489598    xlat byte [rbx+al]
0x489599    retf 0xead3

------> offset: 0x489594
0x489594    clc
0x489595    rol ch, 0x1
0x489597    jns 0x489570
0x489599    retf 0xead3

------> offset: 0x489595
0x489595    rol ch, 0x1
0x489597    jns 0x489570
0x489599    retf 0xead3

------> offset: 0x489597
0x489597    jns 0x489570
0x489599    retf 0xead3

------> offset: 0x4895bf
0x4895bf    scasb
0x4895c0    or al, [rax]
0x4895c2    add [rbp-0x77], cl
0x4895c5    retf

------> offset: 0x489646
0x489646    xchg [rsi], ah
0x489648    or al, [rax]
0x48964a    add [rax-0x7d], cl
0x48964d    ret 0x4910

------> offset: 0x4896a1
0x4896a1    xchg bl, cl
0x4896a3    or [rax], eax
0x4896a5    add [rax-0x7d], cl
0x4896a8    ret 0xe910

------> offset: 0x489713
0x489713    jmp 0x7a0e6810
0x489718    xlat byte [rbx+al]
0x489719    retf 0xead3

------> offset: 0x489714
0x489714    clc
0x489715    rol ch, 0x1
0x489717    jns 0x4896f0
0x489719    retf 0xead3

------> offset: 0x489715
0x489715    rol ch, 0x1
0x489717    jns 0x4896f0
0x489719    retf 0xead3

------> offset: 0x489717
0x489717    jns 0x4896f0
0x489719    retf 0xead3

------> offset: 0x48973e
0x48973e    test [rsi], ch
0x489740    or [rax], eax
0x489742    add [rbp-0x77], cl
0x489745    retf

------> offset: 0x4897c7
0x4897c7    cmpsb
0x4897c8    or [rax], al
0x4897ca    add [rax-0x7d], cl
0x4897cd    ret 0x4910

------> offset: 0x489822
0x489822    or [r8], al
0x489825    add [rax-0x7d], cl
0x489828    ret 0xe910

------> offset: 0x489893
0x489893    jmp 0x7a0e6990
0x489898    xlat byte [rbx+al]
0x489899    retf 0xead3

------> offset: 0x489894
0x489894    clc
0x489895    rol ch, 0x1
0x489897    jns 0x489870
0x489899    retf 0xead3

------> offset: 0x489895
0x489895    rol ch, 0x1
0x489897    jns 0x489870
0x489899    retf 0xead3

------> offset: 0x489897
0x489897    jns 0x489870
0x489899    retf 0xead3

------> offset: 0x489a13
0x489a13    jmp 0x7a0e6b10
0x489a18    xlat byte [rbx+al]
0x489a19    retf 0xead3

------> offset: 0x489a14
0x489a14    clc
0x489a15    rol ch, 0x1
0x489a17    jns 0x4899f0
0x489a19    retf 0xead3

------> offset: 0x489a15
0x489a15    rol ch, 0x1
0x489a17    jns 0x4899f0
0x489a19    retf 0xead3

------> offset: 0x489a17
0x489a17    jns 0x4899f0
0x489a19    retf 0xead3

------> offset: 0x489ac7
0x489ac7    cmpsb
0x489ac8    add eax, 0xffffffff83480000
0x489acd    ret 0x4910

------> offset: 0x489b22
0x489b22    add rax, 0xffffffff83480000
0x489b28    ret 0xe910

------> offset: 0x489b93
0x489b93    jmp 0x7a0e6c90
0x489b98    xlat byte [rbx+al]
0x489b99    retf 0xead3

------> offset: 0x489b94
0x489b94    clc
0x489b95    rol ch, 0x1
0x489b97    jns 0x489b70
0x489b99    retf 0xead3

------> offset: 0x489b95
0x489b95    rol ch, 0x1
0x489b97    jns 0x489b70
0x489b99    retf 0xead3

------> offset: 0x489b97
0x489b97    jns 0x489b70
0x489b99    retf 0xead3

------> offset: 0x489bbf
0x489bbf    scasb
0x489bc0    add al, 0x0
0x489bc2    add [rbp-0x77], cl
0x489bc5    retf

------> offset: 0x489ca1
0x489ca1    xchg bl, cl
0x489ca3    add eax, [rax]
0x489ca5    add [rax-0x7d], cl
0x489ca8    ret 0xe910

------> offset: 0x489d13
0x489d13    jmp 0x7a0e6e10
0x489d18    xlat byte [rbx+al]
0x489d19    retf 0xead3

------> offset: 0x489d14
0x489d14    clc
0x489d15    rol ch, 0x1
0x489d17    jns 0x489cf0
0x489d19    retf 0xead3

------> offset: 0x489d15
0x489d15    rol ch, 0x1
0x489d17    jns 0x489cf0
0x489d19    retf 0xead3

------> offset: 0x489d17
0x489d17    jns 0x489cf0
0x489d19    retf 0xead3

------> offset: 0x489d3e
0x489d3e    test [rsi], ch
0x489d40    add eax, [rax]
0x489d42    add [rbp-0x77], cl
0x489d45    retf

------> offset: 0x489dc7
0x489dc7    cmpsb
0x489dc8    add al, [rax]
0x489dca    add [rax-0x7d], cl
0x489dcd    ret 0x4910

------> offset: 0x489e22
0x489e22    add al, [r8]
0x489e25    add [rax-0x7d], cl
0x489e28    ret 0xe910

------> offset: 0x489e93
0x489e93    jmp 0x7a0e6f90
0x489e98    xlat byte [rbx+al]
0x489e99    retf 0xead3

------> offset: 0x489e94
0x489e94    clc
0x489e95    rol ch, 0x1
0x489e97    jns 0x489e70
0x489e99    retf 0xead3

------> offset: 0x489e95
0x489e95    rol ch, 0x1
0x489e97    jns 0x489e70
0x489e99    retf 0xead3

------> offset: 0x489e97
0x489e97    jns 0x489e70
0x489e99    retf 0xead3

------> offset: 0x489ebf
0x489ebf    scasb
0x489ec0    add [rax], eax
0x489ec2    add [rbp-0x77], cl
0x489ec5    retf

------> offset: 0x489f46
0x489f46    xchg [rsi], ah
0x489f48    add [rax], eax
0x489f4a    add [rax-0x7d], cl
0x489f4d    ret 0x4910

------> offset: 0x489f9d
0x489f9d    xchg bh, cl
0x489f9f    add [rax], al
0x489fa1    add [rax-0x7d], cl
0x489fa4    ret 0xe910

------> offset: 0x48a264
0x48a264    imul esp, [rbx], 0xffffffff894d0000
0x48a26a    retf

------> offset: 0x48a265
0x48a265    and eax, [rax]
0x48a267    add [rbp-0x77], cl
0x48a26a    retf

------> offset: 0x48a40c
0x48a40c    test al, al
0x48a40e    and [rax], eax
0x48a410    add [rbp-0x77], cl
0x48a413    retf

------> offset: 0x48a40d
0x48a40d    shl byte [rcx], 0x0
0x48a410    add [rbp-0x77], cl
0x48a413    retf

------> offset: 0x48a40e
0x48a40e    and [rax], eax
0x48a410    add [rbp-0x77], cl
0x48a413    retf

------> offset: 0x48a64d
0x48a64d    sbb byte [rdi], 0x0
0x48a650    add [rbp-0x77], cl
0x48a653    retf

------> offset: 0x48aacc
0x48aacc    test [rax], al
0x48aace    sbb eax, [rax]
0x48aad0    add [rbp-0x77], cl
0x48aad3    retf

------> offset: 0x48ad0c
0x48ad0c    test al, al
0x48ad0e    sbb [rax], al
0x48ad10    add [rbp-0x77], cl
0x48ad13    retf

------> offset: 0x48ad0d
0x48ad0d    rcr byte [rax], 0x0
0x48ad10    add [rbp-0x77], cl
0x48ad13    retf

------> offset: 0x48af4d
0x48af4d    adc byte [rsi], 0x0
0x48af50    add [rbp-0x77], cl
0x48af53    retf

------> offset: 0x48b3cc
0x48b3cc    test [rax], al
0x48b3ce    adc al, [rax]
0x48b3d0    add [rbp-0x77], cl
0x48b3d3    retf

------> offset: 0x48b60d
0x48b60d    ror byte [rdi], 0x0
0x48b610    add [rbp-0x77], cl
0x48b613    retf

------> offset: 0x48bccc
0x48bccc    test [rax], al
0x48bcce    or [rax], eax
0x48bcd0    add [rbp-0x77], cl
0x48bcd3    retf

------> offset: 0x48bf0d
0x48bf0d    rol byte [rsi], 0x0
0x48bf10    add [rbp-0x77], cl
0x48bf13    retf

------> offset: 0x48c631
0x48c631    add al, 0x81
0x48c633    sub eax, [rcx+r8*4]
0x48c637    jz 0x48c610
0x48c639    ret

------> offset: 0x48c632
0x48c632    add dword [rdx+0x2b], 0xffffffffd7748104
0x48c639    ret

------> offset: 0x48c633
0x48c633    sub eax, [rcx+r8*4]
0x48c637    jz 0x48c610
0x48c639    ret

------> offset: 0x48c634
0x48c634    sub eax, [rcx+rax*4]
0x48c637    jz 0x48c610
0x48c639    ret

------> offset: 0x48c635
0x48c635    add al, 0x81
0x48c637    jz 0x48c610
0x48c639    ret

------> offset: 0x48c637
0x48c637    jz 0x48c610
0x48c639    ret

------> offset: 0x48c661
0x48c661    jno 0x48c686
0x48c663    add [rax-0x77], cl
0x48c666    ret 0xc148

------> offset: 0x48c696
0x48c696    mov dh, 0x71
0x48c698    and eax, [rax]
0x48c69a    add word [rdx+rax*2], 0x1
0x48c69f    ret

------> offset: 0x48c698
0x48c698    and eax, [rax]
0x48c69a    add word [rdx+rax*2], 0x1
0x48c69f    ret

------> offset: 0x48c69a
0x48c69a    add word [rdx+rax*2], 0x1
0x48c69f    ret

------> offset: 0x48c69b
0x48c69b    add dword [rdx+rax*2], 0x1
0x48c69f    ret

------> offset: 0x48c89e
0x48c89e    add [rax], al
0x48c8a0    mov eax, [rip+0x2376b2]
0x48c8a6    ret

------> offset: 0x48c8a0
0x48c8a0    mov eax, [rip+0x2376b2]
0x48c8a6    ret

------> offset: 0x48c8a1
0x48c8a1    add eax, 0x2376b2
0x48c8a6    ret

------> offset: 0x48c8a2
0x48c8a2    mov dl, 0x76
0x48c8a4    and eax, [rax]
0x48c8a6    ret

------> offset: 0x48c8a4
0x48c8a4    and eax, [rax]
0x48c8a6    ret

------> offset: 0x48c8e5
0x48c8e5    mov [rbx], rax
0x48c8e8    add rsp, 0x10
0x48c8ec    pop rbx
0x48c8ed    ret

------> offset: 0x48c8e6
0x48c8e6    mov [rbx], eax
0x48c8e8    add rsp, 0x10
0x48c8ec    pop rbx
0x48c8ed    ret

------> offset: 0x48ca03
0x48ca03    xor eax, [rcx-0x7d]
0x48ca06    iret

------> offset: 0x48cb88
0x48cb88    rol byte [rbp+0xf], 0xb6
0x48cb8c    adc [rax-0x77], cl
0x48cb8f    retf 0x894c

------> offset: 0x48cb8c
0x48cb8c    adc [rax-0x77], cl
0x48cb8f    retf 0x894c

------> offset: 0x48cbb1
0x48cbb1    ret 0xc984

------> offset: 0x48cc43
0x48cc43    call 0x48c8f0
0x48cc48    add rsp, 0x28
0x48cc4c    ret

------> offset: 0x48cc78
0x48cc78    ret 0x5489

------> offset: 0x48cc7a
0x48cc7a    push rsp
0x48cc7b    and al, 0xfc
0x48cc7d    movss xmm0, [rsp-0x4]
0x48cc83    ret

------> offset: 0x48cc7b
0x48cc7b    and al, 0xfc
0x48cc7d    movss xmm0, [rsp-0x4]
0x48cc83    ret

------> offset: 0x48cc7c
0x48cc7c    cld
0x48cc7d    movss xmm0, [rsp-0x4]
0x48cc83    ret

------> offset: 0x48cc7d
0x48cc7d    movss xmm0, [rsp-0x4]
0x48cc83    ret

------> offset: 0x48cc7e
0x48cc7e    movups xmm0, [rsp-0x4]
0x48cc83    ret

------> offset: 0x48cc7f
0x48cc7f    adc [rsp-0x4], al
0x48cc83    ret

------> offset: 0x48cc80
0x48cc80    and al, 0xfc
0x48cc83    ret

------> offset: 0x48ccba
0x48ccba    retf 0x948

------> offset: 0x48ccc0
0x48ccc0    push rsp
0x48ccc1    and al, 0xf8
0x48ccc3    movsd xmm0, [rsp-0x8]
0x48ccc9    ret

------> offset: 0x48ccc1
0x48ccc1    and al, 0xf8
0x48ccc3    movsd xmm0, [rsp-0x8]
0x48ccc9    ret

------> offset: 0x48ccc2
0x48ccc2    clc
0x48ccc3    movsd xmm0, [rsp-0x8]
0x48ccc9    ret

------> offset: 0x48ccc3
0x48ccc3    movsd xmm0, [rsp-0x8]
0x48ccc9    ret

------> offset: 0x48ccc4
0x48ccc4    movups xmm0, [rsp-0x8]
0x48ccc9    ret

------> offset: 0x48ccc5
0x48ccc5    adc [rsp-0x8], al
0x48ccc9    ret

------> offset: 0x48ccc6
0x48ccc6    and al, 0xf8
0x48ccc9    ret

------> offset: 0x48cd05
0x48cd05    and [rcx-0x2413dbbc], cl
0x48cd0b    ins byte [rdi], dx
0x48cd0c    and al, 0xe8
0x48cd0e    ret

------> offset: 0x48cd06
0x48cd06    mov [rsp-0x14], eax
0x48cd0a    fld tbyte [rsp-0x18]
0x48cd0e    ret

------> offset: 0x48cd07
0x48cd07    and al, 0xec
0x48cd0a    fld tbyte [rsp-0x18]
0x48cd0e    ret

------> offset: 0x48cd09
0x48cd09    in al, dx
0x48cd0a    fld tbyte [rsp-0x18]
0x48cd0e    ret

------> offset: 0x48cd0a
0x48cd0a    fld tbyte [rsp-0x18]
0x48cd0e    ret

------> offset: 0x48cd0b
0x48cd0b    ins byte [rdi], dx
0x48cd0c    and al, 0xe8
0x48cd0e    ret

------> offset: 0x48cd0c
0x48cd0c    and al, 0xe8
0x48cd0e    ret

------> offset: 0x48cd6d
0x48cd6d    shl rdx, cl
0x48cd70    or r8, rdx
0x48cd73    mov [rsi], r8
0x48cd76    ret

------> offset: 0x48cd6e
0x48cd6e    shl edx, cl
0x48cd70    or r8, rdx
0x48cd73    mov [rsi], r8
0x48cd76    ret

------> offset: 0x48cd6f
0x48cd6f    loop 0x48cdba
0x48cd71    or eax, edx
0x48cd73    mov [rsi], r8
0x48cd76    ret

------> offset: 0x48cd70
0x48cd70    or r8, rdx
0x48cd73    mov [rsi], r8
0x48cd76    ret

------> offset: 0x48cd71
0x48cd71    or eax, edx
0x48cd73    mov [rsi], r8
0x48cd76    ret

------> offset: 0x48cd72
0x48cd72    ror byte [rcx+rcx*4+0x6], 0x1
0x48cd76    ret

------> offset: 0x48cd73
0x48cd73    mov [rsi], r8
0x48cd76    ret

------> offset: 0x48d171
0x48d171    or ecx, ebp
0x48d173    ret

------> offset: 0x48d1c2
0x48d1c2    add [rax], eax
0x48d1c4    add [rax-0x77], cl
0x48d1c7    ret 0x8948

------> offset: 0x48d66e
0x48d66e    test eax, edx
0x48d670    add [rax], al
0x48d672    add cl, ch
0x48d674    ret 0xfff7

------> offset: 0x48d670
0x48d670    add [rax], al
0x48d672    add cl, ch
0x48d674    ret 0xfff7

------> offset: 0x48d672
0x48d672    add cl, ch
0x48d674    ret 0xfff7

------> offset: 0x48d674
0x48d674    ret 0xfff7

------> offset: 0x48d68d
0x48d68d    ror dword [rax+0xf], 0x1
0x48d690    retf

------> offset: 0x48d6b4
0x48d6b4    mov edi, 0xffffffff83480170
0x48d6b9    rol byte [rbx], 0xeb
0x48d6bc    ret

------> offset: 0x48d6b6
0x48d6b6    add [rax-0x7d], ecx
0x48d6b9    rol byte [rbx], 0xeb
0x48d6bc    ret

------> offset: 0x48d6b9
0x48d6b9    rol byte [rbx], 0xeb
0x48d6bc    ret

------> offset: 0x48d6ba
0x48d6ba    add ebp, ebx
0x48d6bc    ret

------> offset: 0x48d7ee
0x48d7ee    add [rax], cl
0x48d7f0    mov byte [rip+0x236089], 0x8
0x48d7f7    ret

------> offset: 0x48d7f0
0x48d7f0    mov byte [rip+0x236089], 0x8
0x48d7f7    ret

------> offset: 0x48d7f2
0x48d7f2    mov [rax+0x23], esp
0x48d7f5    add [rax], cl
0x48d7f7    ret

------> offset: 0x48d7f5
0x48d7f5    add [rax], cl
0x48d7f7    ret

------> offset: 0x48d98f
0x48d98f    add [rax-0x73], cl
0x48d992    jz 0x48d9b8
0x48d994    cmp [rax-0x7d], cl
0x48d997    ret

------> offset: 0x48d992
0x48d992    jz 0x48d9b8
0x48d994    cmp [rax-0x7d], cl
0x48d997    ret

------> offset: 0x48d994
0x48d994    cmp [rax-0x7d], cl
0x48d997    ret

------> offset: 0x48dd81
0x48dd81    ret 0xa8

------> offset: 0x48dd83
0x48dd83    add [rax], al
0x48dd85    add [rax+0x29], cl
0x48dd88    ret 0x2948

------> offset: 0x48dd85
0x48dd85    add [rax+0x29], cl
0x48dd88    ret 0x2948

------> offset: 0x48ddfd
0x48ddfd    ror dword [rdi], 0xb6
0x48de00    add [r8-0x7d], ecx
0x48de04    ret

------> offset: 0x48ddff
0x48ddff    mov dh, 0x43
0x48de01    add [rax-0x7d], ecx
0x48de04    ret

------> offset: 0x48de00
0x48de00    add [r8-0x7d], ecx
0x48de04    ret

------> offset: 0x48dfbd
0x48dfbd    div byte [rax+rbx-0x80]
0x48dfc1    cli
0x48dfc2    adc [rdi+rcx+0x44], cl
0x48dfc6    ret

------> offset: 0x48dfbf
0x48dfbf    sbb [rax+0xf4c10fa], al
0x48dfc5    ret

------> offset: 0x48dfc1
0x48dfc1    cli
0x48dfc2    adc [rdi+rcx+0x44], cl
0x48dfc6    ret

------> offset: 0x48dfc2
0x48dfc2    adc [rdi+rcx+0x44], cl
0x48dfc6    ret

------> offset: 0x48dfda
0x48dfda    mov [rax], fs
0x48dfdd    add [rax], al
0x48dfdf    add [rax-0x77], cl
0x48dfe2    ret

------> offset: 0x48e385
0x48e385    mov cl, [rax+0x1]
0x48e388    retf 0xe2ff

------> offset: 0x48e388
0x48e388    retf 0xe2ff

------> offset: 0x48e3ae
0x48e3ae    ret 0x8440

------> offset: 0x48e67f
0x48e67f    lea ebp, [rbx+rdi*8+0x2948ffff]
0x48e686    ret 0x8941

------> offset: 0x48e683
0x48e683    dec dword [rax+0x29]
0x48e686    ret 0x8941

------> offset: 0x48e686
0x48e686    ret 0x8941

------> offset: 0x48ea35
0x48ea35    add al, [rax]
0x48ea37    add [rbx-0x7af0fd08], al
0x48ea3d    iret

------> offset: 0x48ea37
0x48ea37    add [rbx-0x7af0fd08], al
0x48ea3d    iret

------> offset: 0x48ea7e
0x48ea7e    sahf
0x48ea7f    idiv bh
0x48ea81    dec dword [rcx-0x77]
0x48ea84    ret

------> offset: 0x48ea7f
0x48ea7f    idiv bh
0x48ea81    dec dword [rcx-0x77]
0x48ea84    ret

------> offset: 0x48ea81
0x48ea81    dec dword [rcx-0x77]
0x48ea84    ret

------> offset: 0x48ec36
0x48ec36    ret 0xbc80

------> offset: 0x48ed35
0x48ed35    add [rax], al
0x48ed37    add [rbx-0x7af0f706], al
0x48ed3d    iret

------> offset: 0x48ed37
0x48ed37    add [rbx-0x7af0f706], al
0x48ed3d    iret

------> offset: 0x48eda7
0x48eda7    in al, dx
0x48eda8    cwde
0x48eda9    add [rax], eax
0x48edab    add dh, dh
0x48edad    ret

------> offset: 0x48eda8
0x48eda8    cwde
0x48eda9    add [rax], eax
0x48edab    add dh, dh
0x48edad    ret

------> offset: 0x48eda9
0x48eda9    add [rax], eax
0x48edab    add dh, dh
0x48edad    ret

------> offset: 0x48eeb1
0x48eeb1    ret 0x2349

------> offset: 0x48ef45
0x48ef45    add [rax], eax
0x48ef47    add [rbx+0x5d], bl
0x48ef4a    pop r12
0x48ef4c    pop r13
0x48ef4e    ret

------> offset: 0x48efb5
0x48efb5    add [rax], eax
0x48efb7    add [rax-0x77], cl
0x48efba    ret 0xc148

------> offset: 0x48f299
0x48f299    sbb ch, al
0x48f29b    xor [rip-0x7cb70007], ebp
0x48f2a1    ret

------> offset: 0x48f29b
0x48f29b    xor [rip-0x7cb70007], ebp
0x48f2a1    ret

------> offset: 0x48f29c
0x48f29c    sub eax, 0xffffffff8348fff9
0x48f2a1    ret

------> offset: 0x48f29d
0x48f29d    stc
0x48f29e    dec dword [rax-0x7d]
0x48f2a1    ret

------> offset: 0x48f385
0x48f385    add [rax], al
0x48f387    add [rdx+rbp*8+0x48], dh
0x48f38b    add esp, 0x8
0x48f38e    ret

------> offset: 0x48f386
0x48f386    add [rax], al
0x48f388    jz 0x48f374
0x48f38a    add rsp, 0x8
0x48f38e    ret

------> offset: 0x48f387
0x48f387    add [rdx+rbp*8+0x48], dh
0x48f38b    add esp, 0x8
0x48f38e    ret

------> offset: 0x48f388
0x48f388    jz 0x48f374
0x48f38a    add rsp, 0x8
0x48f38e    ret

------> offset: 0x48f38f
0x48f38f    nop
0x48f390    mov rax, [rax]
0x48f393    add rsp, 0x8
0x48f397    ret

------> offset: 0x48f390
0x48f390    mov rax, [rax]
0x48f393    add rsp, 0x8
0x48f397    ret

------> offset: 0x48f391
0x48f391    mov eax, [rax]
0x48f393    add rsp, 0x8
0x48f397    ret

------> offset: 0x48f39e
0x48f39e    add [rax], al
0x48f3a0    mov rax, [rdi+0x90]
0x48f3a7    ret

------> offset: 0x48f3a0
0x48f3a0    mov rax, [rdi+0x90]
0x48f3a7    ret

------> offset: 0x48f3a1
0x48f3a1    mov eax, [rdi+0x90]
0x48f3a7    ret

------> offset: 0x48f3e9
0x48f3e9    out 0x48, al
0x48f3eb    mov [rdi+rsi*8], edx
0x48f3ee    add rsp, 0x8
0x48f3f2    ret

------> offset: 0x48f3ea
0x48f3ea    mov [rdi+rsi*8], rdx
0x48f3ee    add rsp, 0x8
0x48f3f2    ret

------> offset: 0x48f3eb
0x48f3eb    mov [rdi+rsi*8], edx
0x48f3ee    add rsp, 0x8
0x48f3f2    ret

------> offset: 0x48f3ec
0x48f3ec    adc al, 0xf7
0x48f3ee    add rsp, 0x8
0x48f3f2    ret

------> offset: 0x48f3f6
0x48f3f6    add [rax], al
0x48f3f8    mov [rcx], rdx
0x48f3fb    add rsp, 0x8
0x48f3ff    ret

------> offset: 0x48f3f8
0x48f3f8    mov [rcx], rdx
0x48f3fb    add rsp, 0x8
0x48f3ff    ret

------> offset: 0x48f3f9
0x48f3f9    mov [rcx], edx
0x48f3fb    add rsp, 0x8
0x48f3ff    ret

------> offset: 0x48f3fe
0x48f3fe    or bl, al
0x48f400    mov rax, [rdi+0x98]
0x48f407    ret

------> offset: 0x48f400
0x48f400    mov rax, [rdi+0x98]
0x48f407    ret

------> offset: 0x48f401
0x48f401    mov eax, [rdi+0x98]
0x48f407    ret

------> offset: 0x48f41b
0x48f41b    mov [rsi], eax
0x48f41d    mov rax, [rdi+0x98]
0x48f424    ret

------> offset: 0x48f42e
0x48f42e    add [rax], al
0x48f430    mov [rdi+0x98], rsi
0x48f437    ret

------> offset: 0x48f430
0x48f430    mov [rdi+0x98], rsi
0x48f437    ret

------> offset: 0x48f431
0x48f431    mov [rdi+0x98], esi
0x48f437    ret

------> offset: 0x48f43e
0x48f43e    add [rax], al
0x48f440    mov rax, [rdi+0xa0]
0x48f447    ret

------> offset: 0x48f440
0x48f440    mov rax, [rdi+0xa0]
0x48f447    ret

------> offset: 0x48f441
0x48f441    mov eax, [rdi+0xa0]
0x48f447    ret

------> offset: 0x48f44e
0x48f44e    add [rax], al
0x48f450    mov rax, [rdi+0xb8]
0x48f457    ret

------> offset: 0x48f450
0x48f450    mov rax, [rdi+0xb8]
0x48f457    ret

------> offset: 0x48f451
0x48f451    mov eax, [rdi+0xb8]
0x48f457    ret

------> offset: 0x48f475
0x48f475    mov rax, [rsp+0x10]
0x48f47a    add rsp, 0x28
0x48f47e    ret

------> offset: 0x48f476
0x48f476    mov eax, [rsp+0x10]
0x48f47a    add rsp, 0x28
0x48f47e    ret

------> offset: 0x48f477
0x48f477    and al, 0x10
0x48f47a    add rsp, 0x28
0x48f47e    ret

------> offset: 0x48f48e
0x48f48e    add [rax], al
0x48f490    mov rax, [rdi+0xb0]
0x48f497    ret

------> offset: 0x48f490
0x48f490    mov rax, [rdi+0xb0]
0x48f497    ret

------> offset: 0x48f491
0x48f491    mov eax, [rdi+0xb0]
0x48f497    ret

------> offset: 0x48f493
0x48f493    mov al, 0x0
0x48f495    add [rax], al
0x48f497    ret

------> offset: 0x48f49e
0x48f49e    add [rax], al
0x48f4a0    mov rax, [rdi+0xa8]
0x48f4a7    ret

------> offset: 0x48f4a0
0x48f4a0    mov rax, [rdi+0xa8]
0x48f4a7    ret

------> offset: 0x48f4a1
0x48f4a1    mov eax, [rdi+0xa8]
0x48f4a7    ret

------> offset: 0x48f4a3
0x48f4a3    test al, 0x0
0x48f4a5    add [rax], al
0x48f4a7    ret

------> offset: 0x48f52a
0x48f52a    and [rax], al
0x48f52c    add [rax], al
0x48f52e    add [rax-0x7d], cl
0x48f531    ret 0x4801

------> offset: 0x48f559
0x48f559    and [rax-0x7d], cl
0x48f55c    ret 0x4801

------> offset: 0x48f5a9
0x48f5a9    js 0x48f5ad
0x48f5ab    add [rax], al
0x48f5ad    mov rax, rbx
0x48f5b0    pop rbx
0x48f5b1    pop rbp
0x48f5b2    ret

------> offset: 0x48f5aa
0x48f5aa    add al, [rax]
0x48f5ac    add [rax-0x77], cl
0x48f5af    fcomp dword [rbx+0x5d]
0x48f5b2    ret

------> offset: 0x48f5ab
0x48f5ab    add [rax], al
0x48f5ad    mov rax, rbx
0x48f5b0    pop rbx
0x48f5b1    pop rbp
0x48f5b2    ret

------> offset: 0x48f5ac
0x48f5ac    add [rax-0x77], cl
0x48f5af    fcomp dword [rbx+0x5d]
0x48f5b2    ret

------> offset: 0x48f5b6
0x48f5b6    js 0x48f5ba
0x48f5b8    add [rax], al
0x48f5ba    xor eax, eax
0x48f5bc    pop rbx
0x48f5bd    pop rbp
0x48f5be    ret

------> offset: 0x48f5b7
0x48f5b7    add al, [rax]
0x48f5b9    add [rcx], dh
0x48f5bb    rcr byte [rbx+0x5d], 0xc3
0x48f5bf    nop
0x48f5c0    ret

------> offset: 0x48f5b8
0x48f5b8    add [rax], al
0x48f5ba    xor eax, eax
0x48f5bc    pop rbx
0x48f5bd    pop rbp
0x48f5be    ret

------> offset: 0x48f5b9
0x48f5b9    add [rcx], dh
0x48f5bb    rcr byte [rbx+0x5d], 0xc3
0x48f5bf    nop
0x48f5c0    ret

------> offset: 0x48f5bb
0x48f5bb    rcr byte [rbx+0x5d], 0xc3
0x48f5bf    nop
0x48f5c0    ret

------> offset: 0x48f679
0x48f679    mov r14, [rbp-0x10]
0x48f67d    mov r15, [rbp-0x8]
0x48f681    leave
0x48f682    ret

------> offset: 0x48f67a
0x48f67a    mov esi, [rbp-0x10]
0x48f67d    mov r15, [rbp-0x8]
0x48f681    leave
0x48f682    ret

------> offset: 0x48f67b
0x48f67b    jnz 0x48f66d
0x48f67d    mov r15, [rbp-0x8]
0x48f681    leave
0x48f682    ret

------> offset: 0x48f67c
0x48f67c    mov r15, [rbp-0x8]
0x48f681    leave
0x48f682    ret

------> offset: 0x48f67e
0x48f67e    mov edi, [rbp-0x8]
0x48f681    leave
0x48f682    ret

------> offset: 0x48f67f
0x48f67f    jge 0x48f679
0x48f681    leave
0x48f682    ret

------> offset: 0x48f680
0x48f680    clc
0x48f681    leave
0x48f682    ret

------> offset: 0x48f71a
0x48f71a    jge 0x48f714
0x48f71c    mov rbp, [rbp+0x0]
0x48f720    mov rsp, rcx
0x48f723    ret

------> offset: 0x48f71b
0x48f71b    clc
0x48f71c    mov rbp, [rbp+0x0]
0x48f720    mov rsp, rcx
0x48f723    ret

------> offset: 0x48f71c
0x48f71c    mov rbp, [rbp+0x0]
0x48f720    mov rsp, rcx
0x48f723    ret

------> offset: 0x48f71d
0x48f71d    mov ebp, [rbp+0x0]
0x48f720    mov rsp, rcx
0x48f723    ret

------> offset: 0x48f71e
0x48f71e    ins dword [rdi], dx
0x48f71f    add [rax-0x77], cl
0x48f722    int 3
0x48f723    ret

------> offset: 0x48f71f
0x48f71f    add [rax-0x77], cl
0x48f722    int 3
0x48f723    ret

------> offset: 0x48f720
0x48f720    mov rsp, rcx
0x48f723    ret

------> offset: 0x48f721
0x48f721    mov esp, ecx
0x48f723    ret

------> offset: 0x48f722
0x48f722    int 3
0x48f723    ret

------> offset: 0x48f7a7
0x48f7a7    jnz 0x48f799
0x48f7a9    mov r15, [rbp-0x8]
0x48f7ad    leave
0x48f7ae    ret

------> offset: 0x48f7ab
0x48f7ab    jge 0x48f7a5
0x48f7ad    leave
0x48f7ae    ret

------> offset: 0x48f7fa
0x48f7fa    jge 0x48f7f4
0x48f7fc    mov rbp, [rbp+0x0]
0x48f800    mov rsp, rcx
0x48f803    ret

------> offset: 0x48f8c7
0x48f8c7    jge 0x48f8c1
0x48f8c9    mov rbp, [rbp+0x0]
0x48f8cd    mov rsp, rcx
0x48f8d0    ret

------> offset: 0x48f95b
0x48f95b    jnz 0x48f94d
0x48f95d    mov r15, [rbp-0x8]
0x48f961    leave
0x48f962    ret

------> offset: 0x48f95f
0x48f95f    jge 0x48f959
0x48f961    leave
0x48f962    ret

------> offset: 0x48f9b3
0x48f9b3    jge 0x48f9ad
0x48f9b5    mov rbp, [rbp+0x0]
0x48f9b9    mov rsp, rcx
0x48f9bc    ret

------> offset: 0x48f9d1
0x48f9d1    jmp rax
0x48f9d3    nop dword [rax+rax+0x0]
0x48f9d8    ret

------> offset: 0x48fa4a
0x48fa4a    clc
0x48fa4b    add eax, 0x74c48941
0x48fa50    iret

------> offset: 0x48fa4b
0x48fa4b    add eax, 0x74c48941
0x48fa50    iret

------> offset: 0x48fabf
0x48fabf    loop 0x48fb0a
0x48fac1    or eax, edx
0x48fac3    mov [rsi], r8
0x48fac6    ret

------> offset: 0x48fae1
0x48fae1    sbb ecx, ecx
0x48fae3    cmp [rsi+0x8], rdi
0x48fae7    cmovbe eax, ecx
0x48faea    ret

------> offset: 0x48fae2
0x48fae2    leave
0x48fae3    cmp [rsi+0x8], rdi
0x48fae7    cmovbe eax, ecx
0x48faea    ret

------> offset: 0x48fae3
0x48fae3    cmp [rsi+0x8], rdi
0x48fae7    cmovbe eax, ecx
0x48faea    ret

------> offset: 0x48fae4
0x48fae4    cmp [rsi+0x8], edi
0x48fae7    cmovbe eax, ecx
0x48faea    ret

------> offset: 0x48fae5
0x48fae5    jle 0x48faef
0x48fae7    cmovbe eax, ecx
0x48faea    ret

------> offset: 0x48fae7
0x48fae7    cmovbe eax, ecx
0x48faea    ret

------> offset: 0x48fc13
0x48fc13    or [rbx+0x634801eb], al
0x48fc19    ret

------> offset: 0x48fc16
0x48fc16    add [rax+0x63], ecx
0x48fc19    ret

------> offset: 0x48fc92
0x48fc92    mov eax, 0x8
0x48fc97    add rsp, 0x8
0x48fc9b    ret

------> offset: 0x48fc93
0x48fc93    or [rax], al
0x48fc95    add [rax], al
0x48fc97    add rsp, 0x8
0x48fc9b    ret

------> offset: 0x48fcb0
0x48fcb0    mov eax, 0x4
0x48fcb5    add rsp, 0x8
0x48fcb9    ret

------> offset: 0x48fcb1
0x48fcb1    add al, 0x0
0x48fcb3    add [rax], al
0x48fcb5    add rsp, 0x8
0x48fcb9    ret

------> offset: 0x48fcc0
0x48fcc0    mov eax, 0x2
0x48fcc5    add rsp, 0x8
0x48fcc9    ret

------> offset: 0x48fcc1
0x48fcc1    add al, [rax]
0x48fcc3    add [rax], al
0x48fcc5    add rsp, 0x8
0x48fcc9    ret

------> offset: 0x48fccd
0x48fccd    add [rax], r8b
0x48fcd0    xor eax, eax
0x48fcd2    add rsp, 0x8
0x48fcd6    ret

------> offset: 0x48fd45
0x48fd45    and al, 0x48
0x48fd47    add esp, 0x20
0x48fd4a    pop rbx
0x48fd4b    pop rbp
0x48fd4c    pop r12
0x48fd4e    ret

------> offset: 0x48fe3a
0x48fe3a    xor eax, eax
0x48fe3c    add rsp, 0x18
0x48fe40    pop rbx
0x48fe41    pop rbp
0x48fe42    ret

------> offset: 0x48fee0
0x48fee0    movzx eax, byte [rax]
0x48fee3    add rsp, 0x18
0x48fee7    pop rbx
0x48fee8    pop rbp
0x48fee9    ret

------> offset: 0x48fee1
0x48fee1    mov dh, 0x0
0x48fee3    add rsp, 0x18
0x48fee7    pop rbx
0x48fee8    pop rbp
0x48fee9    ret

------> offset: 0x48ff39
0x48ff39    jnz 0x48ff60
0x48ff3b    mov rax, [rdx]
0x48ff3e    add rsp, 0x8
0x48ff42    ret

------> offset: 0x48ff3a
0x48ff3a    and eax, 0x48028b48
0x48ff3f    add esp, 0x8
0x48ff42    ret

------> offset: 0x48ff3b
0x48ff3b    mov rax, [rdx]
0x48ff3e    add rsp, 0x8
0x48ff42    ret

------> offset: 0x48ff3c
0x48ff3c    mov eax, [rdx]
0x48ff3e    add rsp, 0x8
0x48ff42    ret

------> offset: 0x48ff7e
0x48ff7e    add [rax], al
0x48ff80    mov rax, [rsi]
0x48ff83    add rsp, 0x8
0x48ff87    ret

------> offset: 0x48ff80
0x48ff80    mov rax, [rsi]
0x48ff83    add rsp, 0x8
0x48ff87    ret

------> offset: 0x48ff81
0x48ff81    mov eax, [rsi]
0x48ff83    add rsp, 0x8
0x48ff87    ret

------> offset: 0x49000b
0x49000b    and al, 0xf
0x49000d    ret 0x8348

------> offset: 0x490174
0x490174    xor [rax-0x7b], cl
0x490177    ret 0x840f

------> offset: 0x490447
0x490447    adc ecx, [rcx-0x77]
0x49044a    ret

------> offset: 0x4905e1
0x4905e1    sti
0x4905e2    add [rax], al
0x4905e4    add [rax-0x77], cl
0x4905e7    ret 0x3948

------> offset: 0x4905e2
0x4905e2    add [rax], al
0x4905e4    add [rax-0x77], cl
0x4905e7    ret 0x3948

------> offset: 0x4905e4
0x4905e4    add [rax-0x77], cl
0x4905e7    ret 0x3948

------> offset: 0x4907c1
0x4907c1    ret 0x19e8

------> offset: 0x490ac9
0x490ac9    adc [rax-0x77], cl
0x490acc    push rsp
0x490acd    iret

------> offset: 0x490aea
0x490aea    and [rax-0x75], cl
0x490aed    push rsp
0x490aee    ret 0x4910

------> offset: 0x490aed
0x490aed    push rsp
0x490aee    ret 0x4910

------> offset: 0x490c49
0x490c49    add [rcx], cl
0x490c4b    ret 0x5389

------> offset: 0x490c4d
0x490c4d    push rbx
0x490c4e    and cl, ch
0x490c50    ret 0xfffb

------> offset: 0x490c4e
0x490c4e    and cl, ch
0x490c50    ret 0xfffb

------> offset: 0x490cb9
0x490cb9    jnz 0x490ce0
0x490cbb    mov rax, [rdx]
0x490cbe    add rsp, 0x8
0x490cc2    ret

------> offset: 0x490dba
0x490dba    fimul dword [rbp-0x77]
0x490dbd    retf 0x34c

------> offset: 0x490dbd
0x490dbd    retf 0x34c

------> offset: 0x491121
0x491121    retf 0xd3eb

------> offset: 0x491234
0x491234    cmp [rax], ch
0x491236    and eax, [rax]
0x491238    mov [rsi+0x28], rax
0x49123c    pop rbx
0x49123d    ret

------> offset: 0x491236
0x491236    and eax, [rax]
0x491238    mov [rsi+0x28], rax
0x49123c    pop rbx
0x49123d    ret

------> offset: 0x491238
0x491238    mov [rsi+0x28], rax
0x49123c    pop rbx
0x49123d    ret

------> offset: 0x491239
0x491239    mov [rsi+0x28], eax
0x49123c    pop rbx
0x49123d    ret

------> offset: 0x491253
0x491253    mov rbx, rdi
0x491256    test eax, eax
0x491258    jnz 0x491260
0x49125a    pop rbx
0x49125b    ret

------> offset: 0x491254
0x491254    mov ebx, edi
0x491256    test eax, eax
0x491258    jnz 0x491260
0x49125a    pop rbx
0x49125b    ret

------> offset: 0x491255
0x491255    sti
0x491256    test eax, eax
0x491258    jnz 0x491260
0x49125a    pop rbx
0x49125b    ret

------> offset: 0x491256
0x491256    test eax, eax
0x491258    jnz 0x491260
0x49125a    pop rbx
0x49125b    ret

------> offset: 0x491257
0x491257    sal byte [rbp+0x6], 0x5b
0x49125b    ret

------> offset: 0x491258
0x491258    jnz 0x491260
0x49125a    pop rbx
0x49125b    ret

------> offset: 0x4912e8
0x4912e8    test [rdi], ah
0x4912ea    and eax, [rax]
0x4912ec    mov [rsi+0x28], rax
0x4912f0    pop rbx
0x4912f1    ret

------> offset: 0x4913ed
0x4913ed    jz 0x49143e
0x4913ef    mov rax, rbx
0x4913f2    pop rbx
0x4913f3    pop rbp
0x4913f4    pop r12
0x4913f6    ret

------> offset: 0x491410
0x491410    xor ebx, ebx
0x491412    mov rax, rbx
0x491415    pop rbx
0x491416    pop rbp
0x491417    pop r12
0x491419    ret

------> offset: 0x491411
0x491411    fisttp dword [rax-0x77]
0x491414    fcomp dword [rbx+0x5d]
0x491417    pop r12
0x491419    ret

------> offset: 0x49145e
0x49145e    add [rax], al
0x491460    mov eax, [rdi]
0x491462    test eax, eax
0x491464    jnz 0x491470
0x491466    ret

------> offset: 0x49145f
0x49145f    add [rbx+0x75c08507], cl
0x491465    or dh, bl
0x491467    ret

------> offset: 0x491460
0x491460    mov eax, [rdi]
0x491462    test eax, eax
0x491464    jnz 0x491470
0x491466    ret

------> offset: 0x491462
0x491462    test eax, eax
0x491464    jnz 0x491470
0x491466    ret

------> offset: 0x491463
0x491463    sal byte [rbp+0xa], 0xf3
0x491467    ret

------> offset: 0x491464
0x491464    jnz 0x491470
0x491466    ret

------> offset: 0x491465
0x491465    or dh, bl
0x491467    ret

------> offset: 0x491532
0x491532    ror byte [rdi], 0x85
0x491535    ret 0x0

------> offset: 0x49156b
0x49156b    xor [rbx+0x5d], bl
0x49156e    pop r12
0x491570    pop r13
0x491572    pop r14
0x491574    ret

------> offset: 0x491756
0x491756    jns 0x49175b
0x491758    mov r8, [r8]
0x49175b    mov [rbx], r8
0x49175e    pop rbx
0x49175f    ret

------> offset: 0x491757
0x491757    add ecx, [rbp-0x75]
0x49175a    add [rcx+rcx*4+0x3], cl
0x49175e    pop rbx
0x49175f    ret

------> offset: 0x491758
0x491758    mov r8, [r8]
0x49175b    mov [rbx], r8
0x49175e    pop rbx
0x49175f    ret

------> offset: 0x491759
0x491759    mov eax, [rax]
0x49175b    mov [rbx], r8
0x49175e    pop rbx
0x49175f    ret

------> offset: 0x49175a
0x49175a    add [rcx+rcx*4+0x3], cl
0x49175e    pop rbx
0x49175f    ret

------> offset: 0x49175b
0x49175b    mov [rbx], r8
0x49175e    pop rbx
0x49175f    ret

------> offset: 0x49175c
0x49175c    mov [rbx], eax
0x49175e    pop rbx
0x49175f    ret

------> offset: 0x49183a
0x49183a    add [rax-0x7d], cl
0x49183d    ror byte [rax], 0x4c
0x491840    mov [rbx], eax
0x491842    pop rbx
0x491843    ret

------> offset: 0x49183b
0x49183b    add rax, 0x8
0x49183f    mov [rbx], r8
0x491842    pop rbx
0x491843    ret

------> offset: 0x49183c
0x49183c    add eax, 0x8
0x49183f    mov [rbx], r8
0x491842    pop rbx
0x491843    ret

------> offset: 0x49183d
0x49183d    ror byte [rax], 0x4c
0x491840    mov [rbx], eax
0x491842    pop rbx
0x491843    ret

------> offset: 0x49183e
0x49183e    or [rcx+rcx*4+0x3], cl
0x491842    pop rbx
0x491843    ret

------> offset: 0x491a24
0x491a24    xor [rax+0x39], cl
0x491a27    ret

------> offset: 0x491c62
0x491c62    test rbx, rbx
0x491c65    jnz 0x491c50
0x491c67    pop rbx
0x491c68    ret

------> offset: 0x491c63
0x491c63    test ebx, ebx
0x491c65    jnz 0x491c50
0x491c67    pop rbx
0x491c68    ret

------> offset: 0x491c65
0x491c65    jnz 0x491c50
0x491c67    pop rbx
0x491c68    ret

------> offset: 0x491caf
0x491caf    in eax, dx
0x491cb0    jnz 0x491c88
0x491cb2    add rsp, 0x8
0x491cb6    pop rbx
0x491cb7    pop rbp
0x491cb8    ret

------> offset: 0x491cb0
0x491cb0    jnz 0x491c88
0x491cb2    add rsp, 0x8
0x491cb6    pop rbx
0x491cb7    pop rbp
0x491cb8    ret

------> offset: 0x491df7
0x491df7    and eax, [rax]
0x491df9    jnz 0x491dc0
0x491dfb    add rsp, 0x8
0x491dff    ret

------> offset: 0x491df8
0x491df8    add [rbp-0x3b], dh
0x491dfb    add rsp, 0x8
0x491dff    ret

------> offset: 0x491df9
0x491df9    jnz 0x491dc0
0x491dfb    add rsp, 0x8
0x491dff    ret

------> offset: 0x491e8e
0x491e8e    test rbx, rbx
0x491e91    jnz 0x491e80
0x491e93    pop rbx
0x491e94    ret

------> offset: 0x491e8f
0x491e8f    test ebx, ebx
0x491e91    jnz 0x491e80
0x491e93    pop rbx
0x491e94    ret

------> offset: 0x491e91
0x491e91    jnz 0x491e80
0x491e93    pop rbx
0x491e94    ret

------> offset: 0x491e92
0x491e92    in eax, dx
0x491e93    pop rbx
0x491e94    ret

------> offset: 0x491f36
0x491f36    push rbp
0x491f37    adc [rcx-0x75], cl
0x491f3a    sbb [r8-0x7d], r9b
0x491f3e    ret

------> offset: 0x491f37
0x491f37    adc [rcx-0x75], cl
0x491f3a    sbb [r8-0x7d], r9b
0x491f3e    ret

------> offset: 0x491f3a
0x491f3a    sbb [r8-0x7d], r9b
0x491f3e    ret

------> offset: 0x491f3b
0x491f3b    sbb [rax-0x7d], cl
0x491f3e    ret

------> offset: 0x4924d6
0x4924d6    xor [rax-0x7b], cl
0x4924d9    push qword [rax-0x18]
0x4924dd    iret

------> offset: 0x4924d9
0x4924d9    push qword [rax-0x18]
0x4924dd    iret

------> offset: 0x4927e3
0x4927e3    xor [rax-0x7b], cl
0x4927e6    push qword [rdi+rbx-0x18]
0x4927ea    ret 0xfff7

------> offset: 0x4927e6
0x4927e6    push qword [rdi+rbx-0x18]
0x4927ea    ret 0xfff7

------> offset: 0x492882
0x492882    retf 0x2309

------> offset: 0x4928a8
0x4928a8    jmp 0x414df0
0x4928ad    nop dword [rax]
0x4928b0    ret

------> offset: 0x4928a9
0x4928a9    and eax, 0x1f0ffff8
0x4928af    add bl, dh
0x4928b1    ret

------> offset: 0x4931be
0x4931be    loopz 0x49321b
0x4931c0    pop rbp
0x4931c1    pop r12
0x4931c3    pop r13
0x4931c5    pop r14
0x4931c7    ret

------> offset: 0x493273
0x493273    pop rbx
0x493274    pop rbp
0x493275    jmp 0x414df0
0x49327a    ret

------> offset: 0x493274
0x493274    pop rbp
0x493275    jmp 0x414df0
0x49327a    ret

------> offset: 0x493275
0x493275    jmp 0x414df0
0x49327a    ret

------> offset: 0x493276
0x493276    jbe 0x493293
0x493278    clc
0x493279    push rbx
0x49327b    ret

------> offset: 0x493277
0x493277    sbb edi, eax
0x493279    push rbx
0x49327b    ret

------> offset: 0x493278
0x493278    clc
0x493279    push rbx
0x49327b    ret

------> offset: 0x4932b8
0x4932b8    and eax, [rax]
0x4932ba    add [rax], al
0x4932bc    add [rax], al
0x4932be    pop rbx
0x4932bf    ret

------> offset: 0x49339b
0x49339b    add [rax], al
0x49339d    add [rax], al
0x49339f    add [rax-0x7d], cl
0x4933a2    ret 0x4810

------> offset: 0x49339d
0x49339d    add [rax], al
0x49339f    add [rax-0x7d], cl
0x4933a2    ret 0x4810

------> offset: 0x49339f
0x49339f    add [rax-0x7d], cl
0x4933a2    ret 0x4810

------> offset: 0x4934ac
0x4934ac    test edi, ecx
0x4934ae    add [rax], eax
0x4934b0    add [rax-0x77], cl
0x4934b3    retf 0xc031

------> offset: 0x4934ae
0x4934ae    add [rax], eax
0x4934b0    add [rax-0x77], cl
0x4934b3    retf 0xc031

------> offset: 0x4934b0
0x4934b0    add [rax-0x77], cl
0x4934b3    retf 0xc031

------> offset: 0x4934b3
0x4934b3    retf 0xc031

------> offset: 0x49363d
0x49363d    or eax, 0xffffffff83489066
0x493642    ret 0x4810

------> offset: 0x493836
0x493836    dec dword [rip+0x22f024]
0x49383c    jnz 0x49385c
0x49383e    ret

------> offset: 0x493837
0x493837    or eax, 0x22f024
0x49383c    jnz 0x49385c
0x49383e    ret

------> offset: 0x493838
0x493838    and al, 0xf0
0x49383a    and al, [rax]
0x49383c    jnz 0x49385c
0x49383e    ret

------> offset: 0x493839
0x493839    and al, [rax]
0x49383c    jnz 0x49385c
0x49383e    ret

------> offset: 0x49383b
0x49383b    add [rbp+0x1e], dh
0x49383e    ret

------> offset: 0x49383c
0x49383c    jnz 0x49385c
0x49383e    ret

------> offset: 0x493878
0x493878    sub rsp, 0x8
0x49387c    add rsp, 0x8
0x493880    ret

------> offset: 0x493879
0x493879    sub esp, 0x8
0x49387c    add rsp, 0x8
0x493880    ret

------> offset: 0x4963c4
0x4963c4    ror ah, 0x1
0x4963c6    clc
0x4963c7    push rax
0x4963c9    int 0xf8
0x4963cb    call qword [rax]
0x4963cd    iret

------> offset: 0x4963c5
0x4963c5    int 3
0x4963c6    clc
0x4963c7    push rax
0x4963c9    int 0xf8
0x4963cb    call qword [rax]
0x4963cd    iret

------> offset: 0x4963c6
0x4963c6    clc
0x4963c7    push rax
0x4963c9    int 0xf8
0x4963cb    call qword [rax]
0x4963cd    iret

------> offset: 0x4963c7
0x4963c7    push rax
0x4963c9    int 0xf8
0x4963cb    call qword [rax]
0x4963cd    iret

------> offset: 0x4963c8
0x4963c8    int 0xf8
0x4963cb    call qword [rax]
0x4963cd    iret

------> offset: 0x4963ca
0x4963ca    clc
0x4963cb    call qword [rax]
0x4963cd    iret

------> offset: 0x4963cb
0x4963cb    call qword [rax]
0x4963cd    iret

------> offset: 0x4963f6
0x4963f6    clc
0x4963f7    push qword [rax-0x25]
0x4963fa    clc
0x4963fb    call qword [rax]
0x4963fd    retf

------> offset: 0x4963f7
0x4963f7    push qword [rax-0x25]
0x4963fa    clc
0x4963fb    call qword [rax]
0x4963fd    retf

------> offset: 0x4963f8
0x4963f8    jo 0x4963d5
0x4963fa    clc
0x4963fb    call qword [rax]
0x4963fd    retf

------> offset: 0x4963fa
0x4963fa    clc
0x4963fb    call qword [rax]
0x4963fd    retf

------> offset: 0x4963fb
0x4963fb    call qword [rax]
0x4963fd    retf

------> offset: 0x496424
0x496424    ret 0xf8eb

------> offset: 0x4967d8
0x4967d8    ret 0xf946

------> offset: 0x4968c4
0x4968c4    retf 0xf948

------> offset: 0x4969cc
0x4969cc    ret 0xf93e

------> offset: 0x4969d4
0x4969d4    ret 0xf93d

------> offset: 0x4969dc
0x4969dc    ret 0xf93c

------> offset: 0x4969e4
0x4969e4    ret 0xf93b

------> offset: 0x4969ec
0x4969ec    ret 0xf93a

------> offset: 0x496e37
0x496e37    add dl, dl
0x496e39    xor al, [rbx+0x0]
0x496e3c    add [rax], al
0x496e3e    add [rax], al
0x496e40    retf

------> offset: 0x496e39
0x496e39    xor al, [rbx+0x0]
0x496e3c    add [rax], al
0x496e3e    add [rax], al
0x496e40    retf

------> offset: 0x496e3c
0x496e3c    add [rax], al
0x496e3e    add [rax], al
0x496e40    retf

------> offset: 0x496e3e
0x496e3e    add [rax], al
0x496e40    retf

------> offset: 0x498780
0x498780    mov al, 0x81
0x498782    add [r8], al
0x498785    add [rax], al
0x498787    add al, ah
0x498789    ret

------> offset: 0x498782
0x498782    add [r8], al
0x498785    add [rax], al
0x498787    add al, ah
0x498789    ret

------> offset: 0x498783
0x498783    add [rax], al
0x498785    add [rax], al
0x498787    add al, ah
0x498789    ret

------> offset: 0x498785
0x498785    add [rax], al
0x498787    add al, ah
0x498789    ret

------> offset: 0x498787
0x498787    add al, ah
0x498789    ret

------> offset: 0x49879a
0x49879a    add al, 0x4
0x49879c    add [rax], al
0x49879e    add [rax], al
0x4987a0    ret 0x4981

------> offset: 0x49879c
0x49879c    add [rax], al
0x49879e    add [rax], al
0x4987a0    ret 0x4981

------> offset: 0x49879e
0x49879e    add [rax], al
0x4987a0    ret 0x4981

------> offset: 0x49a826
0x49a826    add [rax], al
0x49a828    ret 0x0

------> offset: 0x49a846
0x49a846    add [rax], al
0x49a848    retf 0x0

------> offset: 0x49a85a
0x49a85a    add [rax], al
0x49a85c    iret

------> offset: 0x4a0828
0x4a0828    mov dword [rdx], 0x2cb0000
0x4a082e    add [rax], al
0x4a0830    iret

------> offset: 0x4a0a89
0x4a0a89    add eax, 0x5bd0000
0x4a0a8e    add [rax], al
0x4a0a90    ret 0x5

------> offset: 0x4a0a8e
0x4a0a8e    add [rax], al
0x4a0a90    ret 0x5

------> offset: 0x4a0b6e
0x4a0b6e    add [rax], al
0x4a0b70    retf 0x6

------> offset: 0x4a0e66
0x4a0e66    add [rax], al
0x4a0e68    ret 0x9

------> offset: 0x4a0e6e
0x4a0e6e    add [rax], al
0x4a0e70    enter 0x9, 0x0
0x4a0e74    retf

------> offset: 0x4a0e70
0x4a0e70    enter 0x9, 0x0
0x4a0e74    retf

------> offset: 0x4a0fc6
0x4a0fc6    add [rax], al
0x4a0fc8    retf 0xa

------> offset: 0x4a0fc8
0x4a0fc8    retf 0xa

------> offset: 0x4a1266
0x4a1266    add [rax], al
0x4a1268    ret 0xc

------> offset: 0x4a126e
0x4a126e    add [rax], al
0x4a1270    enter 0xc, 0x0
0x4a1274    retf

------> offset: 0x4a1270
0x4a1270    enter 0xc, 0x0
0x4a1274    retf

------> offset: 0x4a13c1
0x4a13c1    or eax, 0xdc70000
0x4a13c6    add [rax], al
0x4a13c8    retf 0xd

------> offset: 0x4a13c6
0x4a13c6    add [rax], al
0x4a13c8    retf 0xd

------> offset: 0x4a13c8
0x4a13c8    retf 0xd

------> offset: 0x4a1665
0x4a1665    sldt dword [rax]
0x4a1668    ret 0xf

------> offset: 0x4a1666
0x4a1666    add [rax], al
0x4a1668    ret 0xf

------> offset: 0x4a1668
0x4a1668    ret 0xf

------> offset: 0x4a166b
0x4a166b    add ch, al
0x4a166d    sldt dword [rax]
0x4a1670    enter 0xf, 0x0
0x4a1674    retf

------> offset: 0x4a166d
0x4a166d    sldt dword [rax]
0x4a1670    enter 0xf, 0x0
0x4a1674    retf

------> offset: 0x4a166e
0x4a166e    add [rax], al
0x4a1670    enter 0xf, 0x0
0x4a1674    retf

------> offset: 0x4a166f
0x4a166f    add al, cl
0x4a1671    sldt dword [rax]
0x4a1674    retf

------> offset: 0x4a1670
0x4a1670    enter 0xf, 0x0
0x4a1674    retf

------> offset: 0x4a1671
0x4a1671    sldt dword [rax]
0x4a1674    retf

------> offset: 0x4a17c6
0x4a17c6    add [rax], al
0x4a17c8    retf 0x10

------> offset: 0x4a17c8
0x4a17c8    retf 0x10

------> offset: 0x4a1a66
0x4a1a66    add [rax], al
0x4a1a68    ret 0x12

------> offset: 0x4a1a68
0x4a1a68    ret 0x12

------> offset: 0x4a1b4a
0x4a1b4a    add [rax], al
0x4a1b4c    add [rax], al
0x4a1b4e    add [rax], al
0x4a1b50    retf 0x1

------> offset: 0x4a1b4c
0x4a1b4c    add [rax], al
0x4a1b4e    add [rax], al
0x4a1b50    retf 0x1

------> offset: 0x4a1b4e
0x4a1b4e    add [rax], al
0x4a1b50    retf 0x1

------> offset: 0x4a1b52
0x4a1b52    add [rax], al
0x4a1b54    add [rax], al
0x4a1b56    add [rax], al
0x4a1b58    retf

------> offset: 0x4a1b90
0x4a1b90    enter 0x2, 0x0
0x4a1b94    add [rax], al
0x4a1b96    add [rax], al
0x4a1b98    retf

------> offset: 0x4a24a2
0x4a24a2    add [rax], al
0x4a24a4    add [rax], al
0x4a24a6    add [rax], al
0x4a24a8    ret 0x24

------> offset: 0x4a24a4
0x4a24a4    add [rax], al
0x4a24a6    add [rax], al
0x4a24a8    ret 0x24

------> offset: 0x4a24a6
0x4a24a6    add [rax], al
0x4a24a8    ret 0x24

------> offset: 0x4a24a8
0x4a24a8    ret 0x24

------> offset: 0x4a24e2
0x4a24e2    add [rax], al
0x4a24e4    add [rax], al
0x4a24e6    add [rax], al
0x4a24e8    retf 0x24

------> offset: 0x4a24e4
0x4a24e4    add [rax], al
0x4a24e6    add [rax], al
0x4a24e8    retf 0x24

------> offset: 0x4a24e6
0x4a24e6    add [rax], al
0x4a24e8    retf 0x24

------> offset: 0x4a24e8
0x4a24e8    retf 0x24

------> offset: 0x4a250a
0x4a250a    add [rax], al
0x4a250c    add [rax], al
0x4a250e    add [rax], al
0x4a2510    iret

------> offset: 0x4a250c
0x4a250c    add [rax], al
0x4a250e    add [rax], al
0x4a2510    iret

------> offset: 0x4a2992
0x4a2992    add [rax], al
0x4a2994    add [rax], al
0x4a2996    add [rax], al
0x4a2998    ret 0x33

------> offset: 0x4a2994
0x4a2994    add [rax], al
0x4a2996    add [rax], al
0x4a2998    ret 0x33

------> offset: 0x4a2996
0x4a2996    add [rax], al
0x4a2998    ret 0x33

------> offset: 0x4a2998
0x4a2998    ret 0x33

------> offset: 0x4a29d2
0x4a29d2    add [rax], al
0x4a29d4    add [rax], al
0x4a29d6    add [rax], al
0x4a29d8    retf 0x33

------> offset: 0x4a29d4
0x4a29d4    add [rax], al
0x4a29d6    add [rax], al
0x4a29d8    retf 0x33

------> offset: 0x4a29d6
0x4a29d6    add [rax], al
0x4a29d8    retf 0x33

------> offset: 0x4a29d8
0x4a29d8    retf 0x33

------> offset: 0x4a349a
0x4a349a    add [rax], eax
0x4a349c    add [rax], al
0x4a349e    add [rax], al
0x4a34a0    ret 0x1d4

------> offset: 0x4a349c
0x4a349c    add [rax], al
0x4a349e    add [rax], al
0x4a34a0    ret 0x1d4

------> offset: 0x4a349e
0x4a349e    add [rax], al
0x4a34a0    ret 0x1d4

------> offset: 0x4a34a0
0x4a34a0    ret 0x1d4

------> offset: 0x4a34a2
0x4a34a2    add [rax], eax
0x4a34a4    add [rax], al
0x4a34a6    add [rax], al
0x4a34a8    ret

------> offset: 0x4a34d2
0x4a34d2    add [rax], eax
0x4a34d4    add [rax], al
0x4a34d6    add [rax], al
0x4a34d8    retf 0x1d4

------> offset: 0x4a34d4
0x4a34d4    add [rax], al
0x4a34d6    add [rax], al
0x4a34d8    retf 0x1d4

------> offset: 0x4a34d6
0x4a34d6    add [rax], al
0x4a34d8    retf 0x1d4

------> offset: 0x4a34d8
0x4a34d8    retf 0x1d4

------> offset: 0x4a34da
0x4a34da    add [rax], eax
0x4a34dc    add [rax], al
0x4a34de    add [rax], al
0x4a34e0    retf

------> offset: 0x4a34fa
0x4a34fa    add [rax], eax
0x4a34fc    add [rax], al
0x4a34fe    add [rax], al
0x4a3500    iret

------> offset: 0x4a3c32
0x4a3c32    add [rax], eax
0x4a3c34    add [rax], al
0x4a3c36    add [rax], al
0x4a3c38    ret 0x1d5

------> offset: 0x4a3c34
0x4a3c34    add [rax], al
0x4a3c36    add [rax], al
0x4a3c38    ret 0x1d5

------> offset: 0x4a3c36
0x4a3c36    add [rax], al
0x4a3c38    ret 0x1d5

------> offset: 0x4a3c38
0x4a3c38    ret 0x1d5

------> offset: 0x4a3c72
0x4a3c72    add [rax], eax
0x4a3c74    add [rax], al
0x4a3c76    add [rax], al
0x4a3c78    retf 0x1d5

------> offset: 0x4a3c74
0x4a3c74    add [rax], al
0x4a3c76    add [rax], al
0x4a3c78    retf 0x1d5

------> offset: 0x4a3c76
0x4a3c76    add [rax], al
0x4a3c78    retf 0x1d5

------> offset: 0x4a3c78
0x4a3c78    retf 0x1d5

------> offset: 0x4a4347
0x4a4347    add dh, cl
0x4a4349    xlat byte [rbx+al]
0x4a434a    add [rax], eax
0x4a434c    add [rax], al
0x4a434e    add [rax], al
0x4a4350    iret

------> offset: 0x4a4349
0x4a4349    xlat byte [rbx+al]
0x4a434a    add [rax], eax
0x4a434c    add [rax], al
0x4a434e    add [rax], al
0x4a4350    iret

------> offset: 0x4a466e
0x4a466e    add [rax], al
0x4a4670    enter 0x0, 0x0
0x4a4674    retf 0x0

------> offset: 0x4a4670
0x4a4670    enter 0x0, 0x0
0x4a4674    retf 0x0

------> offset: 0x4a4862
0x4a4862    add [rax], al
0x4a4864    ret 0x1

------> offset: 0x4a486e
0x4a486e    add [rax], al
0x4a4870    enter 0x1, 0x0
0x4a4874    retf 0x1

------> offset: 0x4a4870
0x4a4870    enter 0x1, 0x0
0x4a4874    retf 0x1

------> offset: 0x4a4a62
0x4a4a62    add [rax], al
0x4a4a64    ret 0x2

------> offset: 0x4a4a6e
0x4a4a6e    add [rax], al
0x4a4a70    enter 0x2, 0x0
0x4a4a74    retf 0x2

------> offset: 0x4a4a70
0x4a4a70    enter 0x2, 0x0
0x4a4a74    retf 0x2

------> offset: 0x4a4a72
0x4a4a72    add [rax], al
0x4a4a74    retf 0x2

------> offset: 0x4a4c62
0x4a4c62    add [rax], al
0x4a4c64    ret 0x3

------> offset: 0x4a4c6e
0x4a4c6e    add [rax], al
0x4a4c70    enter 0x3, 0x0
0x4a4c74    retf 0x3

------> offset: 0x4a4c70
0x4a4c70    enter 0x3, 0x0
0x4a4c74    retf 0x3

------> offset: 0x4a4c72
0x4a4c72    add [rax], al
0x4a4c74    retf 0x3

------> offset: 0x4a4e5e
0x4a4e5e    add [rax], al
0x4a4e60    rol byte [rax+rax], 0x0
0x4a4e64    ret 0x4

------> offset: 0x4a4e60
0x4a4e60    rol byte [rax+rax], 0x0
0x4a4e64    ret 0x4

------> offset: 0x4a4e62
0x4a4e62    add [rax], al
0x4a4e64    ret 0x4

------> offset: 0x4a4e6e
0x4a4e6e    add [rax], al
0x4a4e70    enter 0x4, 0x0
0x4a4e74    retf 0x4

------> offset: 0x4a4e70
0x4a4e70    enter 0x4, 0x0
0x4a4e74    retf 0x4

------> offset: 0x4a4e72
0x4a4e72    add [rax], al
0x4a4e74    retf 0x4

------> offset: 0x4a4e74
0x4a4e74    retf 0x4

------> offset: 0x4a505d
0x4a505d    add eax, 0x5c00000
0x4a5062    add [rax], al
0x4a5064    ret 0x5

------> offset: 0x4a506d
0x4a506d    add eax, 0x5c80000
0x4a5072    add [rax], al
0x4a5074    retf 0x5

------> offset: 0x4a506e
0x4a506e    add [rax], al
0x4a5070    enter 0x5, 0x0
0x4a5074    retf 0x5

------> offset: 0x4a5070
0x4a5070    enter 0x5, 0x0
0x4a5074    retf 0x5

------> offset: 0x4a5072
0x4a5072    add [rax], al
0x4a5074    retf 0x5

------> offset: 0x4a5074
0x4a5074    retf 0x5

------> offset: 0x4a5262
0x4a5262    add [rax], al
0x4a5264    ret 0x6

------> offset: 0x4a5264
0x4a5264    ret 0x6

------> offset: 0x4a526e
0x4a526e    add [rax], al
0x4a5270    enter 0x6, 0x0
0x4a5274    retf 0x6

------> offset: 0x4a5270
0x4a5270    enter 0x6, 0x0
0x4a5274    retf 0x6

------> offset: 0x4a5462
0x4a5462    add [rax], al
0x4a5464    ret 0x7

------> offset: 0x4a5464
0x4a5464    ret 0x7

------> offset: 0x4a546e
0x4a546e    add [rax], al
0x4a5470    enter 0x7, 0x0
0x4a5474    retf 0x7

------> offset: 0x4a5470
0x4a5470    enter 0x7, 0x0
0x4a5474    retf 0x7

------> offset: 0x4a5472
0x4a5472    add [rax], al
0x4a5474    retf 0x7

------> offset: 0x4a5662
0x4a5662    add [rax], al
0x4a5664    ret 0x8

------> offset: 0x4a566e
0x4a566e    add [rax], al
0x4a5670    enter 0x8, 0x0
0x4a5674    retf 0x8

------> offset: 0x4a5670
0x4a5670    enter 0x8, 0x0
0x4a5674    retf 0x8

------> offset: 0x4a5672
0x4a5672    add [rax], al
0x4a5674    retf 0x8

------> offset: 0x4a5674
0x4a5674    retf 0x8

------> offset: 0x4a586e
0x4a586e    add [rax], al
0x4a5870    enter 0x9, 0x0
0x4a5874    retf 0x9

------> offset: 0x4a5870
0x4a5870    enter 0x9, 0x0
0x4a5874    retf 0x9

------> offset: 0x4a5872
0x4a5872    add [rax], al
0x4a5874    retf 0x9

------> offset: 0x4a693b
0x4a693b    mov ebx, 0xffffffffbfbebdbc
0x4a6940    rol cl, 0xc2
0x4a6943    ret

------> offset: 0x4a693d
0x4a693d    mov ebp, 0xffffffffc1c0bfbe
0x4a6942    ret 0xc4c3

------> offset: 0x4a693e
0x4a693e    mov esi, 0xffffffffc2c1c0bf
0x4a6943    ret

------> offset: 0x4a6940
0x4a6940    rol cl, 0xc2
0x4a6943    ret

------> offset: 0x4a6942
0x4a6942    ret 0xc4c3

------> offset: 0x4a6946
0x4a6946    mov bh, 0xc8
0x4a6949    leave
0x4a694a    retf 0xcccb

------> offset: 0x4a6948
0x4a6948    enter 0xcac9, 0xcb
0x4a694c    int 3
0x4a694d    int 0xce
0x4a694f    iret

------> offset: 0x4a6949
0x4a6949    leave
0x4a694a    retf 0xcccb

------> offset: 0x4a694a
0x4a694a    retf 0xcccb

------> offset: 0x4a694c
0x4a694c    int 3
0x4a694d    int 0xce
0x4a694f    iret

------> offset: 0x4a694d
0x4a694d    int 0xce
0x4a694f    iret

------> offset: 0x4a6a97
0x4a6a97    or [rax], ecx
0x4a6a99    retf

------> offset: 0x4a6c5a
0x4a6c5a    add [rax], al
0x4a6c5c    add [rax], al
0x4a6c5e    add [rax], al
0x4a6c60    ret 0x4499

------> offset: 0x4a6c5c
0x4a6c5c    add [rax], al
0x4a6c5e    add [rax], al
0x4a6c60    ret 0x4499

------> offset: 0x4a6c5e
0x4a6c5e    add [rax], al
0x4a6c60    ret 0x4499

------> offset: 0x4a7724
0x4a7724    add [rax], al
0x4a7726    add [rax], al
0x4a7728    retf 0x4516

------> offset: 0x4a7726
0x4a7726    add [rax], al
0x4a7728    retf 0x4516

------> offset: 0x4a7728
0x4a7728    retf 0x4516

------> offset: 0x4abed1
0x4abed1    cmp [rip+0x74e42f0f], dl
0x4abed7    and ebp, esp
0x4abed9    cmc
0x4abeda    iret

------> offset: 0x4abed2
0x4abed2    adc eax, 0x74e42f0f
0x4abed7    and ebp, esp
0x4abed9    cmc
0x4abeda    iret

------> offset: 0x4abed3
0x4abed3    comiss xmm4, xmm4
0x4abed6    jz 0x4abefb
0x4abed8    in al, dx
0x4abed9    cmc
0x4abeda    iret

------> offset: 0x4abed5
0x4abed5    in al, 0x74
0x4abed7    and ebp, esp
0x4abed9    cmc
0x4abeda    iret

------> offset: 0x4abed6
0x4abed6    jz 0x4abefb
0x4abed8    in al, dx
0x4abed9    cmc
0x4abeda    iret

------> offset: 0x4abed7
0x4abed7    and ebp, esp
0x4abed9    cmc
0x4abeda    iret

------> offset: 0x4abed8
0x4abed8    in al, dx
0x4abed9    cmc
0x4abeda    iret

------> offset: 0x4abed9
0x4abed9    cmc
0x4abeda    iret

------> offset: 0x4abf26
0x4abf26    adc eax, 0xffffffffde50c612
0x4abf2b    imul esi, [rax+0x6e], 0x4a
0x4abf2f    iret

------> offset: 0x4abf27
0x4abf27    adc al, dh
0x4abf29    push rax
0x4abf2a    fisubr word [rbx+0x70]
0x4abf2d    outs dx, byte [rsi]
0x4abf2e    iret

------> offset: 0x4abf29
0x4abf29    push rax
0x4abf2a    fisubr word [rbx+0x70]
0x4abf2d    outs dx, byte [rsi]
0x4abf2e    iret

------> offset: 0x4abf2a
0x4abf2a    fisubr word [rbx+0x70]
0x4abf2d    outs dx, byte [rsi]
0x4abf2e    iret

------> offset: 0x4abf2b
0x4abf2b    imul esi, [rax+0x6e], 0x4a
0x4abf2f    iret

------> offset: 0x4abf2c
0x4abf2c    jo 0x4abf9c
0x4abf2e    iret

------> offset: 0x4abf2d
0x4abf2d    outs dx, byte [rsi]
0x4abf2e    iret

------> offset: 0x4abfc5
0x4abfc5    sbb bl, [rsi]
0x4abfc7    ret

------> offset: 0x4abfdc
0x4abfdc    mov edi, 0x21aa1da1
0x4abfe1    sar [rsi], cl
0x4abfe3    jo 0x4abfcf
0x4abfe5    iret

------> offset: 0x4abfde
0x4abfde    sbb eax, 0x3ed321aa
0x4abfe3    jo 0x4abfcf
0x4abfe5    iret

------> offset: 0x4abfdf
0x4abfdf    stosb
0x4abfe0    and ebx, edx
0x4abfe2    jo 0x4abfcf
0x4abfe5    iret

------> offset: 0x4abfe0
0x4abfe0    and ebx, edx
0x4abfe2    jo 0x4abfcf
0x4abfe5    iret

------> offset: 0x4abfe1
0x4abfe1    sar [rsi], cl
0x4abfe3    jo 0x4abfcf
0x4abfe5    iret

------> offset: 0x4abfe2
0x4abfe2    jo 0x4abfcf
0x4abfe5    iret

------> offset: 0x4ac0d7
0x4ac0d7    cmc
0x4ac0d8    pop rbx
0x4ac0d9    and [rsi+rbp*2-0x7a], edi
0x4ac0dd    lahf
0x4ac0de    ret 0x871e

------> offset: 0x4ac0d8
0x4ac0d8    pop rbx
0x4ac0d9    and [rsi+rbp*2-0x7a], edi
0x4ac0dd    lahf
0x4ac0de    ret 0x871e

------> offset: 0x4ac0d9
0x4ac0d9    and [rsi+rbp*2-0x7a], edi
0x4ac0dd    lahf
0x4ac0de    ret 0x871e

------> offset: 0x4ac0dd
0x4ac0dd    lahf
0x4ac0de    ret 0x871e

------> offset: 0x4ac0de
0x4ac0de    ret 0x871e

------> offset: 0x4ac1a1
0x4ac1a1    mov ch, 0x31
0x4ac1a4    mov ah, bl
0x4ac1a6    push rsi
0x4ac1a7    ret

------> offset: 0x4ac1a4
0x4ac1a4    mov ah, bl
0x4ac1a6    push rsi
0x4ac1a7    ret

------> offset: 0x4ac1a5
0x4ac1a5    jrcxz 0x4ac1fd
0x4ac1a7    ret

------> offset: 0x4ac1a6
0x4ac1a6    push rsi
0x4ac1a7    ret

------> offset: 0x4ac30c
0x4ac30c    push qword 0x4d3fe309
0x4ac312    jge 0x4ac2c6
0x4ac314    iret

------> offset: 0x4ac30f
0x4ac30f    jrcxz 0x4ac350
0x4ac311    jge 0x4ac2c6
0x4ac314    iret

------> offset: 0x4ac311
0x4ac311    jge 0x4ac2c6
0x4ac314    iret

------> offset: 0x4ac34a
0x4ac34a    xor al, 0x19
0x4ac34c    xchg [rcx+0x79], ecx
0x4ac34f    xchg edx, eax
0x4ac350    ret 0xf869

------> offset: 0x4ac34c
0x4ac34c    xchg [rcx+0x79], ecx
0x4ac34f    xchg edx, eax
0x4ac350    ret 0xf869

------> offset: 0x4ac34d
0x4ac34d    jns 0x4ac2e2
0x4ac350    ret 0xf869

------> offset: 0x4ac34f
0x4ac34f    xchg edx, eax
0x4ac350    ret 0xf869

------> offset: 0x4ac350
0x4ac350    ret 0xf869

------> offset: 0x4ac37e
0x4ac37e    test al, 0xa7
0x4ac380    mov r11w, 0xf32d
0x4ac385    retf

------> offset: 0x4ac37f
0x4ac37f    cmpsd
0x4ac380    mov r11w, 0xf32d
0x4ac385    retf

------> offset: 0x4ac380
0x4ac380    mov r11w, 0xf32d
0x4ac385    retf

------> offset: 0x4ac381
0x4ac381    mov bx, 0xf32d
0x4ac385    retf

------> offset: 0x4ac3aa
0x4ac3aa    mov ah, 0x13
0x4ac3ac    ret

------> offset: 0x4ac3e3
0x4ac3e3    cmp al, 0x66
0x4ac3e5    movsb
0x4ac3e6    sub eax, 0xffffffffea4ca798
0x4ac3eb    retf

------> offset: 0x4ac3e4
0x4ac3e4    movsb
0x4ac3e6    sub eax, 0xffffffffea4ca798
0x4ac3eb    retf

------> offset: 0x4ac3e6
0x4ac3e6    sub eax, 0xffffffffea4ca798
0x4ac3eb    retf

------> offset: 0x4ac469
0x4ac469    sbb dh, [rsi+0x53]
0x4ac46c    sbb eax, edx
0x4ac46e    cdq
0x4ac46f    iret

------> offset: 0x4ac46a
0x4ac46a    jbe 0x4ac4bf
0x4ac46c    sbb eax, edx
0x4ac46e    cdq
0x4ac46f    iret

------> offset: 0x4ac46b
0x4ac46b    push rbx
0x4ac46c    sbb eax, edx
0x4ac46e    cdq
0x4ac46f    iret

------> offset: 0x4ac46c
0x4ac46c    sbb eax, edx
0x4ac46e    cdq
0x4ac46f    iret

------> offset: 0x4ac46e
0x4ac46e    cdq
0x4ac46f    iret

------> offset: 0x4ac470
0x4ac470    ret 0xde9e

------> offset: 0x4ac4bb
0x4ac4bb    retf 0x3ec

------> offset: 0x4ac4ea
0x4ac4ea    cli
0x4ac4eb    xchg [rsp+rax+0x6fa9ce9d], esp
0x4ac4f2    ret

------> offset: 0x4ac4eb
0x4ac4eb    xchg [rsp+rax+0x6fa9ce9d], esp
0x4ac4f2    ret

------> offset: 0x4ac799
0x4ac799    in eax, 0x6a
0x4ac79b    mov eax, 0x45155e93
0x4ac7a0    ret 0x591c

------> offset: 0x4ac79b
0x4ac79b    mov eax, 0x45155e93
0x4ac7a0    ret 0x591c

------> offset: 0x4ac79f
0x4ac79f    ret 0x591c

------> offset: 0x4ac7bf
0x4ac7bf    ret 0x67b2

------> offset: 0x4ac7cc
0x4ac7cc    jz 0x4ac7f3
0x4ac7ce    push -0x51
0x4ac7d0    xlat byte [rbx+al]
0x4ac7d1    out 0xb3, al
0x4ac7d3    retf 0xe80

------> offset: 0x4ac7ce
0x4ac7ce    push -0x51
0x4ac7d0    xlat byte [rbx+al]
0x4ac7d1    out 0xb3, al
0x4ac7d3    retf 0xe80

------> offset: 0x4ac7cf
0x4ac7cf    scasd
0x4ac7d0    xlat byte [rbx+al]
0x4ac7d1    out 0xb3, al
0x4ac7d3    retf 0xe80

------> offset: 0x4ac7d0
0x4ac7d0    xlat byte [rbx+al]
0x4ac7d1    out 0xb3, al
0x4ac7d3    retf 0xe80

------> offset: 0x4ac7d1
0x4ac7d1    out 0xb3, al
0x4ac7d3    retf 0xe80

------> offset: 0x4ac7d3
0x4ac7d3    retf 0xe80

------> offset: 0x4ac7e0
0x4ac7e0    add [rdi-0x67d7900], edx
0x4ac7e6    retf

------> offset: 0x4ac822
0x4ac822    jle 0x4ac7b8
0x4ac824    xlat byte [rbx+al]
0x4ac825    retf 0xa1eb

------> offset: 0x4ac823
0x4ac823    xchg esp, eax
0x4ac824    xlat byte [rbx+al]
0x4ac825    retf 0xa1eb

------> offset: 0x4ac824
0x4ac824    xlat byte [rbx+al]
0x4ac825    retf 0xa1eb

------> offset: 0x4ac825
0x4ac825    retf 0xa1eb

------> offset: 0x4ac827
0x4ac827    mov eax, [0x2130504dd97d9556]
0x4ac830    retf

------> offset: 0x4ac828
0x4ac828    push rsi
0x4ac829    xchg ebp, eax
0x4ac82a    jge 0x4ac805
0x4ac82c    push r8
0x4ac82e    xor [rcx], ah
0x4ac830    retf

------> offset: 0x4ac829
0x4ac829    xchg ebp, eax
0x4ac82a    jge 0x4ac805
0x4ac82c    push r8
0x4ac82e    xor [rcx], ah
0x4ac830    retf

------> offset: 0x4ac82a
0x4ac82a    jge 0x4ac805
0x4ac82c    push r8
0x4ac82e    xor [rcx], ah
0x4ac830    retf

------> offset: 0x4ac82c
0x4ac82c    push r8
0x4ac82e    xor [rcx], ah
0x4ac830    retf

------> offset: 0x4ac82d
0x4ac82d    push rax
0x4ac82e    xor [rcx], ah
0x4ac830    retf

------> offset: 0x4ac82e
0x4ac82e    xor [rcx], ah
0x4ac830    retf

------> offset: 0x4ac850
0x4ac850    mov ah, 0xa5
0x4ac852    ret

------> offset: 0x4ac895
0x4ac895    xchg edi, eax
0x4ac896    cmpsb
0x4ac897    jnz 0x4ac85a
0x4ac899    mov ecx, 0x5b92ac50
0x4ac89e    retf

------> offset: 0x4ac896
0x4ac896    cmpsb
0x4ac897    jnz 0x4ac85a
0x4ac899    mov ecx, 0x5b92ac50
0x4ac89e    retf

------> offset: 0x4ac897
0x4ac897    jnz 0x4ac85a
0x4ac899    mov ecx, 0x5b92ac50
0x4ac89e    retf

------> offset: 0x4ac899
0x4ac899    mov ecx, 0x5b92ac50
0x4ac89e    retf

------> offset: 0x4ac89a
0x4ac89a    push rax
0x4ac89b    lodsb
0x4ac89c    xchg edx, eax
0x4ac89d    pop rbx
0x4ac89e    retf

------> offset: 0x4ac89b
0x4ac89b    lodsb
0x4ac89c    xchg edx, eax
0x4ac89d    pop rbx
0x4ac89e    retf

------> offset: 0x4ac89c
0x4ac89c    xchg edx, eax
0x4ac89d    pop rbx
0x4ac89e    retf

------> offset: 0x4ac89d
0x4ac89d    pop rbx
0x4ac89e    retf

------> offset: 0x4ac8ad
0x4ac8ad    retf 0xeb83

------> offset: 0x4ac980
0x4ac980    lahf
0x4ac981    push -0x5e
0x4ac983    cld
0x4ac984    shr al, cl
0x4ac986    add al, 0x3d
0x4ac988    retf

------> offset: 0x4ac981
0x4ac981    push -0x5e
0x4ac983    cld
0x4ac984    shr al, cl
0x4ac986    add al, 0x3d
0x4ac988    retf

------> offset: 0x4ac983
0x4ac983    cld
0x4ac984    shr al, cl
0x4ac986    add al, 0x3d
0x4ac988    retf

------> offset: 0x4ac984
0x4ac984    shr al, cl
0x4ac986    add al, 0x3d
0x4ac988    retf

------> offset: 0x4ac986
0x4ac986    add al, 0x3d
0x4ac988    retf

------> offset: 0x4ac991
0x4ac991    lea ebx, [rsi-0x3271f33]
0x4ac997    test al, 0x97
0x4ac999    xchg esp, eax
0x4ac99a    ret

------> offset: 0x4ac992
0x4ac992    sahf
0x4ac993    int 0xe0
0x4ac995    fdivr st0, st4
0x4ac997    test al, 0x97
0x4ac999    xchg esp, eax
0x4ac99a    ret

------> offset: 0x4ac993
0x4ac993    int 0xe0
0x4ac995    fdivr st0, st4
0x4ac997    test al, 0x97
0x4ac999    xchg esp, eax
0x4ac99a    ret

------> offset: 0x4ac994
0x4ac994    loopnz 0x4ac96e
0x4ac996    cld
0x4ac997    test al, 0x97
0x4ac999    xchg esp, eax
0x4ac99a    ret

------> offset: 0x4ac995
0x4ac995    fdivr st0, st4
0x4ac997    test al, 0x97
0x4ac999    xchg esp, eax
0x4ac99a    ret

------> offset: 0x4ac996
0x4ac996    cld
0x4ac997    test al, 0x97
0x4ac999    xchg esp, eax
0x4ac99a    ret

------> offset: 0x4ac997
0x4ac997    test al, 0x97
0x4ac999    xchg esp, eax
0x4ac99a    ret

------> offset: 0x4ac998
0x4ac998    xchg edi, eax
0x4ac999    xchg esp, eax
0x4ac99a    ret

------> offset: 0x4ac9cf
0x4ac9cf    stosd
0x4ac9d0    enter 0xea37, 0x9e
0x4ac9d4    ja 0x4ac9d1
0x4ac9d6    or ch, cl
0x4ac9d8    iret

------> offset: 0x4ac9d0
0x4ac9d0    enter 0xea37, 0x9e
0x4ac9d4    ja 0x4ac9d1
0x4ac9d6    or ch, cl
0x4ac9d8    iret

------> offset: 0x4ac9d3
0x4ac9d3    sahf
0x4ac9d4    ja 0x4ac9d1
0x4ac9d6    or ch, cl
0x4ac9d8    iret

------> offset: 0x4ac9d4
0x4ac9d4    ja 0x4ac9d1
0x4ac9d6    or ch, cl
0x4ac9d8    iret

------> offset: 0x4ac9d5
0x4ac9d5    sti
0x4ac9d6    or ch, cl
0x4ac9d8    iret

------> offset: 0x4ac9d6
0x4ac9d6    or ch, cl
0x4ac9d8    iret

------> offset: 0x4ac9da
0x4ac9da    retf 0x2c90

------> offset: 0x4ac9f8
0x4ac9f8    or al, 0x45
0x4ac9fa    sub al, 0xb3
0x4ac9fc    push rdi
0x4ac9fd    cmp bl, al
0x4ac9ff    and dl, bl
0x4aca01    iret

------> offset: 0x4ac9f9
0x4ac9f9    sub al, 0xb3
0x4ac9fc    push rdi
0x4ac9fd    cmp bl, al
0x4ac9ff    and dl, bl
0x4aca01    iret

------> offset: 0x4ac9fb
0x4ac9fb    mov bl, 0x57
0x4ac9fd    cmp bl, al
0x4ac9ff    and dl, bl
0x4aca01    iret

------> offset: 0x4ac9fc
0x4ac9fc    push rdi
0x4ac9fd    cmp bl, al
0x4ac9ff    and dl, bl
0x4aca01    iret

------> offset: 0x4ac9fd
0x4ac9fd    cmp bl, al
0x4ac9ff    and dl, bl
0x4aca01    iret

------> offset: 0x4ac9ff
0x4ac9ff    and dl, bl
0x4aca01    iret

------> offset: 0x4aca16
0x4aca16    lodsb
0x4aca17    xchg ebp, eax
0x4aca18    fldcw [rbp+rcx*8+0x4d]
0x4aca1c    push rax
0x4aca1d    and ebx, [rbx]
0x4aca1f    iret

------> offset: 0x4aca17
0x4aca17    xchg ebp, eax
0x4aca18    fldcw [rbp+rcx*8+0x4d]
0x4aca1c    push rax
0x4aca1d    and ebx, [rbx]
0x4aca1f    iret

------> offset: 0x4aca18
0x4aca18    fldcw [rbp+rcx*8+0x4d]
0x4aca1c    push rax
0x4aca1d    and ebx, [rbx]
0x4aca1f    iret

------> offset: 0x4aca19
0x4aca19    ins byte [rdi], dx
0x4aca1a    int 0x4d
0x4aca1c    push rax
0x4aca1d    and ebx, [rbx]
0x4aca1f    iret

------> offset: 0x4aca1a
0x4aca1a    int 0x4d
0x4aca1c    push rax
0x4aca1d    and ebx, [rbx]
0x4aca1f    iret

------> offset: 0x4aca1b
0x4aca1b    push r8
0x4aca1d    and ebx, [rbx]
0x4aca1f    iret

------> offset: 0x4aca1c
0x4aca1c    push rax
0x4aca1d    and ebx, [rbx]
0x4aca1f    iret

------> offset: 0x4aca1d
0x4aca1d    and ebx, [rbx]
0x4aca1f    iret

------> offset: 0x4acacc
0x4acacc    ret 0x5508

------> offset: 0x4acb0a
0x4acb0a    ret 0xcca7

------> offset: 0x4acb41
0x4acb41    leave
0x4acb42    retf 0x6ee8

------> offset: 0x4acb42
0x4acb42    retf 0x6ee8

------> offset: 0x4acb44
0x4acb44    outs dx, byte [rsi]
0x4acb45    sahf
0x4acb46    ret 0x38ae

------> offset: 0x4acb45
0x4acb45    sahf
0x4acb46    ret 0x38ae

------> offset: 0x4acb46
0x4acb46    ret 0x38ae

------> offset: 0x4acbe7
0x4acbe7    ret 0xe970

------> offset: 0x4ad062
0x4ad062    retf 0x79f5

------> offset: 0x4ad078
0x4ad078    ret 0xc4ff

------> offset: 0x4ad0dd
0x4ad0dd    shl dword [rax-0x6a5aa279], 0x1
0x4ad0e3    retf 0x33e6

------> offset: 0x4ad0df
0x4ad0df    xchg [rbp-0x5b], ebx
0x4ad0e2    xchg ebp, eax
0x4ad0e3    retf 0x33e6

------> offset: 0x4ad0e0
0x4ad0e0    pop rbp
0x4ad0e1    movsd
0x4ad0e2    xchg ebp, eax
0x4ad0e3    retf 0x33e6

------> offset: 0x4ad0e1
0x4ad0e1    movsd
0x4ad0e2    xchg ebp, eax
0x4ad0e3    retf 0x33e6

------> offset: 0x4ad0e2
0x4ad0e2    xchg ebp, eax
0x4ad0e3    retf 0x33e6

------> offset: 0x4ad0e3
0x4ad0e3    retf 0x33e6

------> offset: 0x4ad0f6
0x4ad0f6    mov dh, 0xfb
0x4ad0f8    or eax, 0x71c52950
0x4ad0fd    push rsp
0x4ad0fe    iret

------> offset: 0x4ad0f7
0x4ad0f7    sti
0x4ad0f8    or eax, 0x71c52950
0x4ad0fd    push rsp
0x4ad0fe    iret

------> offset: 0x4ad0f8
0x4ad0f8    or eax, 0x71c52950
0x4ad0fd    push rsp
0x4ad0fe    iret

------> offset: 0x4ad0f9
0x4ad0f9    push rax
0x4ad0fa    sub ebp, eax
0x4ad0fc    jno 0x4ad152
0x4ad0fe    iret

------> offset: 0x4ad0fa
0x4ad0fa    sub ebp, eax
0x4ad0fc    jno 0x4ad152
0x4ad0fe    iret

------> offset: 0x4ad0fc
0x4ad0fc    jno 0x4ad152
0x4ad0fe    iret

------> offset: 0x4ad144
0x4ad144    push -0x30
0x4ad146    retf 0xe72e

------> offset: 0x4ad146
0x4ad146    retf 0xe72e

------> offset: 0x4ad1d7
0x4ad1d7    movsxd ecx, [rbp-0x46]
0x4ad1da    iret

------> offset: 0x4ad1dc
0x4ad1dc    ftst
0x4ad1de    push 0x72
0x4ad1e0    or ecx, ecx
0x4ad1e3    sysret

------> offset: 0x4ad1dd
0x4ad1dd    in al, 0x6a
0x4ad1df    jb 0x4ad223
0x4ad1e1    or ecx, ecx
0x4ad1e3    sysret

------> offset: 0x4ad1de
0x4ad1de    push 0x72
0x4ad1e0    or ecx, ecx
0x4ad1e3    sysret

------> offset: 0x4ad1df
0x4ad1df    jb 0x4ad223
0x4ad1e1    or ecx, ecx
0x4ad1e3    sysret

------> offset: 0x4ad1e0
0x4ad1e0    or ecx, ecx
0x4ad1e3    sysret

------> offset: 0x4ad1e2
0x4ad1e2    leave
0x4ad1e3    sysret

------> offset: 0x4ad1e3
0x4ad1e3    sysret

------> offset: 0x4ad1fd
0x4ad1fd    xchg edi, eax
0x4ad1fe    retf 0xe152

------> offset: 0x4ad1fe
0x4ad1fe    retf 0xe152

------> offset: 0x4ad22f
0x4ad22f    add [rsi], edi
0x4ad231    iret

------> offset: 0x4ad243
0x4ad243    sar ecx, 0x1
0x4ad245    jnp 0x4ad200
0x4ad247    ret

------> offset: 0x4ad244
0x4ad244    stc
0x4ad245    jnp 0x4ad200
0x4ad247    ret

------> offset: 0x4ad245
0x4ad245    jnp 0x4ad200
0x4ad247    ret

------> offset: 0x4ad2d2
0x4ad2d2    sbb bl, [rip+0x30565c9]
0x4ad2d8    in eax, dx
0x4ad2d9    retf

------> offset: 0x4ad2d3
0x4ad2d3    sbb eax, 0x30565c9
0x4ad2d8    in eax, dx
0x4ad2d9    retf

------> offset: 0x4ad2d7
0x4ad2d7    add ebp, ebp
0x4ad2d9    retf

------> offset: 0x4ad2d8
0x4ad2d8    in eax, dx
0x4ad2d9    retf

------> offset: 0x4ad367
0x4ad367    fstp dword [rbx+0x4a315a58]
0x4ad36d    ret 0x1b49

------> offset: 0x4ad36c
0x4ad36c    ret 0x1b49

------> offset: 0x4ad3c2
0x4ad3c2    jae 0x4ad39b
0x4ad3c4    jo 0x4ad437
0x4ad3c6    mov ebp, 0xfffffffffb67d10d
0x4ad3cb    ret

------> offset: 0x4ad3c3
0x4ad3c3    xlat byte [rbx+al]
0x4ad3c4    jo 0x4ad437
0x4ad3c6    mov ebp, 0xfffffffffb67d10d
0x4ad3cb    ret

------> offset: 0x4ad3c4
0x4ad3c4    jo 0x4ad437
0x4ad3c6    mov ebp, 0xfffffffffb67d10d
0x4ad3cb    ret

------> offset: 0x4ad3c6
0x4ad3c6    mov ebp, 0xfffffffffb67d10d
0x4ad3cb    ret

------> offset: 0x4ad3c8
0x4ad3c8    shl dword [rdi-0x5], 0x1
0x4ad3cb    ret

------> offset: 0x4ad3c9
0x4ad3c9    sti
0x4ad3cb    ret

------> offset: 0x4ad423
0x4ad423    ret 0xa514

------> offset: 0x4ad449
0x4ad449    fsubr st5, st0
0x4ad44b    add ebx, [rsi-0x4f8fabcb]
0x4ad451    iret

------> offset: 0x4ad44b
0x4ad44b    add ebx, [rsi-0x4f8fabcb]
0x4ad451    iret

------> offset: 0x4ad44e
0x4ad44e    push rsp
0x4ad44f    jo 0x4ad401
0x4ad451    iret

------> offset: 0x4ad44f
0x4ad44f    jo 0x4ad401
0x4ad451    iret

------> offset: 0x4ad461
0x4ad461    adc [rbp-0x3840705d], dh
0x4ad467    push rdx
0x4ad468    iret

------> offset: 0x4ad467
0x4ad467    push rdx
0x4ad468    iret

------> offset: 0x4ad480
0x4ad480    movsxd eax, [rbp+0x275dcc4c]
0x4ad486    retf 0xd1cb

------> offset: 0x4ad486
0x4ad486    retf 0xd1cb

------> offset: 0x4ad4c4
0x4ad4c4    ret 0xbe57

------> offset: 0x4ad500
0x4ad500    out 0xcf, eax
0x4ad502    movsb
0x4ad503    in eax, 0x24
0x4ad505    outs dx, dword [rsi]
0x4ad507    ret 0x5ae4

------> offset: 0x4ad502
0x4ad502    movsb
0x4ad503    in eax, 0x24
0x4ad505    outs dx, dword [rsi]
0x4ad507    ret 0x5ae4

------> offset: 0x4ad503
0x4ad503    in eax, 0x24
0x4ad505    outs dx, dword [rsi]
0x4ad507    ret 0x5ae4

------> offset: 0x4ad504
0x4ad504    and al, 0x26
0x4ad506    outs dx, dword [rsi]
0x4ad507    ret 0x5ae4

------> offset: 0x4ad505
0x4ad505    outs dx, dword [rsi]
0x4ad507    ret 0x5ae4

------> offset: 0x4ad507
0x4ad507    ret 0x5ae4

------> offset: 0x4ad526
0x4ad526    int 0xdd
0x4ad528    jz 0x4ad4ef
0x4ad52a    xor al, 0xd8
0x4ad52c    ret

------> offset: 0x4ad528
0x4ad528    jz 0x4ad4ef
0x4ad52a    xor al, 0xd8
0x4ad52c    ret

------> offset: 0x4ad52a
0x4ad52a    xor al, 0xd8
0x4ad52c    ret

------> offset: 0x4ad555
0x4ad555    xchg [rdi-0x7c], dl
0x4ad558    xchg [rax], edi
0x4ad55a    in eax, 0xe5
0x4ad55c    retf 0x2a91

------> offset: 0x4ad558
0x4ad558    xchg [rax], edi
0x4ad55a    in eax, 0xe5
0x4ad55c    retf 0x2a91

------> offset: 0x4ad55a
0x4ad55a    in eax, 0xe5
0x4ad55c    retf 0x2a91

------> offset: 0x4ad55c
0x4ad55c    retf 0x2a91

------> offset: 0x4ad611
0x4ad611    retf 0x3617

------> offset: 0x4ad63e
0x4ad63e    sub ebp, eax
0x4ad640    fcomp qword [rdi-0x4a]
0x4ad643    ret 0x474c

------> offset: 0x4ad640
0x4ad640    fcomp qword [rdi-0x4a]
0x4ad643    ret 0x474c

------> offset: 0x4ad641
0x4ad641    pop rdi
0x4ad642    mov dh, 0x4e
0x4ad644    ret 0x474c

------> offset: 0x4ad642
0x4ad642    mov dh, 0x4e
0x4ad644    ret 0x474c

------> offset: 0x4ad643
0x4ad643    ret 0x474c

------> offset: 0x4ad67c
0x4ad67c    sahf
0x4ad67d    retf

------> offset: 0x4ad681
0x4ad681    fld qword [rsi+0x32]
0x4ad684    mov bh, 0xb4
0x4ad686    mov edi, [rdx]
0x4ad688    ret

------> offset: 0x4ad684
0x4ad684    mov bh, 0xb4
0x4ad686    mov edi, [rdx]
0x4ad688    ret

------> offset: 0x4ad686
0x4ad686    mov edi, [rdx]
0x4ad688    ret

------> offset: 0x4ad6ba
0x4ad6ba    rcl byte [rax-0x49], 0x4c
0x4ad6be    out dx, eax
0x4ad6bf    push rcx
0x4ad6c0    test al, 0xf2
0x4ad6c2    retf

------> offset: 0x4ad6bb
0x4ad6bb    push rax
0x4ad6bc    mov bh, 0x4c
0x4ad6be    out dx, eax
0x4ad6bf    push rcx
0x4ad6c0    test al, 0xf2
0x4ad6c2    retf

------> offset: 0x4ad6bc
0x4ad6bc    mov bh, 0x4c
0x4ad6be    out dx, eax
0x4ad6bf    push rcx
0x4ad6c0    test al, 0xf2
0x4ad6c2    retf

------> offset: 0x4ad6bd
0x4ad6bd    out dx, rax
0x4ad6bf    push rcx
0x4ad6c0    test al, 0xf2
0x4ad6c2    retf

------> offset: 0x4ad6be
0x4ad6be    out dx, eax
0x4ad6bf    push rcx
0x4ad6c0    test al, 0xf2
0x4ad6c2    retf

------> offset: 0x4ad6bf
0x4ad6bf    push rcx
0x4ad6c0    test al, 0xf2
0x4ad6c2    retf

------> offset: 0x4ad6c0
0x4ad6c0    test al, 0xf2
0x4ad6c2    retf

------> offset: 0x4ad6c4
0x4ad6c4    adc eax, 0x2f3ffae1
0x4ad6c9    retf 0xb51a

------> offset: 0x4ad6c9
0x4ad6c9    retf 0xb51a

------> offset: 0x4ad6e0
0x4ad6e0    fstp st0
0x4ad6e2    ret 0xde5d

------> offset: 0x4ad6e2
0x4ad6e2    ret 0xde5d

------> offset: 0x4ad733
0x4ad733    ret 0x9576

------> offset: 0x4ad74d
0x4ad74d    sub [rax+0x1e], eax
0x4ad750    cli
0x4ad751    test bh, dl
0x4ad753    retf 0xdf7f

------> offset: 0x4ad750
0x4ad750    cli
0x4ad751    test bh, dl
0x4ad753    retf 0xdf7f

------> offset: 0x4ad751
0x4ad751    test bh, dl
0x4ad753    retf 0xdf7f

------> offset: 0x4ad752
0x4ad752    xlat byte [rbx+al]
0x4ad753    retf 0xdf7f

------> offset: 0x4ad753
0x4ad753    retf 0xdf7f

------> offset: 0x4ad76d
0x4ad76d    ins dword [rdi], dx
0x4ad76e    ret 0xb9b9

------> offset: 0x4ad76e
0x4ad76e    ret 0xb9b9

------> offset: 0x4ad7d6
0x4ad7d6    xor [rax-0x7d993651], ebp
0x4ad7dc    retf 0xe496

------> offset: 0x4ad7dc
0x4ad7dc    retf 0xe496

------> offset: 0x4ad82d
0x4ad82d    test eax, 0x35eea9cd
0x4ad832    outs dx, byte [rsi]
0x4ad833    retf

------> offset: 0x4ad832
0x4ad832    outs dx, byte [rsi]
0x4ad833    retf

------> offset: 0x4ad843
0x4ad843    jz 0x4ad805
0x4ad845    iret

------> offset: 0x4ad8a3
0x4ad8a3    hlt
0x4ad8a4    stosb
0x4ad8a5    cli
0x4ad8a6    ret 0xac65

------> offset: 0x4ad8a4
0x4ad8a4    stosb
0x4ad8a5    cli
0x4ad8a6    ret 0xac65

------> offset: 0x4ad8a5
0x4ad8a5    cli
0x4ad8a6    ret 0xac65

------> offset: 0x4ad8a6
0x4ad8a6    ret 0xac65

------> offset: 0x4ad909
0x4ad909    mov al, 0xb1
0x4ad90b    fisubr dword [rcx*4-0x2397b9c7]
0x4ad912    iret

------> offset: 0x4ad90b
0x4ad90b    fisubr dword [rcx*4-0x2397b9c7]
0x4ad912    iret

------> offset: 0x4ad950
0x4ad950    retf 0x8481

------> offset: 0x4ae172
0x4ae172    lahf
0x4ae173    or [rbp+0x68], edi
0x4ae176    mov ch, 0x41
0x4ae178    outs dx, byte [rsi]
0x4ae179    sbb edi, ebp
0x4ae17b    retf

------> offset: 0x4ae173
0x4ae173    or [rbp+0x68], edi
0x4ae176    mov ch, 0x41
0x4ae178    outs dx, byte [rsi]
0x4ae179    sbb edi, ebp
0x4ae17b    retf

------> offset: 0x4ae174
0x4ae174    jge 0x4ae1de
0x4ae176    mov ch, 0x41
0x4ae178    outs dx, byte [rsi]
0x4ae179    sbb edi, ebp
0x4ae17b    retf

------> offset: 0x4ae175
0x4ae175    push qword 0x1b6e41b5
0x4ae17a    std
0x4ae17b    retf

------> offset: 0x4ae176
0x4ae176    mov ch, 0x41
0x4ae178    outs dx, byte [rsi]
0x4ae179    sbb edi, ebp
0x4ae17b    retf

------> offset: 0x4ae177
0x4ae177    outs dx, byte [rsi]
0x4ae179    sbb edi, ebp
0x4ae17b    retf

------> offset: 0x4ae179
0x4ae179    sbb edi, ebp
0x4ae17b    retf

------> offset: 0x4ae17a
0x4ae17a    std
0x4ae17b    retf

------> offset: 0x4ae1de
0x4ae1de    retf 0x76a5

------> offset: 0x4ae23b
0x4ae23b    add [rax+rdx*4+0x16], edi
0x4ae23f    out dx, al
0x4ae240    out 0x78, al
0x4ae242    jnp 0x4ae29e
0x4ae244    retf

------> offset: 0x4ae23f
0x4ae23f    out dx, al
0x4ae240    out 0x78, al
0x4ae242    jnp 0x4ae29e
0x4ae244    retf

------> offset: 0x4ae240
0x4ae240    out 0x78, al
0x4ae242    jnp 0x4ae29e
0x4ae244    retf

------> offset: 0x4ae241
0x4ae241    js 0x4ae2be
0x4ae243    pop rdx
0x4ae244    retf

------> offset: 0x4ae242
0x4ae242    jnp 0x4ae29e
0x4ae244    retf

------> offset: 0x4ae243
0x4ae243    pop rdx
0x4ae244    retf

------> offset: 0x4ae25d
0x4ae25d    xchg edx, eax
0x4ae25e    jae 0x4ae233
0x4ae260    push rsi
0x4ae261    pop rdx
0x4ae262    jz 0x4ae228
0x4ae264    ret 0xacfc

------> offset: 0x4ae25e
0x4ae25e    jae 0x4ae233
0x4ae260    push rsi
0x4ae261    pop rdx
0x4ae262    jz 0x4ae228
0x4ae264    ret 0xacfc

------> offset: 0x4ae25f
0x4ae25f    rcl [rsi+0x5a], cl
0x4ae262    jz 0x4ae228
0x4ae264    ret 0xacfc

------> offset: 0x4ae260
0x4ae260    push rsi
0x4ae261    pop rdx
0x4ae262    jz 0x4ae228
0x4ae264    ret 0xacfc

------> offset: 0x4ae261
0x4ae261    pop rdx
0x4ae262    jz 0x4ae228
0x4ae264    ret 0xacfc

------> offset: 0x4ae262
0x4ae262    jz 0x4ae228
0x4ae264    ret 0xacfc

------> offset: 0x4ae264
0x4ae264    ret 0xacfc

------> offset: 0x4ae265
0x4ae265    cld
0x4ae266    lodsb
0x4ae267    loop 0x4ae230
0x4ae269    retf

------> offset: 0x4ae266
0x4ae266    lodsb
0x4ae267    loop 0x4ae230
0x4ae269    retf

------> offset: 0x4ae267
0x4ae267    loop 0x4ae230
0x4ae269    retf

------> offset: 0x4ae2a8
0x4ae2a8    js 0x4ae276
0x4ae2aa    movsxd ebx, [rsi+rax*8+0x74]
0x4ae2ae    retf 0x93a2

------> offset: 0x4ae2a9
0x4ae2a9    int 3
0x4ae2aa    movsxd ebx, [rsi+rax*8+0x74]
0x4ae2ae    retf 0x93a2

------> offset: 0x4ae2aa
0x4ae2aa    movsxd ebx, [rsi+rax*8+0x74]
0x4ae2ae    retf 0x93a2

------> offset: 0x4ae2ae
0x4ae2ae    retf 0x93a2

------> offset: 0x4ae36c
0x4ae36c    popf
0x4ae36d    jrcxz 0x4ae328
0x4ae36f    add [rdx-0x36a5831f], esp
0x4ae375    retf

------> offset: 0x4ae36d
0x4ae36d    jrcxz 0x4ae328
0x4ae36f    add [rdx-0x36a5831f], esp
0x4ae375    retf

------> offset: 0x4ae36e
0x4ae36e    mov ecx, 0x7ce1a201
0x4ae373    pop rdx
0x4ae374    leave
0x4ae375    retf

------> offset: 0x4ae36f
0x4ae36f    add [rdx-0x36a5831f], esp
0x4ae375    retf

------> offset: 0x4ae371
0x4ae371    loopz 0x4ae3ef
0x4ae373    pop rdx
0x4ae374    leave
0x4ae375    retf

------> offset: 0x4ae372
0x4ae372    jl 0x4ae3ce
0x4ae374    leave
0x4ae375    retf

------> offset: 0x4ae373
0x4ae373    pop rdx
0x4ae374    leave
0x4ae375    retf

------> offset: 0x4ae374
0x4ae374    leave
0x4ae375    retf

------> offset: 0x4ae3ae
0x4ae3ae    mov bh, [rdi-0x2c]
0x4ae3b1    iret

------> offset: 0x4ae3af
0x4ae3af    jg 0x4ae385
0x4ae3b1    iret

------> offset: 0x4ae3e1
0x4ae3e1    mov [0xeb1b5c347ebb9329], al
0x4ae3ea    retf

------> offset: 0x4ae3e2
0x4ae3e2    sub [rbx+0x5c347ebb], edx
0x4ae3e8    sbb ebp, ebx
0x4ae3ea    retf

------> offset: 0x4ae3e5
0x4ae3e5    jle 0x4ae41b
0x4ae3e7    pop rsp
0x4ae3e8    sbb ebp, ebx
0x4ae3ea    retf

------> offset: 0x4ae3e6
0x4ae3e6    xor al, 0x5c
0x4ae3e8    sbb ebp, ebx
0x4ae3ea    retf

------> offset: 0x4ae3e7
0x4ae3e7    pop rsp
0x4ae3e8    sbb ebp, ebx
0x4ae3ea    retf

------> offset: 0x4ae3e8
0x4ae3e8    sbb ebp, ebx
0x4ae3ea    retf

------> offset: 0x4ae4ba
0x4ae4ba    ret 0x3827

------> offset: 0x4ae53b
0x4ae53b    xchg edi, eax
0x4ae53c    xchg eax, ebp
0x4ae53e    xor [rsi-0x73e34314], ch
0x4ae544    retf

------> offset: 0x4ae53c
0x4ae53c    xchg eax, ebp
0x4ae53e    xor [rsi-0x73e34314], ch
0x4ae544    retf

------> offset: 0x4ae53d
0x4ae53d    call 0xffffffffbd379372
0x4ae542    sbb al, 0x8c
0x4ae544    retf

------> offset: 0x4ae53e
0x4ae53e    xor [rsi-0x73e34314], ch
0x4ae544    retf

------> offset: 0x4ae542
0x4ae542    sbb al, 0x8c
0x4ae544    retf

------> offset: 0x4ae644
0x4ae644    int1
0x4ae645    lodsd
0x4ae646    mov esi, 0x497b96cc
0x4ae64b    retf 0x99e0

------> offset: 0x4ae645
0x4ae645    lodsd
0x4ae646    mov esi, 0x497b96cc
0x4ae64b    retf 0x99e0

------> offset: 0x4ae646
0x4ae646    mov esi, 0x497b96cc
0x4ae64b    retf 0x99e0

------> offset: 0x4ae647
0x4ae647    int 3
0x4ae648    xchg esi, eax
0x4ae649    jnp 0x4ae694
0x4ae64b    retf 0x99e0

------> offset: 0x4ae648
0x4ae648    xchg esi, eax
0x4ae649    jnp 0x4ae694
0x4ae64b    retf 0x99e0

------> offset: 0x4ae649
0x4ae649    jnp 0x4ae694
0x4ae64b    retf 0x99e0

------> offset: 0x4ae64a
0x4ae64a    retf 0x99e0

------> offset: 0x4ae651
0x4ae651    movsd
0x4ae652    mov cl, [rip-0x114f09b0]
0x4ae658    fcmovb st0, st3
0x4ae65a    ret

------> offset: 0x4ae652
0x4ae652    mov cl, [rip-0x114f09b0]
0x4ae658    fcmovb st0, st3
0x4ae65a    ret

------> offset: 0x4ae653
0x4ae653    or eax, 0xffffffffeeb0f650
0x4ae658    fcmovb st0, st3
0x4ae65a    ret

------> offset: 0x4ae656
0x4ae656    mov al, 0xee
0x4ae658    fcmovb st0, st3
0x4ae65a    ret

------> offset: 0x4ae657
0x4ae657    out dx, al
0x4ae658    fcmovb st0, st3
0x4ae65a    ret

------> offset: 0x4ae658
0x4ae658    fcmovb st0, st3
0x4ae65a    ret

------> offset: 0x4ae67e
0x4ae67e    pop rdi
0x4ae67f    ins dword [rdi], dx
0x4ae680    test eax, 0x7d4c8c5d
0x4ae685    ret 0xd8f

------> offset: 0x4ae67f
0x4ae67f    ins dword [rdi], dx
0x4ae680    test eax, 0x7d4c8c5d
0x4ae685    ret 0xd8f

------> offset: 0x4ae680
0x4ae680    test eax, 0x7d4c8c5d
0x4ae685    ret 0xd8f

------> offset: 0x4ae685
0x4ae685    ret 0xd8f

------> offset: 0x4ae697
0x4ae697    cmp eax, [rsi]
0x4ae699    rcl [r14+0x27], cl
0x4ae69d    retf 0xc0fe

------> offset: 0x4ae699
0x4ae699    rcl [r14+0x27], cl
0x4ae69d    retf 0xc0fe

------> offset: 0x4ae69a
0x4ae69a    rcl [rsi+0x27], cl
0x4ae69d    retf 0xc0fe

------> offset: 0x4ae69d
0x4ae69d    retf 0xc0fe

------> offset: 0x4ae6e2
0x4ae6e2    push qword 0xfd4cbe
0x4ae6e7    retf 0xf64

------> offset: 0x4ae6e3
0x4ae6e3    mov esi, 0x6400fd4c
0x4ae6e8    retf 0xf64

------> offset: 0x4ae6e7
0x4ae6e7    retf 0xf64

------> offset: 0x4ae763
0x4ae763    mov bl, 0x8e
0x4ae765    ret 0xdcd9

------> offset: 0x4ae765
0x4ae765    ret 0xdcd9

------> offset: 0x4ae785
0x4ae785    pop rbp
0x4ae786    ins byte [rdi], dx
0x4ae787    shr byte [rdx], 0x43
0x4ae78a    add cl, bl
0x4ae78c    retf 0xea91

------> offset: 0x4ae786
0x4ae786    ins byte [rdi], dx
0x4ae787    shr byte [rdx], 0x43
0x4ae78a    add cl, bl
0x4ae78c    retf 0xea91

------> offset: 0x4ae787
0x4ae787    shr byte [rdx], 0x43
0x4ae78a    add cl, bl
0x4ae78c    retf 0xea91

------> offset: 0x4ae789
0x4ae789    add r9b, bl
0x4ae78c    retf 0xea91

------> offset: 0x4ae78a
0x4ae78a    add cl, bl
0x4ae78c    retf 0xea91

------> offset: 0x4ae78c
0x4ae78c    retf 0xea91

------> offset: 0x4ae7c5
0x4ae7c5    retf 0x3159

------> offset: 0x4ae81a
0x4ae81a    sub [rdi+rax*8-0x2d04a6cb], dl
0x4ae823    iret

------> offset: 0x4ae829
0x4ae829    scasb
0x4ae82a    or dh, [rbp+0x23]
0x4ae82d    retf 0x32dd

------> offset: 0x4ae82a
0x4ae82a    or dh, [rbp+0x23]
0x4ae82d    retf 0x32dd

------> offset: 0x4ae82b
0x4ae82b    jnz 0x4ae850
0x4ae82d    retf 0x32dd

------> offset: 0x4ae82d
0x4ae82d    retf 0x32dd

------> offset: 0x4ae864
0x4ae864    cmp esi, ebp
0x4ae866    xlat byte [rbx+al]
0x4ae867    ret 0x4e27

------> offset: 0x4ae865
0x4ae865    cmc
0x4ae866    xlat byte [rbx+al]
0x4ae867    ret 0x4e27

------> offset: 0x4ae866
0x4ae866    xlat byte [rbx+al]
0x4ae867    ret 0x4e27

------> offset: 0x4ae867
0x4ae867    ret 0x4e27

------> offset: 0x4ae87f
0x4ae87f    mov ch, 0x99
0x4ae881    in eax, 0xff
0x4ae883    lahf
0x4ae884    mov dh, 0xc7
0x4ae886    ret 0xe71f

------> offset: 0x4ae880
0x4ae880    cdq
0x4ae881    in eax, 0xff
0x4ae883    lahf
0x4ae884    mov dh, 0xc7
0x4ae886    ret 0xe71f

------> offset: 0x4ae881
0x4ae881    in eax, 0xff
0x4ae883    lahf
0x4ae884    mov dh, 0xc7
0x4ae886    ret 0xe71f

------> offset: 0x4ae883
0x4ae883    lahf
0x4ae884    mov dh, 0xc7
0x4ae886    ret 0xe71f

------> offset: 0x4ae884
0x4ae884    mov dh, 0xc7
0x4ae886    ret 0xe71f

------> offset: 0x4ae886
0x4ae886    ret 0xe71f

------> offset: 0x4ae8a4
0x4ae8a4    in eax, dx
0x4ae8a5    jmp 0x4ae8b5
0x4ae8a7    add ah, [rbp+rdi-0x55]
0x4ae8ab    retf 0xa2fe

------> offset: 0x4ae8a5
0x4ae8a5    jmp 0x4ae8b5
0x4ae8a7    add ah, [rbp+rdi-0x55]
0x4ae8ab    retf 0xa2fe

------> offset: 0x4ae8a7
0x4ae8a7    add ah, [rbp+rdi-0x55]
0x4ae8ab    retf 0xa2fe

------> offset: 0x4ae8aa
0x4ae8aa    stosd
0x4ae8ab    retf 0xa2fe

------> offset: 0x4ae8ab
0x4ae8ab    retf 0xa2fe

------> offset: 0x4ae90e
0x4ae90e    ret 0x8b36

------> offset: 0x4ae93d
0x4ae93d    mov [rdx], fs
0x4ae93f    iret

------> offset: 0x4ae97b
0x4ae97b    out dx, eax
0x4ae97c    retf 0xab0d

------> offset: 0x4ae97c
0x4ae97c    retf 0xab0d

------> offset: 0x4ae9ac
0x4ae9ac    stosd
0x4ae9ad    ret

------> offset: 0x4ae9b3
0x4ae9b3    or eax, 0xffffffffe6d46ec6
0x4ae9b8    mov bh, 0x4e
0x4ae9ba    retf 0x9d7d

------> offset: 0x4ae9b7
0x4ae9b7    out 0xb7, al
0x4ae9b9    retf 0x9d7d

------> offset: 0x4ae9b8
0x4ae9b8    mov bh, 0x4e
0x4ae9ba    retf 0x9d7d

------> offset: 0x4ae9b9
0x4ae9b9    retf 0x9d7d

------> offset: 0x4ae9ce
0x4ae9ce    or [rdx+0x2], edx
0x4ae9d1    rcr [rcx], cl
0x4ae9d3    retf 0xbb9a

------> offset: 0x4ae9d1
0x4ae9d1    rcr [rcx], cl
0x4ae9d3    retf 0xbb9a

------> offset: 0x4ae9d3
0x4ae9d3    retf 0xbb9a

------> offset: 0x4aea00
0x4aea00    mov bl, 0xe
0x4aea02    or dh, al
0x4aea04    mov ebx, [rdx]
0x4aea06    retf 0x7272

------> offset: 0x4aea02
0x4aea02    or dh, al
0x4aea04    mov ebx, [rdx]
0x4aea06    retf 0x7272

------> offset: 0x4aea03
0x4aea03    mov ebx, [rdx]
0x4aea06    retf 0x7272

------> offset: 0x4aea06
0x4aea06    retf 0x7272

------> offset: 0x4aea1b
0x4aea1b    mov bl, 0x29
0x4aea1d    retf 0xbf4b

------> offset: 0x4aea1d
0x4aea1d    retf 0xbf4b

------> offset: 0x4aeadd
0x4aeadd    push rsi
0x4aeade    jnp 0x4aeaf6
0x4aeae0    mov dl, 0x9f
0x4aeae2    sub edi, esi
0x4aeae4    int 0x6b
0x4aeae6    ret

------> offset: 0x4aeade
0x4aeade    jnp 0x4aeaf6
0x4aeae0    mov dl, 0x9f
0x4aeae2    sub edi, esi
0x4aeae4    int 0x6b
0x4aeae6    ret

------> offset: 0x4aeae0
0x4aeae0    mov dl, 0x9f
0x4aeae2    sub edi, esi
0x4aeae4    int 0x6b
0x4aeae6    ret

------> offset: 0x4aeae1
0x4aeae1    lahf
0x4aeae2    sub edi, esi
0x4aeae4    int 0x6b
0x4aeae6    ret

------> offset: 0x4aeae2
0x4aeae2    sub edi, esi
0x4aeae4    int 0x6b
0x4aeae6    ret

------> offset: 0x4aeae4
0x4aeae4    int 0x6b
0x4aeae6    ret

------> offset: 0x4aeb3f
0x4aeb3f    sub [rip-0x357bd45c], dil
0x4aeb46    retf 0x9867

------> offset: 0x4aeb40
0x4aeb40    sub [rip-0x357bd45c], bh
0x4aeb46    retf 0x9867

------> offset: 0x4aeb41
0x4aeb41    cmp eax, 0xffffffffca842ba4
0x4aeb46    retf 0x9867

------> offset: 0x4aeb44
0x4aeb44    test dl, cl
0x4aeb46    retf 0x9867

------> offset: 0x4aeb45
0x4aeb45    retf 0x67ca

------> offset: 0x4aeb46
0x4aeb46    retf 0x9867

------> offset: 0x4aeb6a
0x4aeb6a    add dword [rbp-0x9], 0xffffffff8d626770
0x4aeb71    rcl [rdi], cl
0x4aeb73    retf

------> offset: 0x4aeb71
0x4aeb71    rcl [rdi], cl
0x4aeb73    retf

------> offset: 0x4aeb97
0x4aeb97    retf 0xd39

------> offset: 0x4aebda
0x4aebda    ret 0x1ad4

------> offset: 0x4aebec
0x4aebec    xchg esi, eax
0x4aebed    ret 0xcd11

------> offset: 0x4aebed
0x4aebed    ret 0xcd11

------> offset: 0x4aec26
0x4aec26    retf 0x3d8a

------> offset: 0x4aec81
0x4aec81    mov cl, 0x3f
0x4aec83    retf

------> offset: 0x4aec98
0x4aec98    fsub qword [rbx]
0x4aec9a    sub dword [rsi], 0x76
0x4aec9d    retf

------> offset: 0x4aec9a
0x4aec9a    sub dword [rsi], 0x76
0x4aec9d    retf

------> offset: 0x4aec9b
0x4aec9b    jbe 0x4aec69
0x4aec9e    mov ds, [rdx+rdx-0x71]
0x4aeca2    retf

------> offset: 0x4aec9e
0x4aec9e    mov ds, [rdx+rdx-0x71]
0x4aeca2    retf

------> offset: 0x4aece1
0x4aece1    in al, 0x4c
0x4aece3    pop rax
0x4aece4    retf

------> offset: 0x4aecf6
0x4aecf6    mov dword [rbp-0x17], 0xcc977b3
0x4aecfd    ins byte [rdi], dx
0x4aecfe    pop rbx
0x4aecff    iret

------> offset: 0x4aecf7
0x4aecf7    jmp 0xd1464b0
0x4aecfd    ins byte [rdi], dx
0x4aecfe    pop rbx
0x4aecff    iret

------> offset: 0x4aecf9
0x4aecf9    mov bl, 0x77
0x4aecfb    leave
0x4aecfc    or al, 0x6c
0x4aecfe    pop rbx
0x4aecff    iret

------> offset: 0x4aecfa
0x4aecfa    ja 0x4aecc5
0x4aecfc    or al, 0x6c
0x4aecfe    pop rbx
0x4aecff    iret

------> offset: 0x4aecfb
0x4aecfb    leave
0x4aecfc    or al, 0x6c
0x4aecfe    pop rbx
0x4aecff    iret

------> offset: 0x4aecfc
0x4aecfc    or al, 0x6c
0x4aecfe    pop rbx
0x4aecff    iret

------> offset: 0x4aecfd
0x4aecfd    ins byte [rdi], dx
0x4aecfe    pop rbx
0x4aecff    iret

------> offset: 0x4aecfe
0x4aecfe    pop rbx
0x4aecff    iret

------> offset: 0x4aed91
0x4aed91    sub ah, ah
0x4aed93    mov bh, 0x6
0x4aed95    movsd
0x4aed96    int1
0x4aed97    ret 0x5803

------> offset: 0x4aed93
0x4aed93    mov bh, 0x6
0x4aed95    movsd
0x4aed96    int1
0x4aed97    ret 0x5803

------> offset: 0x4aed95
0x4aed95    movsd
0x4aed96    int1
0x4aed97    ret 0x5803

------> offset: 0x4aed96
0x4aed96    int1
0x4aed97    ret 0x5803

------> offset: 0x4aed97
0x4aed97    ret 0x5803

------> offset: 0x4aedff
0x4aedff    xchg esp, eax
0x4aee00    push rsi
0x4aee01    cli
0x4aee02    push 0x6e
0x4aee04    ja 0x4aed89
0x4aee06    ret 0x48f

------> offset: 0x4aee00
0x4aee00    push rsi
0x4aee01    cli
0x4aee02    push 0x6e
0x4aee04    ja 0x4aed89
0x4aee06    ret 0x48f

------> offset: 0x4aee01
0x4aee01    cli
0x4aee02    push 0x6e
0x4aee04    ja 0x4aed89
0x4aee06    ret 0x48f

------> offset: 0x4aee02
0x4aee02    push 0x6e
0x4aee04    ja 0x4aed89
0x4aee06    ret 0x48f

------> offset: 0x4aee03
0x4aee03    outs dx, byte [rsi]
0x4aee04    ja 0x4aed89
0x4aee06    ret 0x48f

------> offset: 0x4aee04
0x4aee04    ja 0x4aed89
0x4aee06    ret 0x48f

------> offset: 0x4aee06
0x4aee06    ret 0x48f

------> offset: 0x4aee1d
0x4aee1d    ja 0x4aee94
0x4aee1f    adc sil, [rsi+0x377d4101]
0x4aee26    iret

------> offset: 0x4aee1e
0x4aee1e    jnz 0x4aee68
0x4aee20    adc dh, [rsi+0x377d4101]
0x4aee26    iret

------> offset: 0x4aee1f
0x4aee1f    adc sil, [rsi+0x377d4101]
0x4aee26    iret

------> offset: 0x4aee20
0x4aee20    adc dh, [rsi+0x377d4101]
0x4aee26    iret

------> offset: 0x4aee21
0x4aee21    mov dh, 0x1
0x4aee23    jge 0x4aee5d
0x4aee26    iret

------> offset: 0x4aee23
0x4aee23    jge 0x4aee5d
0x4aee26    iret

------> offset: 0x4aee9b
0x4aee9b    cmc
0x4aee9c    push rbp
0x4aee9d    adc ebp, edx
0x4aee9f    mov ch, 0x73
0x4aeea1    shl dword [rdi], 0x1
0x4aeea3    outs dx, byte [rsi]
0x4aeea4    iret

------> offset: 0x4aee9c
0x4aee9c    push rbp
0x4aee9d    adc ebp, edx
0x4aee9f    mov ch, 0x73
0x4aeea1    shl dword [rdi], 0x1
0x4aeea3    outs dx, byte [rsi]
0x4aeea4    iret

------> offset: 0x4aee9d
0x4aee9d    adc ebp, edx
0x4aee9f    mov ch, 0x73
0x4aeea1    shl dword [rdi], 0x1
0x4aeea3    outs dx, byte [rsi]
0x4aeea4    iret

------> offset: 0x4aee9f
0x4aee9f    mov ch, 0x73
0x4aeea1    shl dword [rdi], 0x1
0x4aeea3    outs dx, byte [rsi]
0x4aeea4    iret

------> offset: 0x4aeea1
0x4aeea1    shl dword [rdi], 0x1
0x4aeea3    outs dx, byte [rsi]
0x4aeea4    iret

------> offset: 0x4aeec9
0x4aeec9    jrcxz 0x4aeea8
0x4aeecb    cmp al, 0x93
0x4aeecd    in al, dx
0x4aeece    retf 0xae32

------> offset: 0x4aeeca
0x4aeeca    fnstsw [rbx+rdx*4]
0x4aeecd    in al, dx
0x4aeece    retf 0xae32

------> offset: 0x4aeecb
0x4aeecb    cmp al, 0x93
0x4aeecd    in al, dx
0x4aeece    retf 0xae32

------> offset: 0x4aeecc
0x4aeecc    xchg ebx, eax
0x4aeecd    in al, dx
0x4aeece    retf 0xae32

------> offset: 0x4aeecd
0x4aeecd    in al, dx
0x4aeece    retf 0xae32

------> offset: 0x4aeece
0x4aeece    retf 0xae32

------> offset: 0x4aef36
0x4aef36    pop rcx
0x4aef37    mov dl, 0xf7
0x4aef39    popf
0x4aef3a    cmc
0x4aef3c    sbb al, 0x1e
0x4aef3e    lodsb
0x4aef3f    iret

------> offset: 0x4aef37
0x4aef37    mov dl, 0xf7
0x4aef39    popf
0x4aef3a    cmc
0x4aef3c    sbb al, 0x1e
0x4aef3e    lodsb
0x4aef3f    iret

------> offset: 0x4aef38
0x4aef38    neg dword [rbp+0x1e1cf565]
0x4aef3e    lodsb
0x4aef3f    iret

------> offset: 0x4aef39
0x4aef39    popf
0x4aef3a    cmc
0x4aef3c    sbb al, 0x1e
0x4aef3e    lodsb
0x4aef3f    iret

------> offset: 0x4aef3a
0x4aef3a    cmc
0x4aef3c    sbb al, 0x1e
0x4aef3e    lodsb
0x4aef3f    iret

------> offset: 0x4aef3c
0x4aef3c    sbb al, 0x1e
0x4aef3e    lodsb
0x4aef3f    iret

------> offset: 0x4aef3e
0x4aef3e    lodsb
0x4aef3f    iret

------> offset: 0x4af03a
0x4af03a    ret 0xef32

------> offset: 0x4af05a
0x4af05a    sbb eax, 0x33eb7d2e
0x4af05f    ror [rbx], cl
0x4af061    pop rsp
0x4af062    iret

------> offset: 0x4af05d
0x4af05d    jmp 0x4af092
0x4af05f    ror [rbx], cl
0x4af061    pop rsp
0x4af062    iret

------> offset: 0x4af05f
0x4af05f    ror [rbx], cl
0x4af061    pop rsp
0x4af062    iret

------> offset: 0x4af0a1
0x4af0a1    retf 0xebbf

------> offset: 0x4af11e
0x4af11e    lodsd
0x4af11f    clc
0x4af120    in eax, dx
0x4af121    jmp 0x4af0c0
0x4af123    retf 0xde4f

------> offset: 0x4af11f
0x4af11f    clc
0x4af120    in eax, dx
0x4af121    jmp 0x4af0c0
0x4af123    retf 0xde4f

------> offset: 0x4af120
0x4af120    in eax, dx
0x4af121    jmp 0x4af0c0
0x4af123    retf 0xde4f

------> offset: 0x4af121
0x4af121    jmp 0x4af0c0
0x4af123    retf 0xde4f

------> offset: 0x4af122
0x4af122    popf
0x4af123    retf 0xde4f

------> offset: 0x4af123
0x4af123    retf 0xde4f

------> offset: 0x4af140
0x4af140    push rax
0x4af141    retf

------> offset: 0x4af142
0x4af142    and esi, [rax-0x3aefaa5f]
0x4af148    std
0x4af149    iret

------> offset: 0x4af143
0x4af143    mov al, 0xa1
0x4af145    push rbp
0x4af146    adc ch, al
0x4af148    std
0x4af149    iret

------> offset: 0x4af145
0x4af145    push rbp
0x4af146    adc ch, al
0x4af148    std
0x4af149    iret

------> offset: 0x4af146
0x4af146    adc ch, al
0x4af148    std
0x4af149    iret

------> offset: 0x4af148
0x4af148    std
0x4af149    iret

------> offset: 0x4af19c
0x4af19c    sbb al, 0x28
0x4af19e    pop rcx
0x4af19f    iret

------> offset: 0x4af19e
0x4af19e    pop rcx
0x4af19f    iret

------> offset: 0x4af223
0x4af223    xchg ebp, eax
0x4af224    in al, dx
0x4af225    ficomp word [rdx-0x19]
0x4af229    cmc
0x4af22a    mov ch, 0xab
0x4af22c    ret

------> offset: 0x4af224
0x4af224    in al, dx
0x4af225    ficomp word [rdx-0x19]
0x4af229    cmc
0x4af22a    mov ch, 0xab
0x4af22c    ret

------> offset: 0x4af225
0x4af225    ficomp word [rdx-0x19]
0x4af229    cmc
0x4af22a    mov ch, 0xab
0x4af22c    ret

------> offset: 0x4af227
0x4af227    pop rdx
0x4af228    out 0xf5, eax
0x4af22a    mov ch, 0xab
0x4af22c    ret

------> offset: 0x4af228
0x4af228    out 0xf5, eax
0x4af22a    mov ch, 0xab
0x4af22c    ret

------> offset: 0x4af229
0x4af229    cmc
0x4af22a    mov ch, 0xab
0x4af22c    ret

------> offset: 0x4af22a
0x4af22a    mov ch, 0xab
0x4af22c    ret

------> offset: 0x4af232
0x4af232    ret 0x62c1

------> offset: 0x4af2a4
0x4af2a4    test bh, ch
0x4af2a6    cmp cl, [rsi]
0x4af2a8    and [rbx+0x3d], bh
0x4af2ab    retf

------> offset: 0x4af2a5
0x4af2a5    out dx, eax
0x4af2a6    cmp cl, [rsi]
0x4af2a8    and [rbx+0x3d], bh
0x4af2ab    retf

------> offset: 0x4af2a6
0x4af2a6    cmp cl, [rsi]
0x4af2a8    and [rbx+0x3d], bh
0x4af2ab    retf

------> offset: 0x4af2a8
0x4af2a8    and [rbx+0x3d], bh
0x4af2ab    retf

------> offset: 0x4af2a9
0x4af2a9    jnp 0x4af2e8
0x4af2ab    retf

------> offset: 0x4af2b3
0x4af2b3    pop rax
0x4af2b4    lahf
0x4af2b5    iret

------> offset: 0x4af2b4
0x4af2b4    lahf
0x4af2b5    iret

------> offset: 0x4af2c5
0x4af2c5    retf 0xa020

------> offset: 0x4af392
0x4af392    add al, 0xc
0x4af394    popf
0x4af395    cmc
0x4af396    jbe 0x4af35b
0x4af399    ret 0x990e

------> offset: 0x4af393
0x4af393    or al, 0x9d
0x4af395    cmc
0x4af396    jbe 0x4af35b
0x4af399    ret 0x990e

------> offset: 0x4af394
0x4af394    popf
0x4af395    cmc
0x4af396    jbe 0x4af35b
0x4af399    ret 0x990e

------> offset: 0x4af395
0x4af395    cmc
0x4af396    jbe 0x4af35b
0x4af399    ret 0x990e

------> offset: 0x4af396
0x4af396    jbe 0x4af35b
0x4af399    ret 0x990e

------> offset: 0x4af398
0x4af398    ret 0xec2

------> offset: 0x4af399
0x4af399    ret 0x990e

------> offset: 0x4af3ba
0x4af3ba    loop 0x4af408
0x4af3bc    add ch, [ebp+ebp*2+0x5b]
0x4af3c1    ret 0x6f9

------> offset: 0x4af3bb
0x4af3bb    add ch, [ebp+ebp*2+0x5b]
0x4af3c1    ret 0x6f9

------> offset: 0x4af3bd
0x4af3bd    add ch, [rbp+rbp*2+0x5b]
0x4af3c1    ret 0x6f9

------> offset: 0x4af3be
0x4af3be    ins byte [rdi], dx
0x4af3bf    ins dword [rdi], dx
0x4af3c0    pop rbx
0x4af3c1    ret 0x6f9

------> offset: 0x4af3bf
0x4af3bf    ins dword [rdi], dx
0x4af3c0    pop rbx
0x4af3c1    ret 0x6f9

------> offset: 0x4af3c0
0x4af3c0    pop rbx
0x4af3c1    ret 0x6f9

------> offset: 0x4af3c1
0x4af3c1    ret 0x6f9

------> offset: 0x4af3d9
0x4af3d9    fcomp dword [rdx+0x21]
0x4af3dc    ret

------> offset: 0x4b1bc5
0x4b1bc5    add [rax], al
0x4b1bc7    add [rax], al
0x4b1bc9    retf 0x3b9a

------> offset: 0x4b1bc7
0x4b1bc7    add [rax], al
0x4b1bc9    retf 0x3b9a

------> offset: 0x4b1bc9
0x4b1bc9    retf 0x3b9a

------> offset: 0x4b1e81
0x4b1e81    sar ch, 0xff
0x4b1e84    retf 0xfdc0

------> offset: 0x4b1e84
0x4b1e84    retf 0xfdc0

------> offset: 0x4b1ec8
0x4b1ec8    ins byte [rdi], dx
0x4b1ec9    ret

------> offset: 0x4b1ed2
0x4b1ed2    std
0x4b1ed3    jmp far dword [rbx+rax*8-0x3]
0x4b1ed7    jmp rsp
0x4b1ed9    ret

------> offset: 0x4b1ed3
0x4b1ed3    jmp far dword [rbx+rax*8-0x3]
0x4b1ed7    jmp rsp
0x4b1ed9    ret

------> offset: 0x4b1ed6
0x4b1ed6    std
0x4b1ed7    jmp rsp
0x4b1ed9    ret

------> offset: 0x4b1ed7
0x4b1ed7    jmp rsp
0x4b1ed9    ret

------> offset: 0x4b1ee4
0x4b1ee4    pushf
0x4b1ee5    ret

------> offset: 0x4b29da
0x4b29da    add [rax], al
0x4b29dc    mov [rbx], es
0x4b29de    add [rax], al
0x4b29e0    retf 0xf51f

------> offset: 0x4b29dc
0x4b29dc    mov [rbx], es
0x4b29de    add [rax], al
0x4b29e0    retf 0xf51f

------> offset: 0x4b29de
0x4b29de    add [rax], al
0x4b29e0    retf 0xf51f

------> offset: 0x4b29e0
0x4b29e0    retf 0xf51f

------> offset: 0x4b334e
0x4b334e    add [rax], al
0x4b3350    retf 0xf54f

------> offset: 0x4b3350
0x4b3350    retf 0xf54f

------> offset: 0x4b349f
0x4b349f    add [rsi], edx
0x4b34a1    adc [rsi], cl
0x4b34a3    add byte [rsi], 0xd
0x4b34a6    ret 0xf54f

------> offset: 0x4b34a1
0x4b34a1    adc [rsi], cl
0x4b34a3    add byte [rsi], 0xd
0x4b34a6    ret 0xf54f

------> offset: 0x4b34a3
0x4b34a3    add byte [rsi], 0xd
0x4b34a6    ret 0xf54f

------> offset: 0x4b34a6
0x4b34a6    ret 0xf54f

------> offset: 0x4b3675
0x4b3675    or eax, 0xfffffffffff55174
0x4b367a    sbb al, 0xd
0x4b367c    iret

------> offset: 0x4b367a
0x4b367a    sbb al, 0xd
0x4b367c    iret

------> offset: 0x4b3899
0x4b3899    add [rax], al
0x4b389b    add [rsp+rdx+0x0], bh
0x4b389f    add [rcx], dh
0x4b38a1    retf

------> offset: 0x4b389b
0x4b389b    add [rsp+rdx+0x0], bh
0x4b389f    add [rcx], dh
0x4b38a1    retf

------> offset: 0x4b389d
0x4b389d    adc al, 0x0
0x4b389f    add [rcx], dh
0x4b38a1    retf

------> offset: 0x4b389f
0x4b389f    add [rcx], dh
0x4b38a1    retf

------> offset: 0x4b395d
0x4b395d    and [rbx+0xa410204], al
0x4b3963    ret

------> offset: 0x4b3960
0x4b3960    add al, [rcx+0xa]
0x4b3963    ret

------> offset: 0x4b46f5
0x4b46f5    or eax, 0xfffffffffff5a59d
0x4b46fa    sbb al, 0xd
0x4b46fc    ret

------> offset: 0x4b46fa
0x4b46fa    sbb al, 0xd
0x4b46fc    ret

------> offset: 0x4b48e7
0x4b48e7    add [rsi], edx
0x4b48e9    adc [rsi], cl
0x4b48eb    add byte [rsi], 0xd
0x4b48ee    retf 0xf5a3

------> offset: 0x4b48e9
0x4b48e9    adc [rsi], cl
0x4b48eb    add byte [rsi], 0xd
0x4b48ee    retf 0xf5a3

------> offset: 0x4b48eb
0x4b48eb    add byte [rsi], 0xd
0x4b48ee    retf 0xf5a3

------> offset: 0x4b48ee
0x4b48ee    retf 0xf5a3

------> offset: 0x4b587b
0x4b587b    add byte [rsi], 0xd
0x4b587e    jns 0x4b5890
0x4b5880    idiv bh
0x4b5882    sbb al, 0xd
0x4b5884    iret

------> offset: 0x4b587d
0x4b587d    or eax, 0xfffffffffff61079
0x4b5882    sbb al, 0xd
0x4b5884    iret

------> offset: 0x4b587e
0x4b587e    jns 0x4b5890
0x4b5880    idiv bh
0x4b5882    sbb al, 0xd
0x4b5884    iret

------> offset: 0x4b5880
0x4b5880    idiv bh
0x4b5882    sbb al, 0xd
0x4b5884    iret

------> offset: 0x4b59ed
0x4b59ed    ret 0xfff5

------> offset: 0x4b5ea6
0x4b5ea6    add byte [rcx], 0x16
0x4b5ea9    adc [rsi], cl
0x4b5eab    add byte [rsi], 0xd
0x4b5eae    retf

------> offset: 0x4b5ea7
0x4b5ea7    add [rsi], edx
0x4b5ea9    adc [rsi], cl
0x4b5eab    add byte [rsi], 0xd
0x4b5eae    retf

------> offset: 0x4b5ea9
0x4b5ea9    adc [rsi], cl
0x4b5eab    add byte [rsi], 0xd
0x4b5eae    retf

------> offset: 0x4b5eab
0x4b5eab    add byte [rsi], 0xd
0x4b5eae    retf

------> offset: 0x4b63fe
0x4b63fe    add byte [rcx], 0x16
0x4b6401    adc [rsi], cl
0x4b6403    add byte [rsi], 0xd
0x4b6406    ret

------> offset: 0x4b63ff
0x4b63ff    add [rsi], edx
0x4b6401    adc [rsi], cl
0x4b6403    add byte [rsi], 0xd
0x4b6406    ret

------> offset: 0x4b6401
0x4b6401    adc [rsi], cl
0x4b6403    add byte [rsi], 0xd
0x4b6406    ret

------> offset: 0x4b6403
0x4b6403    add byte [rsi], 0xd
0x4b6406    ret

------> offset: 0x4b68f7
0x4b68f7    xor [rbx+0xade0206], al
0x4b68fd    ret

------> offset: 0x4b68f8
0x4b68f8    add dword [rsi], 0x2
0x4b68fb    fimul word [rdx]
0x4b68fd    ret

------> offset: 0x4b68fb
0x4b68fb    fimul word [rdx]
0x4b68fd    ret

------> offset: 0x4b6ea4
0x4b6ea4    add dword [rdx], 0x51
0x4b6ea7    ret

------> offset: 0x4b6ea6
0x4b6ea6    push rcx
0x4b6ea7    ret

------> offset: 0x4b6ead
0x4b6ead    add dword [rdx], 0x65
0x4b6eb0    ret

------> offset: 0x4b7218
0x4b7218    mov [rcx], al
0x4b721a    ret

------> offset: 0x4b7341
0x4b7341    mov [rip+0x3068345], es
0x4b7348    mov [rcx], al
0x4b734a    ret

------> offset: 0x4b7343
0x4b7343    add eax, 0x3068345
0x4b7348    mov [rcx], al
0x4b734a    ret

------> offset: 0x4b7344
0x4b7344    add dword [r14], 0x3
0x4b7348    mov [rcx], al
0x4b734a    ret

------> offset: 0x4b7345
0x4b7345    add dword [rsi], 0x3
0x4b7348    mov [rcx], al
0x4b734a    ret

------> offset: 0x4b74a0
0x4b74a0    adc al, 0x0
0x4b74a2    add [rax], al
0x4b74a4    test [rax+0x0], dl
0x4b74a7    add al, bh
0x4b74a9    retf

------> offset: 0x4b74a2
0x4b74a2    add [rax], al
0x4b74a4    test [rax+0x0], dl
0x4b74a7    add al, bh
0x4b74a9    retf

------> offset: 0x4b74a4
0x4b74a4    test [rax+0x0], dl
0x4b74a7    add al, bh
0x4b74a9    retf

------> offset: 0x4b74a5
0x4b74a5    push rax
0x4b74a6    add [rax], al
0x4b74a8    clc
0x4b74a9    retf

------> offset: 0x4b74a6
0x4b74a6    add [rax], al
0x4b74a8    clc
0x4b74a9    retf

------> offset: 0x4b74a7
0x4b74a7    add al, bh
0x4b74a9    retf

------> offset: 0x4b74a8
0x4b74a8    clc
0x4b74a9    retf

------> offset: 0x4b7a52
0x4b7a52    add [rax], al
0x4b7a54    xor al, 0x56
0x4b7a56    add [rax], al
0x4b7a58    clc
0x4b7a59    retf 0xfff7

------> offset: 0x4b7a53
0x4b7a53    add [rsi+rdx*2], dh
0x4b7a56    add [rax], al
0x4b7a58    clc
0x4b7a59    retf 0xfff7

------> offset: 0x4b7a54
0x4b7a54    xor al, 0x56
0x4b7a56    add [rax], al
0x4b7a58    clc
0x4b7a59    retf 0xfff7

------> offset: 0x4b7a55
0x4b7a55    push rsi
0x4b7a56    add [rax], al
0x4b7a58    clc
0x4b7a59    retf 0xfff7

------> offset: 0x4b7a56
0x4b7a56    add [rax], al
0x4b7a58    clc
0x4b7a59    retf 0xfff7

------> offset: 0x4b7a57
0x4b7a57    add al, bh
0x4b7a59    retf 0xfff7

------> offset: 0x4b7a58
0x4b7a58    clc
0x4b7a59    retf 0xfff7

------> offset: 0x4b7a59
0x4b7a59    retf 0xfff7

------> offset: 0x4b7a6a
0x4b7a6a    add [rax], al
0x4b7a6c    push rsi
0x4b7a6e    add [rax], al
0x4b7a70    retf

------> offset: 0x4b7a6c
0x4b7a6c    push rsi
0x4b7a6e    add [rax], al
0x4b7a70    retf

------> offset: 0x4b7dfd
0x4b7dfd    pop rcx
0x4b7dfe    add [rax], al
0x4b7e00    adc dh, ch
0x4b7e02    idiv edi
0x4b7e04    retf 0x0

------> offset: 0x4b7dfe
0x4b7dfe    add [rax], al
0x4b7e00    adc dh, ch
0x4b7e02    idiv edi
0x4b7e04    retf 0x0

------> offset: 0x4b7dff
0x4b7dff    add [rax], dl
0x4b7e01    out dx, al
0x4b7e02    idiv edi
0x4b7e04    retf 0x0

------> offset: 0x4b7e00
0x4b7e00    adc dh, ch
0x4b7e02    idiv edi
0x4b7e04    retf 0x0

------> offset: 0x4b7e01
0x4b7e01    out dx, al
0x4b7e02    idiv edi
0x4b7e04    retf 0x0

------> offset: 0x4b7e02
0x4b7e02    idiv edi
0x4b7e04    retf 0x0

------> offset: 0x4b7f6e
0x4b7f6e    rol dword [rdx+0xe], 0x8
0x4b7f72    retf 0x0

------> offset: 0x4b8100
0x4b8100    add [rdx], al
0x4b8102    imul ecx, [rsi], 0x10
0x4b8105    add dword [rdx], 0x59
0x4b8108    ret

------> offset: 0x4b8102
0x4b8102    imul ecx, [rsi], 0x10
0x4b8105    add dword [rdx], 0x59
0x4b8108    ret

------> offset: 0x4b8105
0x4b8105    add dword [rdx], 0x59
0x4b8108    ret

------> offset: 0x4b8107
0x4b8107    pop rcx
0x4b8108    ret

------> offset: 0x4b8440
0x4b8440    add [rdx], ecx
0x4b8442    ret

------> offset: 0x4b924b
0x4b924b    ret 0xe0a

------> offset: 0x4b96de
0x4b96de    add byte [rcx], 0x16
0x4b96e1    adc [rsi], cl
0x4b96e3    add byte [rsi], 0xd
0x4b96e6    in al, dx
0x4b96e7    retf

------> offset: 0x4b96df
0x4b96df    add [rsi], edx
0x4b96e1    adc [rsi], cl
0x4b96e3    add byte [rsi], 0xd
0x4b96e6    in al, dx
0x4b96e7    retf

------> offset: 0x4b96e1
0x4b96e1    adc [rsi], cl
0x4b96e3    add byte [rsi], 0xd
0x4b96e6    in al, dx
0x4b96e7    retf

------> offset: 0x4b96e3
0x4b96e3    add byte [rsi], 0xd
0x4b96e6    in al, dx
0x4b96e7    retf

------> offset: 0x4b96e6
0x4b96e6    in al, dx
0x4b96e7    retf

------> offset: 0x4b9702
0x4b9702    add [rax], al
0x4b9704    mov ah, 0x70
0x4b9706    add [rax], al
0x4b9708    out dx, al
0x4b9709    retf

------> offset: 0x4b9704
0x4b9704    mov ah, 0x70
0x4b9706    add [rax], al
0x4b9708    out dx, al
0x4b9709    retf

------> offset: 0x4b9705
0x4b9705    jo 0x4b9707
0x4b9707    add dh, ch
0x4b9709    retf

------> offset: 0x4b9706
0x4b9706    add [rax], al
0x4b9708    out dx, al
0x4b9709    retf

------> offset: 0x4b9707
0x4b9707    add dh, ch
0x4b9709    retf

------> offset: 0x4b9708
0x4b9708    out dx, al
0x4b9709    retf

------> offset: 0x4b9726
0x4b9726    add byte [rcx], 0x16
0x4b9729    adc [rsi], cl
0x4b972b    add byte [rsi], 0xd
0x4b972e    stosd
0x4b972f    retf

------> offset: 0x4b9727
0x4b9727    add [rsi], edx
0x4b9729    adc [rsi], cl
0x4b972b    add byte [rsi], 0xd
0x4b972e    stosd
0x4b972f    retf

------> offset: 0x4b9729
0x4b9729    adc [rsi], cl
0x4b972b    add byte [rsi], 0xd
0x4b972e    stosd
0x4b972f    retf

------> offset: 0x4b972b
0x4b972b    add byte [rsi], 0xd
0x4b972e    stosd
0x4b972f    retf

------> offset: 0x4b972e
0x4b972e    stosd
0x4b972f    retf

------> offset: 0x4b9748
0x4b9748    add [rax], r8b
0x4b974b    add ah, bh
0x4b974d    jo 0x4b974f
0x4b974f    add ch, al
0x4b9751    retf

------> offset: 0x4b9749
0x4b9749    add [rax], al
0x4b974b    add ah, bh
0x4b974d    jo 0x4b974f
0x4b974f    add ch, al
0x4b9751    retf

------> offset: 0x4b974a
0x4b974a    add [rax], al
0x4b974c    cld
0x4b974d    jo 0x4b974f
0x4b974f    add ch, al
0x4b9751    retf

------> offset: 0x4b974b
0x4b974b    add ah, bh
0x4b974d    jo 0x4b974f
0x4b974f    add ch, al
0x4b9751    retf

------> offset: 0x4b974c
0x4b974c    cld
0x4b974d    jo 0x4b974f
0x4b974f    add ch, al
0x4b9751    retf

------> offset: 0x4b974d
0x4b974d    jo 0x4b974f
0x4b974f    add ch, al
0x4b9751    retf

------> offset: 0x4b974f
0x4b974f    add ch, al
0x4b9751    retf

------> offset: 0x4b9796
0x4b9796    add [rax], al
0x4b9798    pushf
0x4b9799    retf

------> offset: 0x4b9798
0x4b9798    pushf
0x4b9799    retf

------> offset: 0x4b9849
0x4b9849    adc [rsi], cl
0x4b984b    add byte [rsi], 0xd
0x4b984e    cmpsd
0x4b984f    retf 0xfff8

------> offset: 0x4b984b
0x4b984b    add byte [rsi], 0xd
0x4b984e    cmpsd
0x4b984f    retf 0xfff8

------> offset: 0x4b984e
0x4b984e    cmpsd
0x4b984f    retf 0xfff8

------> offset: 0x4b986d
0x4b986d    jb 0x4b986f
0x4b986f    add [rcx], ah
0x4b9871    retf

------> offset: 0x4b986f
0x4b986f    add [rcx], ah
0x4b9871    retf

------> offset: 0x4b9891
0x4b9891    adc [rsi], cl
0x4b9893    add byte [rsi], 0xd
0x4b9896    retf 0xfff8

------> offset: 0x4b9893
0x4b9893    add byte [rsi], 0xd
0x4b9896    retf 0xfff8

------> offset: 0x4b98b2
0x4b98b2    add [rax], al
0x4b98b4    jb 0x4b98b7
0x4b98b7    add al, bh
0x4b98b9    retf 0xfff8

------> offset: 0x4b98b3
0x4b98b3    add [rdx+rsi*2+0x0], ah
0x4b98b7    add al, bh
0x4b98b9    retf 0xfff8

------> offset: 0x4b98b4
0x4b98b4    jb 0x4b98b7
0x4b98b7    add al, bh
0x4b98b9    retf 0xfff8

------> offset: 0x4b98b6
0x4b98b6    add [rax], al
0x4b98b8    clc
0x4b98b9    retf 0xfff8

------> offset: 0x4b98b7
0x4b98b7    add al, bh
0x4b98b9    retf 0xfff8

------> offset: 0x4b98b8
0x4b98b8    clc
0x4b98b9    retf 0xfff8

------> offset: 0x4ba005
0x4ba005    and [rsi+rcx+0x18], bh
0x4ba009    ret

------> offset: 0x4ba585
0x4ba585    jg 0x4ba587
0x4ba587    add bh, al
0x4ba589    retf

------> offset: 0x4ba587
0x4ba587    add bh, al
0x4ba589    retf

------> offset: 0x4ba5a6
0x4ba5a6    add byte [rcx], 0x16
0x4ba5a9    adc [rsi], cl
0x4ba5ab    add byte [rsi], 0xd
0x4ba5ae    cwde
0x4ba5af    retf

------> offset: 0x4ba5a7
0x4ba5a7    add [rsi], edx
0x4ba5a9    adc [rsi], cl
0x4ba5ab    add byte [rsi], 0xd
0x4ba5ae    cwde
0x4ba5af    retf

------> offset: 0x4ba5a9
0x4ba5a9    adc [rsi], cl
0x4ba5ab    add byte [rsi], 0xd
0x4ba5ae    cwde
0x4ba5af    retf

------> offset: 0x4ba5ab
0x4ba5ab    add byte [rsi], 0xd
0x4ba5ae    cwde
0x4ba5af    retf

------> offset: 0x4ba5ae
0x4ba5ae    cwde
0x4ba5af    retf

------> offset: 0x4ba5b2
0x4ba5b2    sbb al, 0xd
0x4ba5b4    stosb
0x4ba5b5    retf 0xfff9

------> offset: 0x4ba5b4
0x4ba5b4    stosb
0x4ba5b5    retf 0xfff9

------> offset: 0x4ba5ee
0x4ba5ee    add byte [rcx], 0x16
0x4ba5f1    adc [rsi], cl
0x4ba5f3    add byte [rsi], 0xd
0x4ba5f6    push rbx
0x4ba5f7    retf

------> offset: 0x4ba5ef
0x4ba5ef    add [rsi], edx
0x4ba5f1    adc [rsi], cl
0x4ba5f3    add byte [rsi], 0xd
0x4ba5f6    push rbx
0x4ba5f7    retf

------> offset: 0x4ba5f1
0x4ba5f1    adc [rsi], cl
0x4ba5f3    add byte [rsi], 0xd
0x4ba5f6    push rbx
0x4ba5f7    retf

------> offset: 0x4ba5f3
0x4ba5f3    add byte [rsi], 0xd
0x4ba5f6    push rbx
0x4ba5f7    retf

------> offset: 0x4ba5f6
0x4ba5f6    push rbx
0x4ba5f7    retf

------> offset: 0x4ba616
0x4ba616    add [rax], al
0x4ba618    ins dword [rdi], dx
0x4ba619    retf

------> offset: 0x4ba618
0x4ba618    ins dword [rdi], dx
0x4ba619    retf

------> offset: 0x4ba6bd
0x4ba6bd    or eax, 0xfffffffffff9cc5f
0x4ba6c2    sbb al, 0xd
0x4ba6c4    retf

------> offset: 0x4ba6c2
0x4ba6c2    sbb al, 0xd
0x4ba6c4    retf

------> offset: 0x4ba76a
0x4ba76a    add [rax], al
0x4ba76c    jae 0x4ba76f
0x4ba76f    add [rax], dh
0x4ba771    retf 0xfff9

------> offset: 0x4ba76b
0x4ba76b    add [rbx+rsi*2+0x0], cl
0x4ba76f    add [rax], dh
0x4ba771    retf 0xfff9

------> offset: 0x4ba76c
0x4ba76c    jae 0x4ba76f
0x4ba76f    add [rax], dh
0x4ba771    retf 0xfff9

------> offset: 0x4ba76f
0x4ba76f    add [rax], dh
0x4ba771    retf 0xfff9

------> offset: 0x4ba8ad
0x4ba8ad    jz 0x4ba8af
0x4ba8af    add al, dl
0x4ba8b1    retf 0xfff9

------> offset: 0x4ba8af
0x4ba8af    add al, dl
0x4ba8b1    retf 0xfff9

------> offset: 0x4ba9ce
0x4ba9ce    add [rax], al
0x4ba9d0    push rax
0x4ba9d1    iret

------> offset: 0x4baa1e
0x4baa1e    add [rax], al
0x4baa20    nop
0x4baa21    iret

------> offset: 0x4baa20
0x4baa20    nop
0x4baa21    iret

------> offset: 0x4bb53d
0x4bb53d    or eax, 0xfffffffffffa1511
0x4bb542    sbb al, 0xd
0x4bb544    retf 0xfa0b

------> offset: 0x4bb53e
0x4bb53e    adc [rip+0xd1cfffa], edx
0x4bb544    retf 0xfa0b

------> offset: 0x4bb53f
0x4bb53f    adc eax, 0xd1cfffa
0x4bb544    retf 0xfa0b

------> offset: 0x4bb542
0x4bb542    sbb al, 0xd
0x4bb544    retf 0xfa0b

------> offset: 0x4bb544
0x4bb544    retf 0xfa0b

------> offset: 0x4bb920
0x4bb920    add [rdx+0xe], cl
0x4bb923    adc [rbx+0xa530202], al
0x4bb929    ret

------> offset: 0x4bb923
0x4bb923    adc [rbx+0xa530202], al
0x4bb929    ret

------> offset: 0x4bb926
0x4bb926    add dl, [rbx+0xa]
0x4bb929    ret

------> offset: 0x4bb92c
0x4bb92c    or ebp, [r11+0xa]
0x4bb930    ret

------> offset: 0x4bb92d
0x4bb92d    or ebp, [rbx+0xa]
0x4bb930    ret

------> offset: 0x4bb932
0x4bb932    or [rcx+0xb], al
0x4bb935    ret

------> offset: 0x4bb950
0x4bb950    add [rdx+0xe], cl
0x4bb953    adc [rbx+0xa5b0202], al
0x4bb959    ret

------> offset: 0x4bb953
0x4bb953    adc [rbx+0xa5b0202], al
0x4bb959    ret

------> offset: 0x4bb956
0x4bb956    add bl, [rbx+0xa]
0x4bb959    ret

------> offset: 0x4bb95c
0x4bb95c    or rbp, [r11+0xa]
0x4bb960    ret

------> offset: 0x4bb9bc
0x4bb9bc    add dword [rdx], 0x4a
0x4bb9bf    ret

------> offset: 0x4bbe4b
0x4bbe4b    add eax, [rbx+0xae40204]
0x4bbe51    ret

------> offset: 0x4bbe4d
0x4bbe4d    add al, 0x2
0x4bbe4f    in al, 0xa
0x4bbe51    ret

------> offset: 0x4bbe4f
0x4bbe4f    in al, 0xa
0x4bbe51    ret

------> offset: 0x4bcbc4
0x4bcbc4    add dword [rdi], 0x48
0x4bcbc8    or eax, 0x3520303
0x4bcbcd    ret

------> offset: 0x4bcbc7
0x4bcbc7    or rax, 0x3520303
0x4bcbcd    ret

------> offset: 0x4bcbc8
0x4bcbc8    or eax, 0x3520303
0x4bcbcd    ret

------> offset: 0x4bcbca
0x4bcbca    add edx, [rdx+0x3]
0x4bcbcd    ret

------> offset: 0x4bcbda
0x4bcbda    add bl, cl
0x4bcbdc    ret

------> offset: 0x4bd40d
0x4bd40d    lodsd
0x4bd40e    add [rax], al
0x4bd410    iret

------> offset: 0x4bd4c3
0x4bd4c3    add byte [rsi], 0xd
0x4bd4c6    adc ecx, [rax+0xd1cfffb]
0x4bd4cc    ret

------> offset: 0x4bd4c5
0x4bd4c5    or eax, 0xfffffffffffb8813
0x4bd4ca    sbb al, 0xd
0x4bd4cc    ret

------> offset: 0x4bd4c6
0x4bd4c6    adc ecx, [rax+0xd1cfffb]
0x4bd4cc    ret

------> offset: 0x4bdd5b
0x4bdd5b    add eax, [rbp+0xe]
0x4bdd5e    and [rbx+0x1ac0304], al
0x4bdd64    ret

------> offset: 0x4bdd5e
0x4bdd5e    and [rbx+0x1ac0304], al
0x4bdd64    ret

------> offset: 0x4be0a2
0x4be0a2    or [rbx], eax
0x4be0a4    ret 0xa03

------> offset: 0x4be0a4
0x4be0a4    ret 0xa03

------> offset: 0x4be66e
0x4be66e    or r10d, [rax+r8]
0x4be672    add [rax], al
0x4be674    push rsp
0x4be675    ret 0x0

------> offset: 0x4be66f
0x4be66f    or edx, [rax+rax]
0x4be672    add [rax], al
0x4be674    push rsp
0x4be675    ret 0x0

------> offset: 0x4be670
0x4be670    adc al, 0x0
0x4be672    add [rax], al
0x4be674    push rsp
0x4be675    ret 0x0

------> offset: 0x4be672
0x4be672    add [rax], al
0x4be674    push rsp
0x4be675    ret 0x0

------> offset: 0x4be674
0x4be674    push rsp
0x4be675    ret 0x0

------> offset: 0x4be686
0x4be686    add [rax], al
0x4be688    sbb al, 0x0
0x4be68a    add [rax], al
0x4be68c    ins byte [rdi], dx
0x4be68d    ret 0x0

------> offset: 0x4be687
0x4be687    add [rax+rax], bl
0x4be68a    add [rax], al
0x4be68c    ins byte [rdi], dx
0x4be68d    ret 0x0

------> offset: 0x4be688
0x4be688    sbb al, 0x0
0x4be68a    add [rax], al
0x4be68c    ins byte [rdi], dx
0x4be68d    ret 0x0

------> offset: 0x4be68a
0x4be68a    add [rax], al
0x4be68c    ins byte [rdi], dx
0x4be68d    ret 0x0

------> offset: 0x4be68c
0x4be68c    ins byte [rdi], dx
0x4be68d    ret 0x0

------> offset: 0x4be6f1
0x4be6f1    add [rax], al
0x4be6f3    add ah, dl
0x4be6f5    ret 0x0

------> offset: 0x4be6f3
0x4be6f3    add ah, dl
0x4be6f5    ret 0x0

------> offset: 0x4be706
0x4be706    add [rax], al
0x4be708    adc al, 0x0
0x4be70a    add [rax], al
0x4be70c    in al, dx
0x4be70d    ret 0x0

------> offset: 0x4be707
0x4be707    add [rax+rax], dl
0x4be70a    add [rax], al
0x4be70c    in al, dx
0x4be70d    ret 0x0

------> offset: 0x4be708
0x4be708    adc al, 0x0
0x4be70a    add [rax], al
0x4be70c    in al, dx
0x4be70d    ret 0x0

------> offset: 0x4be709
0x4be709    add [rax], al
0x4be70b    add ah, ch
0x4be70d    ret 0x0

------> offset: 0x4be70a
0x4be70a    add [rax], al
0x4be70c    in al, dx
0x4be70d    ret 0x0

------> offset: 0x4be70b
0x4be70b    add ah, ch
0x4be70d    ret 0x0

------> offset: 0x4be70c
0x4be70c    in al, dx
0x4be70d    ret 0x0

------> offset: 0x4be764
0x4be764    add [rax], al
0x4be766    add [rax], al
0x4be768    adc al, 0x0
0x4be76a    add [rax], al
0x4be76c    ret

------> offset: 0x4be765
0x4be765    add [rax], al
0x4be767    add [rax+rax], dl
0x4be76a    add [rax], al
0x4be76c    ret

------> offset: 0x4be766
0x4be766    add [rax], al
0x4be768    adc al, 0x0
0x4be76a    add [rax], al
0x4be76c    ret

------> offset: 0x4be767
0x4be767    add [rax+rax], dl
0x4be76a    add [rax], al
0x4be76c    ret

------> offset: 0x4be768
0x4be768    adc al, 0x0
0x4be76a    add [rax], al
0x4be76c    ret

------> offset: 0x4be77c
0x4be77c    add [rax], al
0x4be77e    add [rax], al
0x4be780    sub al, 0x0
0x4be782    add [rax], al
0x4be784    ret

------> offset: 0x4be77d
0x4be77d    add [rax], al
0x4be77f    add [rax+rax], ch
0x4be782    add [rax], al
0x4be784    ret

------> offset: 0x4be77e
0x4be77e    add [rax], al
0x4be780    sub al, 0x0
0x4be782    add [rax], al
0x4be784    ret

------> offset: 0x4be77f
0x4be77f    add [rax+rax], ch
0x4be782    add [rax], al
0x4be784    ret

------> offset: 0x4be780
0x4be780    sub al, 0x0
0x4be782    add [rax], al
0x4be784    ret

------> offset: 0x4be7ac
0x4be7ac    or r8d, [rax]
0x4be7af    add [rax+rax], dl
0x4be7b2    add [rax], al
0x4be7b4    xchg esp, eax
0x4be7b5    ret

------> offset: 0x4be7ad
0x4be7ad    or eax, [rax]
0x4be7af    add [rax+rax], dl
0x4be7b2    add [rax], al
0x4be7b4    xchg esp, eax
0x4be7b5    ret

------> offset: 0x4be7ae
0x4be7ae    add [rax], al
0x4be7b0    adc al, 0x0
0x4be7b2    add [rax], al
0x4be7b4    xchg esp, eax
0x4be7b5    ret

------> offset: 0x4be7af
0x4be7af    add [rax+rax], dl
0x4be7b2    add [rax], al
0x4be7b4    xchg esp, eax
0x4be7b5    ret

------> offset: 0x4be7b0
0x4be7b0    adc al, 0x0
0x4be7b2    add [rax], al
0x4be7b4    xchg esp, eax
0x4be7b5    ret

------> offset: 0x4be7b2
0x4be7b2    add [rax], al
0x4be7b4    xchg esp, eax
0x4be7b5    ret

------> offset: 0x4be7c4
0x4be7c4    add [rax], al
0x4be7c6    add [rax], al
0x4be7c8    test [rax], al
0x4be7ca    add [rax], al
0x4be7cc    lodsb
0x4be7cd    ret

------> offset: 0x4be7c6
0x4be7c6    add [rax], al
0x4be7c8    test [rax], al
0x4be7ca    add [rax], al
0x4be7cc    lodsb
0x4be7cd    ret

------> offset: 0x4be7c8
0x4be7c8    test [rax], al
0x4be7ca    add [rax], al
0x4be7cc    lodsb
0x4be7cd    ret

------> offset: 0x4be7ca
0x4be7ca    add [rax], al
0x4be7cc    lodsb
0x4be7cd    ret

------> offset: 0x4be7cc
0x4be7cc    lodsb
0x4be7cd    ret

------> offset: 0x4bee66
0x4bee66    or eax, [rax]
0x4bee68    and al, 0x0
0x4bee6a    add [rax], al
0x4bee6c    retf 0x0

------> offset: 0x4bee67
0x4bee67    add [rax+rax], ah
0x4bee6a    add [rax], al
0x4bee6c    retf 0x0

------> offset: 0x4bee68
0x4bee68    and al, 0x0
0x4bee6a    add [rax], al
0x4bee6c    retf 0x0

------> offset: 0x4bef7a
0x4bef7a    add [rax], al
0x4bef7c    pop rsp
0x4bef7d    retf

------> offset: 0x4bef7c
0x4bef7c    pop rsp
0x4bef7d    retf

------> offset: 0x4befdc
0x4befdc    add [rax], al
0x4befde    add [rax], al
0x4befe0    add [rax], r8b
0x4befe3    add ah, al
0x4befe5    retf

------> offset: 0x4befdd
0x4befdd    add [rax], al
0x4befdf    add [rax+rax+0x0], cl
0x4befe3    add ah, al
0x4befe5    retf

------> offset: 0x4befde
0x4befde    add [rax], al
0x4befe0    add [rax], r8b
0x4befe3    add ah, al
0x4befe5    retf

------> offset: 0x4befdf
0x4befdf    add [rax+rax+0x0], cl
0x4befe3    add ah, al
0x4befe5    retf

------> offset: 0x4befe0
0x4befe0    add [rax], r8b
0x4befe3    add ah, al
0x4befe5    retf

------> offset: 0x4befe1
0x4befe1    add [rax], al
0x4befe3    add ah, al
0x4befe5    retf

------> offset: 0x4befe3
0x4befe3    add ah, al
0x4befe5    retf

------> offset: 0x4bf138
0x4bf138    add [rbx+0xe], bl
0x4bf13b    adc [rbx+0xa4a0202], al
0x4bf141    ret

------> offset: 0x4bf13b
0x4bf13b    adc [rbx+0xa4a0202], al
0x4bf141    ret

------> offset: 0x4bf13e
0x4bf13e    add cl, [rdx+0xa]
0x4bf141    ret

------> offset: 0x4bf143
0x4bf143    or [rbp+0xb], al
0x4bf146    push rbx
0x4bf147    ret

------> offset: 0x4bf27e
0x4bf27e    retf 0xe0a

------> offset: 0x4bf415
0x4bf415    add bh, bh
0x4bf417    inc dword [rcx]
0x4bf419    or ebp, edx
0x4bf41b    add [rbx], eax
0x4bf41d    ret

------> offset: 0x4bf417
0x4bf417    inc dword [rcx]
0x4bf419    or ebp, edx
0x4bf41b    add [rbx], eax
0x4bf41d    ret

------> offset: 0x4bf419
0x4bf419    or ebp, edx
0x4bf41b    add [rbx], eax
0x4bf41d    ret

------> offset: 0x4bf41b
0x4bf41b    add [rbx], eax
0x4bf41d    ret

